{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"game-record-view\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _ctx.getHVI.value1 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: \"record-info\",\n    style: _normalizeStyle({\n      backgroundColor: $data.recordInfoBG\n    })\n  }, [_createElementVNode(\"i\", {\n    class: \"bi bi-x\",\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.toggleHVI({\n      value1: false,\n      value2: null\n    }))\n  }), _cache[6] || (_cache[6] = _createElementVNode(\"h4\", null, [_createElementVNode(\"strong\", null, \"Latest Record\")], -1)), _createElementVNode(\"h4\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"strong\", null, \"Challenge:\", -1)), _createTextVNode(\" \" + _toDisplayString($data.recordData.challenge), 1)]), _createElementVNode(\"h4\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"strong\", null, \"Time Finish:\", -1)), _createTextVNode(\" \" + _toDisplayString($data.recordData.timeFinish) + \" sec\", 1)]), _createElementVNode(\"h4\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"strong\", null, \"Score:\", -1)), _createTextVNode(\" \" + _toDisplayString($data.recordData.score), 1)]), _createElementVNode(\"h4\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"strong\", null, \"Number of Attempts:\", -1)), _createTextVNode(\" \" + _toDisplayString($data.recordData.attempt), 1)]), _createElementVNode(\"h4\", null, [_cache[5] || (_cache[5] = _createElementVNode(\"strong\", null, \"Date of Latest Attempt:\", -1)), _createTextVNode(\" \" + _toDisplayString($data.recordData.date), 1)])], 4)])) : _createCommentVNode(\"\", true);\n}","map":{"version":3,"names":["key","class","_ctx","getHVI","value1","_createElementBlock","_hoisted_1","_createElementVNode","style","_normalizeStyle","backgroundColor","$data","recordInfoBG","onClick","_cache","$event","toggleHVI","value2","_createTextVNode","_toDisplayString","recordData","challenge","timeFinish","score","attempt","date","_createCommentVNode"],"sources":["C:\\Users\\ruzhe\\CODEHUB-PH\\GAMES\\code-master\\src\\components\\Dashboard\\GameComponents\\GameRecordsInfo.vue"],"sourcesContent":["<template>\r\n    <div class=\"game-record-view\" v-if=\"getHVI.value1\">\r\n        <div class=\"record-info\" :style=\"{ backgroundColor: recordInfoBG }\">\r\n            <i class=\"bi bi-x\" @click=\"toggleHVI({ value1: false, value2: null })\"></i>\r\n            <h4><strong>Latest Record</strong></h4>\r\n            <h4><strong>Challenge:</strong> {{ recordData.challenge }}</h4>\r\n            <h4><strong>Time Finish:</strong> {{ recordData.timeFinish }} sec</h4>\r\n            <h4><strong>Score:</strong> {{ recordData.score }}</h4>\r\n            <h4><strong>Number of Attempts:</strong> {{ recordData.attempt }}</h4>\r\n            <h4><strong>Date of Latest Attempt:</strong> {{ recordData.date }}</h4>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapActions } from 'vuex';\r\nimport { getPreference } from '@/utils/PreferencesService';\r\nimport { formatDate } from '@/utils/GameUtils';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            recordInfoBG: '',\r\n            recordData: {},\r\n        };\r\n    },\r\n    computed: {\r\n        ...mapGetters(['getHVI', 'currentTheme']),\r\n    },\r\n    methods: {\r\n        ...mapActions(['toggleHVI']),\r\n        async fetchRecordData() {\r\n            const keys = this.getHVI.value2;\r\n            const attemptKeys = keys ? `${keys}-ATTEMPT` : '';\r\n\r\n            if (keys) {\r\n                let combinedData = {};\r\n\r\n                try {\r\n                    const data = await getPreference(keys);\r\n                    combinedData.data = data;\r\n                } catch (error) {\r\n                    console.error('Error reading or parsing main data file', error);\r\n                }\r\n\r\n                try {\r\n                    const attemptData = await getPreference(attemptKeys);\r\n                    combinedData.attemptData = attemptData;\r\n                } catch (error) {\r\n                    console.error('Error reading or parsing attempt data file', error);\r\n                }\r\n\r\n                this.recordData = {\r\n                    ...combinedData.data,\r\n                    attempt: combinedData.attemptData?.attempt || 'N/A',\r\n                    date: combinedData.attemptData?.date ? formatDate(combinedData.attemptData.date) : 'N/A'\r\n                };\r\n            }\r\n        },\r\n\r\n        current_theme() {\r\n            this.recordInfoBG = this.currentTheme === 'dark' ? 'rgb(100, 100, 100)' : 'rgb(220, 220, 220)';\r\n        }\r\n    },\r\n    mounted() {\r\n        this.current_theme();\r\n        if (this.getHVI.value1) {\r\n            this.fetchRecordData();\r\n        }\r\n    },\r\n    watch: {\r\n        'getHVI.value2': function (newVal) {\r\n            if (newVal) {\r\n                this.fetchRecordData();\r\n            }\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style>\r\n.game-record-view {\r\n    position: absolute;\r\n    height: calc(100vh - 40px);\r\n    width: calc(100vw - 40px);\r\n    padding: 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    z-index: 10000;\r\n}\r\n\r\n.record-info {\r\n    position: relative;\r\n    padding: 20px;\r\n    height: 210px;\r\n    width: 260px;\r\n    box-shadow: 2px 2px 5px black;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    border-radius: 10px;\r\n    gap: 10px;\r\n}\r\n\r\n.record-info h4 {\r\n    margin: 0;\r\n    font-weight: normal;\r\n}\r\n\r\n.bi-x {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    font-size: 1.8rem;\r\n    margin: 5px;\r\n}\r\n</style>\r\n"],"mappings":";;EAAAA,GAAA;EACSC,KAAK,EAAC;;;SAAyBC,IAAA,CAAAC,MAAM,CAACC,MAAM,I,cAAjDC,mBAAA,CAUM,OAVNC,UAUM,GATFC,mBAAA,CAQM;IARDN,KAAK,EAAC,aAAa;IAAEO,KAAK,EAFvCC,eAAA;MAAAC,eAAA,EAE4DC,KAAA,CAAAC;IAAY;MAC5DL,mBAAA,CAA2E;IAAxEN,KAAK,EAAC,SAAS;IAAEY,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEb,IAAA,CAAAc,SAAS;MAAAZ,MAAA;MAAAa,MAAA;IAAA;gCACpCV,mBAAA,CAAuC,aAAnCA,mBAAA,CAA8B,gBAAtB,eAAa,E,QACzBA,mBAAA,CAA+D,a,0BAA3DA,mBAAA,CAA2B,gBAAnB,YAAU,QALlCW,gBAAA,CAK2C,GAAC,GAAAC,gBAAA,CAAGR,KAAA,CAAAS,UAAU,CAACC,SAAS,M,GACvDd,mBAAA,CAAsE,a,0BAAlEA,mBAAA,CAA6B,gBAArB,cAAY,QANpCW,gBAAA,CAM6C,GAAC,GAAAC,gBAAA,CAAGR,KAAA,CAAAS,UAAU,CAACE,UAAU,IAAG,MAAI,K,GACjEf,mBAAA,CAAuD,a,0BAAnDA,mBAAA,CAAuB,gBAAf,QAAM,QAP9BW,gBAAA,CAOuC,GAAC,GAAAC,gBAAA,CAAGR,KAAA,CAAAS,UAAU,CAACG,KAAK,M,GAC/ChB,mBAAA,CAAsE,a,0BAAlEA,mBAAA,CAAoC,gBAA5B,qBAAmB,QAR3CW,gBAAA,CAQoD,GAAC,GAAAC,gBAAA,CAAGR,KAAA,CAAAS,UAAU,CAACI,OAAO,M,GAC9DjB,mBAAA,CAAuE,a,0BAAnEA,mBAAA,CAAwC,gBAAhC,yBAAuB,QAT/CW,gBAAA,CASwD,GAAC,GAAAC,gBAAA,CAAGR,KAAA,CAAAS,UAAU,CAACK,IAAI,M,YAT3EC,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}