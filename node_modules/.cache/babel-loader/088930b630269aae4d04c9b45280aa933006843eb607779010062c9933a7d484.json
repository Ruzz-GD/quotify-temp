{"ast":null,"code":"import { mapGetters } from 'vuex';\nexport default {\n  created() {\n    const checkRoute = sessionStorage.getItem('current-route');\n    if (!checkRoute) {\n      sessionStorage.setItem('current-route', 'home');\n    }\n    const checkTheme = localStorage.getItem('theme');\n    if (!checkTheme) {\n      localStorage.setItem('theme', 'dark');\n    }\n  },\n  computed: {\n    ...mapGetters(['currentTheme', 'networkStatus', 'netNotifCon', 'netNotifAn', 'gameOverlay']),\n    themeClass() {\n      return this.currentTheme === 'dark' ? 'dark-theme' : 'light-theme';\n    },\n    netNotifContainer() {\n      return this.netNotifCon;\n    },\n    netNotifAnimation() {\n      return this.netNotifAn;\n    }\n  },\n  methods: {\n    checkNetwork() {\n      this.$store.dispatch('checkNetworkStatus');\n    },\n    playBackgroundMusic() {\n      const audio = this.$refs.backgroundMusic;\n      if (audio) {\n        audio.play().catch(error => {\n          console.error('Audio playback failed:', error);\n        });\n        localStorage.setItem('musicPlaying', 'true');\n      }\n    },\n    checkMusicStatus() {\n      if (localStorage.getItem('musicPlaying') === 'true') {\n        const audio = this.$refs.backgroundMusic;\n        if (audio) {\n          audio.play().catch(error => {\n            console.error('Audio playback failed:', error);\n          });\n        }\n      }\n    }\n  },\n  mounted() {\n    this.checkNetwork();\n    this.checkMusicStatus(); // Check if music should be playing on mount\n  }\n};","map":{"version":3,"names":["mapGetters","created","checkRoute","sessionStorage","getItem","setItem","checkTheme","localStorage","computed","themeClass","currentTheme","netNotifContainer","netNotifCon","netNotifAnimation","netNotifAn","methods","checkNetwork","$store","dispatch","playBackgroundMusic","audio","$refs","backgroundMusic","play","catch","error","console","checkMusicStatus","mounted"],"sources":["C:\\Users\\ruzhe\\CODEHUB-PH\\GAMES\\code-master\\src\\App.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- Background Music -->\n    <audio id=\"background-music\" ref=\"backgroundMusic\" loop>\n      <source src=\"./assets/audio/fatrat.mp3\" type=\"audio/mpeg\" />\n      Your browser does not support the audio element.\n    </audio>\n\n    <!-- User Interaction Button -->\n    <button @click=\"playBackgroundMusic\">Start Music</button>\n\n    <!-- Existing template content -->\n    <div class=\"network-status\" v-if=\"netNotifContainer\" :class=\"{ 'net-status-notif': netNotifAnimation }\">\n      <span style=\"color:rgb(41, 219, 13)\" v-if=\"networkStatus === true\">You are online</span>\n      <span style=\"color:rgb(255, 38, 0);\" v-if=\"networkStatus === false\">You are offline</span>\n    </div>\n    <div class=\"main-view\" :class=\"themeClass\">\n      <router-view />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\n\nexport default {\n  created() {\n    const checkRoute = sessionStorage.getItem('current-route');\n    if (!checkRoute) {\n      sessionStorage.setItem('current-route', 'home');\n    }\n    const checkTheme = localStorage.getItem('theme');\n    if (!checkTheme) {\n      localStorage.setItem('theme', 'dark');\n    }\n  },\n  computed: {\n    ...mapGetters(['currentTheme', 'networkStatus', 'netNotifCon', 'netNotifAn', 'gameOverlay']),\n    themeClass() {\n      return this.currentTheme === 'dark' ? 'dark-theme' : 'light-theme';\n    },\n    netNotifContainer() {\n      return this.netNotifCon;\n    },\n    netNotifAnimation() {\n      return this.netNotifAn;\n    }\n  },\n  methods: {\n    checkNetwork() {\n      this.$store.dispatch('checkNetworkStatus');\n    },\n    playBackgroundMusic() {\n      const audio = this.$refs.backgroundMusic;\n      if (audio) {\n        audio.play().catch(error => {\n          console.error('Audio playback failed:', error);\n        });\n        localStorage.setItem('musicPlaying', 'true');\n      }\n    },\n    checkMusicStatus() {\n      if (localStorage.getItem('musicPlaying') === 'true') {\n        const audio = this.$refs.backgroundMusic;\n        if (audio) {\n          audio.play().catch(error => {\n            console.error('Audio playback failed:', error);\n          });\n        }\n      }\n    }\n  },\n  mounted() {\n    this.checkNetwork();\n    this.checkMusicStatus(); // Check if music should be playing on mount\n  }\n}\n</script>\n\n<style>\n@import \"./assets/style/GlobalStyle.css\";\n@import \"../node_modules/bootstrap-icons/font/bootstrap-icons.css\";\n\n.network-status {\n  position: absolute;\n  width: calc(100% - 10px);\n  background-color: rgb(250, 250, 250);\n  padding: 5px;\n  display: flex;\n  justify-content: center;\n  transform: translateY(-30px);\n  transition: transform 0.5s ease-in-out;\n  z-index: 9999;\n}\n\n.network-status.net-status-notif {\n  transform: translateY(0);\n}\n\n.network-status span {\n  font-weight: bold;\n}\n\naudio {\n  display: none; /* Hides the audio player */\n}\n</style>\n"],"mappings":"AAuBA,SAASA,UAAS,QAAS,MAAM;AAEjC,eAAe;EACbC,OAAOA,CAAA,EAAG;IACR,MAAMC,UAAS,GAAIC,cAAc,CAACC,OAAO,CAAC,eAAe,CAAC;IAC1D,IAAI,CAACF,UAAU,EAAE;MACfC,cAAc,CAACE,OAAO,CAAC,eAAe,EAAE,MAAM,CAAC;IACjD;IACA,MAAMC,UAAS,GAAIC,YAAY,CAACH,OAAO,CAAC,OAAO,CAAC;IAChD,IAAI,CAACE,UAAU,EAAE;MACfC,YAAY,CAACF,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC;IACvC;EACF,CAAC;EACDG,QAAQ,EAAE;IACR,GAAGR,UAAU,CAAC,CAAC,cAAc,EAAE,eAAe,EAAE,aAAa,EAAE,YAAY,EAAE,aAAa,CAAC,CAAC;IAC5FS,UAAUA,CAAA,EAAG;MACX,OAAO,IAAI,CAACC,YAAW,KAAM,MAAK,GAAI,YAAW,GAAI,aAAa;IACpE,CAAC;IACDC,iBAAiBA,CAAA,EAAG;MAClB,OAAO,IAAI,CAACC,WAAW;IACzB,CAAC;IACDC,iBAAiBA,CAAA,EAAG;MAClB,OAAO,IAAI,CAACC,UAAU;IACxB;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,YAAYA,CAAA,EAAG;MACb,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,oBAAoB,CAAC;IAC5C,CAAC;IACDC,mBAAmBA,CAAA,EAAG;MACpB,MAAMC,KAAI,GAAI,IAAI,CAACC,KAAK,CAACC,eAAe;MACxC,IAAIF,KAAK,EAAE;QACTA,KAAK,CAACG,IAAI,CAAC,CAAC,CAACC,KAAK,CAACC,KAAI,IAAK;UAC1BC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAChD,CAAC,CAAC;QACFlB,YAAY,CAACF,OAAO,CAAC,cAAc,EAAE,MAAM,CAAC;MAC9C;IACF,CAAC;IACDsB,gBAAgBA,CAAA,EAAG;MACjB,IAAIpB,YAAY,CAACH,OAAO,CAAC,cAAc,MAAM,MAAM,EAAE;QACnD,MAAMgB,KAAI,GAAI,IAAI,CAACC,KAAK,CAACC,eAAe;QACxC,IAAIF,KAAK,EAAE;UACTA,KAAK,CAACG,IAAI,CAAC,CAAC,CAACC,KAAK,CAACC,KAAI,IAAK;YAC1BC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;UAChD,CAAC,CAAC;QACJ;MACF;IACF;EACF,CAAC;EACDG,OAAOA,CAAA,EAAG;IACR,IAAI,CAACZ,YAAY,CAAC,CAAC;IACnB,IAAI,CAACW,gBAAgB,CAAC,CAAC,EAAE;EAC3B;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}