{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapGetters } from 'vuex';\nexport default {\n  data() {\n    return {\n      btnfontcolor: '',\n      btnBorderColor: '',\n      ThemeContainerBg: '',\n      themeOverlay: false\n    };\n  },\n  computed: {\n    ...mapGetters(['currentTheme'])\n  },\n  methods: {\n    checkTheme() {\n      const theme = this.currentTheme;\n      if (theme === 'dark') {\n        this.btnfontcolor = 'white';\n        this.btnBorderColor = 'white';\n        this.ThemeContainerBg = 'rgb(100, 100, 100)';\n      } else {\n        this.btnfontcolor = 'black';\n        this.btnBorderColor = 'black';\n        this.ThemeContainerBg = 'rgb(240, 240, 240)';\n      }\n    },\n    LightMode(theme) {\n      this.$store.dispatch('toggleTheme', theme);\n      this.ActiveTheme = 'light';\n      this.checkTheme();\n    },\n    DarkMode(theme) {\n      this.$store.dispatch('toggleTheme', theme);\n      this.ActiveTheme = 'dark';\n      this.checkTheme();\n    },\n    openThemeContainer() {\n      this.themeOverlay = true;\n    },\n    themeExit() {\n      this.themeOverlay = false;\n    },\n    exitSetting() {\n      sessionStorage.setItem('current-route', 'home');\n      this.$router.push('/home');\n    }\n  },\n  mounted() {\n    this.checkTheme();\n  }\n};","map":{"version":3,"names":["mapGetters","data","btnfontcolor","btnBorderColor","ThemeContainerBg","themeOverlay","computed","methods","checkTheme","theme","currentTheme","LightMode","$store","dispatch","ActiveTheme","DarkMode","openThemeContainer","themeExit","exitSetting","sessionStorage","setItem","$router","push","mounted"],"sources":["C:\\Users\\ruzhe\\CODEHUB-PH\\GAMES\\code-master\\src\\components\\Dashboard\\HomeComponents\\HomeSetting.vue"],"sourcesContent":["<template>\r\n    <div class=\"setting-route\">\r\n        <i @click=\"exitSetting\" class=\"bi bi-arrow-left\"></i>\r\n        <div class=\"theme-overlay\" v-if=\"themeOverlay\">\r\n            <div class=\"theme-container\" :style=\"{ backgroundColor: ThemeContainerBg }\">\r\n                <i @click=\"themeExit\" class=\"bi bi-x theme-exit\"></i>\r\n                <button @click=\"LightMode('light')\" :style=\"{ color: btnfontcolor }\">\r\n                    Light <i class=\"bi bi-check-circle-fill selected-theme\" v-if=\"currentTheme === 'light'\"></i>\r\n                </button>\r\n                <button @click=\"DarkMode('dark')\" :style=\"{ color: btnfontcolor }\">\r\n                    Dark <i class=\"bi bi-check-circle-fill selected-theme\" v-if=\"currentTheme === 'dark'\"></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <h3>Setting</h3>\r\n        <div class=\"setting-container\">\r\n            <button @click=\"openThemeContainer\" :style=\"{ color: btnfontcolor, borderColor: btnBorderColor }\">\r\n                <i class=\"bi bi-palette\"></i>Theme\r\n            </button>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {mapGetters} from 'vuex';\r\nexport default {\r\n    data() {\r\n        return {\r\n            btnfontcolor: '', \r\n            btnBorderColor: '',\r\n            ThemeContainerBg: '',\r\n            themeOverlay: false, \r\n        };\r\n    },\r\n    computed:{\r\n        ...mapGetters(['currentTheme'])\r\n    },\r\n    methods: {\r\n        checkTheme() {\r\n            const theme = this.currentTheme; \r\n            if (theme === 'dark') {\r\n                this.btnfontcolor = 'white';\r\n                this.btnBorderColor = 'white';\r\n                this.ThemeContainerBg = 'rgb(100, 100, 100)';\r\n            } else {\r\n                this.btnfontcolor = 'black'; \r\n                this.btnBorderColor = 'black'; \r\n                this.ThemeContainerBg = 'rgb(240, 240, 240)';\r\n            }\r\n        },\r\n        LightMode(theme) {\r\n            this.$store.dispatch('toggleTheme',theme)\r\n            this.ActiveTheme = 'light'; \r\n            this.checkTheme();\r\n        },\r\n        DarkMode(theme) {\r\n            this.$store.dispatch('toggleTheme',theme)\r\n            this.ActiveTheme = 'dark'; \r\n            this.checkTheme(); \r\n        },\r\n        openThemeContainer(){\r\n            this.themeOverlay = true\r\n        },\r\n        themeExit(){\r\n            this.themeOverlay = false\r\n        },\r\n        exitSetting(){\r\n            sessionStorage.setItem('current-route', 'home');\r\n            this.$router.push('/home')\r\n        }\r\n    },\r\n    mounted() {\r\n        this.checkTheme(); \r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.setting-route {\r\n    position: relative;\r\n    overflow: hidden;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 20px;\r\n    gap: 10px;\r\n    height: calc(100vh - 40px);\r\n    width: calc(100vw - 40px);\r\n}\r\n.setting-route h3 {\r\n    text-align: center;\r\n}\r\n.setting-container button {\r\n    width: 100%;\r\n    font-size: 1.1rem;\r\n    text-align: start;\r\n    padding: 10px;\r\n    border: solid 1px;\r\n    background-color: transparent;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n}\r\n.setting-route i {\r\n    font-size: 1.5rem;\r\n}\r\n.theme-overlay {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    height: 100vh;\r\n    width: 100vw;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n.theme-container {\r\n    position: relative;\r\n    height: 100%;\r\n    aspect-ratio: 1;\r\n    max-height: 220px;\r\n    border-radius: 10px;\r\n    box-shadow: 2px 2px 5px black;\r\n    padding: 30px 20px;\r\n}\r\n.theme-container button {\r\n    width: 100%;\r\n    font-size: 1.1rem;\r\n    text-align: start;\r\n    padding: 10px;\r\n    border: none;\r\n    border-bottom: solid 1px black;\r\n    background-color: transparent;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    gap: 10px;\r\n}\r\n.selected-theme {\r\n    font-size: 1.3rem !important;\r\n    color: rgb(61, 227, 19);\r\n}\r\n.theme-exit{\r\n    position: absolute;\r\n    top: 0;\r\n    margin: 5px;\r\n    right: 0;\r\n}\r\n</style>\r\n"],"mappings":";AAwBA,SAAQA,UAAU,QAAO,MAAM;AAC/B,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,YAAY,EAAE,EAAE;MAChBC,cAAc,EAAE,EAAE;MAClBC,gBAAgB,EAAE,EAAE;MACpBC,YAAY,EAAE;IAClB,CAAC;EACL,CAAC;EACDC,QAAQ,EAAC;IACL,GAAGN,UAAU,CAAC,CAAC,cAAc,CAAC;EAClC,CAAC;EACDO,OAAO,EAAE;IACLC,UAAUA,CAAA,EAAG;MACT,MAAMC,KAAI,GAAI,IAAI,CAACC,YAAY;MAC/B,IAAID,KAAI,KAAM,MAAM,EAAE;QAClB,IAAI,CAACP,YAAW,GAAI,OAAO;QAC3B,IAAI,CAACC,cAAa,GAAI,OAAO;QAC7B,IAAI,CAACC,gBAAe,GAAI,oBAAoB;MAChD,OAAO;QACH,IAAI,CAACF,YAAW,GAAI,OAAO;QAC3B,IAAI,CAACC,cAAa,GAAI,OAAO;QAC7B,IAAI,CAACC,gBAAe,GAAI,oBAAoB;MAChD;IACJ,CAAC;IACDO,SAASA,CAACF,KAAK,EAAE;MACb,IAAI,CAACG,MAAM,CAACC,QAAQ,CAAC,aAAa,EAACJ,KAAK;MACxC,IAAI,CAACK,WAAU,GAAI,OAAO;MAC1B,IAAI,CAACN,UAAU,CAAC,CAAC;IACrB,CAAC;IACDO,QAAQA,CAACN,KAAK,EAAE;MACZ,IAAI,CAACG,MAAM,CAACC,QAAQ,CAAC,aAAa,EAACJ,KAAK;MACxC,IAAI,CAACK,WAAU,GAAI,MAAM;MACzB,IAAI,CAACN,UAAU,CAAC,CAAC;IACrB,CAAC;IACDQ,kBAAkBA,CAAA,EAAE;MAChB,IAAI,CAACX,YAAW,GAAI,IAAG;IAC3B,CAAC;IACDY,SAASA,CAAA,EAAE;MACP,IAAI,CAACZ,YAAW,GAAI,KAAI;IAC5B,CAAC;IACDa,WAAWA,CAAA,EAAE;MACTC,cAAc,CAACC,OAAO,CAAC,eAAe,EAAE,MAAM,CAAC;MAC/C,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,OAAO;IAC7B;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACf,UAAU,CAAC,CAAC;EACrB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}