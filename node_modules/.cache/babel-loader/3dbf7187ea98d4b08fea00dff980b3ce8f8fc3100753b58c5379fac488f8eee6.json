{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nimport _imports_0 from './assets/search-glass.png';\nconst _hoisted_1 = {\n  class: \"app\"\n};\nconst _hoisted_2 = {\n  class: \"search-bar-container\"\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = {\n  key: 0,\n  class: \"modal-overlay\"\n};\nconst _hoisted_5 = {\n  class: \"modal\"\n};\nconst _hoisted_6 = {\n  class: \"quote-title\"\n};\nconst _hoisted_7 = {\n  class: \"quote-meaning\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Search box \"), _createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.search = $event),\n    type: \"text\",\n    placeholder: \"Search quotes...\",\n    class: \"search-input\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.search]]), _cache[1] || (_cache[1] = _createElementVNode(\"img\", {\n    src: _imports_0,\n    alt: \"glass\",\n    class: \"search-glass\"\n  }, null, -1 /* HOISTED */))]), _createCommentVNode(\" List of quotes \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.filteredQuotes, quote => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: quote.id,\n      class: \"quote-item\"\n    }, [_createElementVNode(\"button\", {\n      onClick: $event => $setup.openModal(quote),\n      class: \"quote-button\"\n    }, _toDisplayString(quote.name), 9 /* TEXT, PROPS */, _hoisted_3)]);\n  }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" Modal \"), $setup.showModal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"button\", {\n    onClick: $setup.closeModal,\n    class: \"back-button\"\n  }, \"← Back\"), _createElementVNode(\"h2\", _hoisted_6, _toDisplayString($setup.selectedQuote.name), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_7, _toDisplayString($setup.selectedQuote.meaning), 1 /* TEXT */)])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_imports_0","class","key","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_cache","$event","$setup","search","type","placeholder","src","alt","_Fragment","_renderList","filteredQuotes","quote","id","onClick","openModal","name","_hoisted_3","showModal","_hoisted_4","_hoisted_5","closeModal","_hoisted_6","_toDisplayString","selectedQuote","_hoisted_7","meaning"],"sources":["C:\\Users\\ruzhe\\mobile-apps-games-container\\Quotify\\src\\App.vue"],"sourcesContent":["<template>\n  <div class=\"app\">\n\n    <!-- Search box -->\n     <div class=\"search-bar-container\">\n      <input v-model=\"search\" type=\"text\" placeholder=\"Search quotes...\" class=\"search-input\"/>\n      <img src=\"./assets/search-glass.png\" alt=\"glass\" class=\"search-glass\">\n     </div>\n\n\n    <!-- List of quotes -->\n    <div v-for=\"quote in filteredQuotes\" :key=\"quote.id\" class=\"quote-item\">\n      <button @click=\"openModal(quote)\" class=\"quote-button\">\n        {{ quote.name }}\n      </button>\n    </div>\n\n    <!-- Modal -->\n    <div v-if=\"showModal\" class=\"modal-overlay\">\n      <div class=\"modal\">\n        <button @click=\"closeModal\" class=\"back-button\">← Back</button>\n        <h2 class=\"quote-title\">{{ selectedQuote.name }}</h2>\n        <p class=\"quote-meaning\">{{ selectedQuote.meaning }}</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue'\n\nconst quotes = ref([\n  { id: 1, name: 'Carpe Diem', meaning: 'Seize the day' },\n  { id: 2, name: 'Memento Mori', meaning: 'Remember you will die' },\n  { id: 3, name: 'Amor Fati', meaning: 'Love your fate' },\n])\n\nconst search = ref('')\nconst showModal = ref(false)\nconst selectedQuote = ref({})\n\nconst filteredQuotes = computed(() => {\n  return quotes.value.filter(q =>\n    q.name.toLowerCase().includes(search.value.toLowerCase())\n  )\n})\n\nconst openModal = (quote) => {\n  selectedQuote.value = quote\n  showModal.value = true\n}\n\nconst closeModal = () => {\n  showModal.value = false\n}\n</script>\n\n<style>\n/* Layout and typography */\nbody {\n  margin: 0;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  background-color: pink;\n}\n\n.app {\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  flex-direction: column;\n  gap:10px;\n}\n.search-bar-container{\n  position: relative;\n  display: flex;\n}\n/* Search bar */\n.search-input {\n  width: 100%;\n  font-size: 16px;\n  border: none;\n  background-color: transparent;\n}\n.search-glass{\n  max-width: 25px;\n}\n/* Quote list items */\n.quote-item {\n  margin-bottom: 12px;\n}\n\n.quote-button {\n  background: none;\n  border: none;\n  color: #0066cc;\n  font-size: 18px;\n  cursor: pointer;\n  text-align: left;\n  padding: 0;\n}\n\n.quote-button:hover {\n\n}\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.7);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 999;\n}\n\n.modal {\n  background-color: #fff;\n  padding: 24px;\n  border-radius: 8px;\n  max-width: 500px;\n  width: 90%;\n  position: relative;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);\n}\n\n/* Back button */\n.back-button {\n  position: absolute;\n  top: 16px;\n  left: 16px;\n  background: none;\n  border: none;\n  font-size: 18px;\n  cursor: pointer;\n  color: #555;\n}\n\n.back-button:hover {\n  color: #000;\n}\n\n/* Modal content */\n.quote-title {\n  margin-top: 40px;\n  font-size: 24px;\n  font-weight: bold;\n}\n\n.quote-meaning {\n  margin-top: 12px;\n  font-size: 18px;\n  color: #444;\n}\n</style>\n"],"mappings":";OAMWA,UAA+B;;EALnCC,KAAK,EAAC;AAAK;;EAGRA,KAAK,EAAC;AAAsB;mBAJtC;;EAAAC,GAAA;EAkB0BD,KAAK,EAAC;;;EACrBA,KAAK,EAAC;AAAO;;EAEZA,KAAK,EAAC;AAAa;;EACpBA,KAAK,EAAC;AAAe;;uBArB9BE,mBAAA,CAwBM,OAxBNC,UAwBM,GAtBJC,mBAAA,gBAAmB,EAClBC,mBAAA,CAGM,OAHNC,UAGM,G,gBAFLD,mBAAA,CAAyF;IAL/F,uBAAAE,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAKsBC,MAAA,CAAAC,MAAM,GAAAF,MAAA;IAAEG,IAAI,EAAC,MAAM;IAACC,WAAW,EAAC,kBAAkB;IAACZ,KAAK,EAAC;iDAAzDS,MAAA,CAAAC,MAAM,E,6BACtBL,mBAAA,CAAsE;IAAjEQ,GAA+B,EAA/Bd,UAA+B;IAACe,GAAG,EAAC,OAAO;IAACd,KAAK,EAAC;iCAIzDI,mBAAA,oBAAuB,G,kBACvBF,mBAAA,CAIMa,SAAA,QAfVC,WAAA,CAWyBP,MAAA,CAAAQ,cAAc,EAAvBC,KAAK;yBAAjBhB,mBAAA,CAIM;MAJgCD,GAAG,EAAEiB,KAAK,CAACC,EAAE;MAAEnB,KAAK,EAAC;QACzDK,mBAAA,CAES;MAFAe,OAAK,EAAAZ,MAAA,IAAEC,MAAA,CAAAY,SAAS,CAACH,KAAK;MAAGlB,KAAK,EAAC;wBACnCkB,KAAK,CAACI,IAAI,wBAbrBC,UAAA,E;kCAiBInB,mBAAA,WAAc,EACHK,MAAA,CAAAe,SAAS,I,cAApBtB,mBAAA,CAMM,OANNuB,UAMM,GALJpB,mBAAA,CAIM,OAJNqB,UAIM,GAHJrB,mBAAA,CAA+D;IAAtDe,OAAK,EAAEX,MAAA,CAAAkB,UAAU;IAAE3B,KAAK,EAAC;KAAc,QAAM,GACtDK,mBAAA,CAAqD,MAArDuB,UAAqD,EAAAC,gBAAA,CAA1BpB,MAAA,CAAAqB,aAAa,CAACR,IAAI,kBAC7CjB,mBAAA,CAAwD,KAAxD0B,UAAwD,EAAAF,gBAAA,CAA5BpB,MAAA,CAAAqB,aAAa,CAACE,OAAO,iB,OAtBzD5B,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}