{"ast":null,"code":"import { mapGetters } from 'vuex';\nimport { NativeAudio } from '@capacitor-community/native-audio';\nimport { App } from '@capacitor/app';\nexport default {\n  created() {\n    const checkRoute = sessionStorage.getItem('current-route');\n    if (!checkRoute) {\n      sessionStorage.setItem('current-route', 'home');\n    }\n    const checkTheme = localStorage.getItem('theme');\n    if (!checkTheme) {\n      localStorage.setItem('theme', 'dark');\n    }\n  },\n  computed: {\n    ...mapGetters(['currentTheme', 'networkStatus', 'netNotifCon', 'netNotifAn']),\n    themeClass() {\n      return this.currentTheme === 'dark' ? 'dark-theme' : 'light-theme';\n    },\n    netNotifContainer() {\n      return this.netNotifCon;\n    },\n    netNotifAnimation() {\n      return this.netNotifAn;\n    }\n  },\n  methods: {\n    async playAudio() {\n      try {\n        await NativeAudio.preload({\n          assetId: 'backgroundMusic',\n          assetPath: 'assets/audio/fatrat.mp3',\n          audioChannelNum: 1,\n          isUrl: false\n        });\n        await NativeAudio.play({\n          assetId: 'backgroundMusic'\n        });\n        await NativeAudio.loop({\n          assetId: 'backgroundMusic'\n        });\n        localStorage.setItem('musicPlaying', 'true');\n      } catch (error) {\n        console.error('Error playing audio:', error);\n      }\n    },\n    async stopAudio() {\n      try {\n        await NativeAudio.stop({\n          assetId: 'backgroundMusic'\n        });\n        localStorage.setItem('musicPlaying', 'false');\n      } catch (error) {\n        console.error('Error stopping audio:', error);\n      }\n    }\n  },\n  mounted() {\n    if (localStorage.getItem('musicPlaying') === 'true') {\n      this.playAudio();\n    }\n    App.addListener('appStateChange', state => {\n      if (state.isActive) {\n        if (localStorage.getItem('musicPlaying') === 'true') {\n          this.playAudio();\n        }\n      } else {\n        this.stopAudio();\n      }\n    });\n  }\n};","map":{"version":3,"names":["mapGetters","NativeAudio","App","created","checkRoute","sessionStorage","getItem","setItem","checkTheme","localStorage","computed","themeClass","currentTheme","netNotifContainer","netNotifCon","netNotifAnimation","netNotifAn","methods","playAudio","preload","assetId","assetPath","audioChannelNum","isUrl","play","loop","error","console","stopAudio","stop","mounted","addListener","state","isActive"],"sources":["C:\\Users\\ruzhe\\CODEHUB-PH\\GAMES\\code-master\\src\\App.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- Existing template content -->\n    <div class=\"network-status\" v-if=\"netNotifContainer\" :class=\"{ 'net-status-notif': netNotifAnimation }\">\n      <span style=\"color:rgb(41, 219, 13)\" v-if=\"networkStatus === true\">You are online</span>\n      <span style=\"color:rgb(255, 38, 0);\" v-if=\"networkStatus === false\">You are offline</span>\n    </div>\n    <div class=\"main-view\" :class=\"themeClass\">\n      <router-view />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\nimport { NativeAudio } from '@capacitor-community/native-audio';\nimport { App } from '@capacitor/app';\n\nexport default {\n  created() {\n    const checkRoute = sessionStorage.getItem('current-route');\n    if (!checkRoute) {\n      sessionStorage.setItem('current-route', 'home');\n    }\n    const checkTheme = localStorage.getItem('theme');\n    if (!checkTheme) {\n      localStorage.setItem('theme', 'dark');\n    }\n  },\n  computed: {\n    ...mapGetters(['currentTheme', 'networkStatus', 'netNotifCon', 'netNotifAn']),\n    themeClass() {\n      return this.currentTheme === 'dark' ? 'dark-theme' : 'light-theme';\n    },\n    netNotifContainer() {\n      return this.netNotifCon;\n    },\n    netNotifAnimation() {\n      return this.netNotifAn;\n    }\n  },\n  methods: {\n    async playAudio() {\n      try {\n        await NativeAudio.preload({\n          assetId: 'backgroundMusic',\n          assetPath: 'assets/audio/fatrat.mp3',\n          audioChannelNum: 1,\n          isUrl: false\n        });\n        await NativeAudio.play({\n          assetId: 'backgroundMusic'\n        });\n        await NativeAudio.loop({\n          assetId: 'backgroundMusic'\n        });\n        localStorage.setItem('musicPlaying', 'true');\n      } catch (error) {\n        console.error('Error playing audio:', error);\n      }\n    },\n    async stopAudio() {\n      try {\n        await NativeAudio.stop({\n          assetId: 'backgroundMusic'\n        });\n        localStorage.setItem('musicPlaying', 'false');\n      } catch (error) {\n        console.error('Error stopping audio:', error);\n      }\n    }\n  },\n  mounted() {\n    if (localStorage.getItem('musicPlaying') === 'true') {\n      this.playAudio();\n    }\n\n    App.addListener('appStateChange', (state) => {\n      if (state.isActive) {\n        if (localStorage.getItem('musicPlaying') === 'true') {\n          this.playAudio(); \n        }\n      } else {\n        this.stopAudio(); \n      }\n    });\n  }\n}\n</script>\n\n<style>\n@import \"./assets/style/GlobalStyle.css\";\n@import \"../node_modules/bootstrap-icons/font/bootstrap-icons.css\";\n\n.network-status {\n  position: absolute;\n  width: calc(100% - 10px);\n  background-color: rgb(250, 250, 250);\n  padding: 5px;\n  display: flex;\n  justify-content: center;\n  transform: translateY(-30px);\n  transition: transform 0.5s ease-in-out;\n  z-index: 9999;\n}\n\n.network-status.net-status-notif {\n  transform: translateY(0);\n}\n\n.network-status span {\n  font-weight: bold;\n}\n</style>\n"],"mappings":"AAcA,SAASA,UAAS,QAAS,MAAM;AACjC,SAASC,WAAU,QAAS,mCAAmC;AAC/D,SAASC,GAAE,QAAS,gBAAgB;AAEpC,eAAe;EACbC,OAAOA,CAAA,EAAG;IACR,MAAMC,UAAS,GAAIC,cAAc,CAACC,OAAO,CAAC,eAAe,CAAC;IAC1D,IAAI,CAACF,UAAU,EAAE;MACfC,cAAc,CAACE,OAAO,CAAC,eAAe,EAAE,MAAM,CAAC;IACjD;IACA,MAAMC,UAAS,GAAIC,YAAY,CAACH,OAAO,CAAC,OAAO,CAAC;IAChD,IAAI,CAACE,UAAU,EAAE;MACfC,YAAY,CAACF,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC;IACvC;EACF,CAAC;EACDG,QAAQ,EAAE;IACR,GAAGV,UAAU,CAAC,CAAC,cAAc,EAAE,eAAe,EAAE,aAAa,EAAE,YAAY,CAAC,CAAC;IAC7EW,UAAUA,CAAA,EAAG;MACX,OAAO,IAAI,CAACC,YAAW,KAAM,MAAK,GAAI,YAAW,GAAI,aAAa;IACpE,CAAC;IACDC,iBAAiBA,CAAA,EAAG;MAClB,OAAO,IAAI,CAACC,WAAW;IACzB,CAAC;IACDC,iBAAiBA,CAAA,EAAG;MAClB,OAAO,IAAI,CAACC,UAAU;IACxB;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,SAASA,CAAA,EAAG;MAChB,IAAI;QACF,MAAMjB,WAAW,CAACkB,OAAO,CAAC;UACxBC,OAAO,EAAE,iBAAiB;UAC1BC,SAAS,EAAE,yBAAyB;UACpCC,eAAe,EAAE,CAAC;UAClBC,KAAK,EAAE;QACT,CAAC,CAAC;QACF,MAAMtB,WAAW,CAACuB,IAAI,CAAC;UACrBJ,OAAO,EAAE;QACX,CAAC,CAAC;QACF,MAAMnB,WAAW,CAACwB,IAAI,CAAC;UACrBL,OAAO,EAAE;QACX,CAAC,CAAC;QACFX,YAAY,CAACF,OAAO,CAAC,cAAc,EAAE,MAAM,CAAC;MAC9C,EAAE,OAAOmB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IACD,MAAME,SAASA,CAAA,EAAG;MAChB,IAAI;QACF,MAAM3B,WAAW,CAAC4B,IAAI,CAAC;UACrBT,OAAO,EAAE;QACX,CAAC,CAAC;QACFX,YAAY,CAACF,OAAO,CAAC,cAAc,EAAE,OAAO,CAAC;MAC/C,EAAE,OAAOmB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF;EACF,CAAC;EACDI,OAAOA,CAAA,EAAG;IACR,IAAIrB,YAAY,CAACH,OAAO,CAAC,cAAc,MAAM,MAAM,EAAE;MACnD,IAAI,CAACY,SAAS,CAAC,CAAC;IAClB;IAEAhB,GAAG,CAAC6B,WAAW,CAAC,gBAAgB,EAAGC,KAAK,IAAK;MAC3C,IAAIA,KAAK,CAACC,QAAQ,EAAE;QAClB,IAAIxB,YAAY,CAACH,OAAO,CAAC,cAAc,MAAM,MAAM,EAAE;UACnD,IAAI,CAACY,SAAS,CAAC,CAAC;QAClB;MACF,OAAO;QACL,IAAI,CAACU,SAAS,CAAC,CAAC;MAClB;IACF,CAAC,CAAC;EACJ;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}