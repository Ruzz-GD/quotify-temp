{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { VueMonacoEditor } from '@guolao/vue-monaco-editor';\nimport { ref } from 'vue';\nimport { mapGetters } from 'vuex';\nexport default {\n  components: {\n    VueMonacoEditor\n  },\n  data() {\n    return {\n      code: ref(''),\n      editorTheme: '',\n      editorORoutput: 'editor'\n    };\n  },\n  computed: {\n    ...mapGetters(['currentTheme'])\n  },\n  methods: {\n    toggleEO(method) {\n      if (method === 'editorTOoutput') {\n        this.editorORoutput = 'output';\n      } else {\n        this.editorORoutput = 'editor';\n      }\n    },\n    current_theme() {\n      this.editorTheme = this.currentTheme === 'dark' ? 'vs-dark' : 'vs-light';\n    },\n    exitEditor() {\n      sessionStorage.setItem('current-route', 'home');\n      this.$router.push('/home');\n    },\n    loadCodeFromLocalStorage() {\n      const savedCode = localStorage.getItem('saved-code');\n      if (savedCode) {\n        this.code = savedCode;\n      } else {\n        this.code = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <style>\n        body {\n            margin:0;\n        }\n        .container {\n            height:100vh;\n            width:100vw;\n            display:flex;\n            align-items:center;\n            justify-content: center;\n        }\n        h5 {\n            color: skyblue;\n            font-weight: bold;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <h5 id=\"text\">HTML with Inline CSS you can try to add JS</h5>\n        <button id=\"clickMe\">Click Me</button>\n    </div>\n</body>\n</html>\n`;\n      }\n    }\n  },\n  mounted() {\n    this.loadCodeFromLocalStorage();\n    this.current_theme();\n  },\n  watch: {\n    code(newCode) {\n      localStorage.setItem('saved-code', newCode);\n    }\n  }\n};","map":{"version":3,"names":["VueMonacoEditor","ref","mapGetters","components","data","code","editorTheme","editorORoutput","computed","methods","toggleEO","method","current_theme","currentTheme","exitEditor","sessionStorage","setItem","$router","push","loadCodeFromLocalStorage","savedCode","localStorage","getItem","mounted","watch","newCode"],"sources":["C:\\Users\\ruzhe\\CODEHUB-PH\\GAMES\\code-master\\src\\components\\Dashboard\\HomeComponents\\ProgLangComponents\\HtmlCodeEditor.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n        <div class=\"output-container\" v-if=\"editorORoutput === 'output'\">\r\n            <i class=\"bi bi-arrow-left\" style=\"color:black;\" @click=\"toggleEO('outputTOeditor')\"></i>\r\n            <iframe class=\"output-frame\" :srcdoc=\"code\"></iframe>\r\n        </div>\r\n        <div class=\"editor-container\" v-if=\"editorORoutput === 'editor'\">\r\n            <i @click=\"exitEditor\" class=\"bi bi-arrow-left\"></i>\r\n            <button class=\"output-btn\" @click=\"toggleEO('editorTOoutput')\"><i class=\"bi bi-caret-right-fill\"></i></button>\r\n            <VueMonacoEditor v-model:value=\"code\" :theme=\"editorTheme\" language=\"html\" :options=\"{\r\n                automaticLayout: true,\r\n                formatOnType: true,\r\n                formatOnPaste: true,\r\n                wordWrap: 'on',\r\n                fontSize: 12,\r\n            }\" />\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { VueMonacoEditor } from '@guolao/vue-monaco-editor';\r\nimport { ref } from 'vue';\r\nimport { mapGetters } from 'vuex';\r\nexport default {\r\n    components: {\r\n        VueMonacoEditor\r\n    },\r\n    data() {\r\n        return {\r\n            code: ref(''),\r\n            editorTheme:'',\r\n            editorORoutput:'editor',\r\n        };\r\n    },\r\n    computed:{\r\n        ...mapGetters(['currentTheme'])\r\n    },\r\n    methods: {\r\n        toggleEO(method){\r\n            if (method === 'editorTOoutput'){\r\n                this.editorORoutput = 'output';\r\n            }else{\r\n                this.editorORoutput = 'editor';\r\n            }\r\n            \r\n        },\r\n        current_theme(){\r\n            this.editorTheme = this.currentTheme === 'dark' ? 'vs-dark' : 'vs-light';\r\n        },\r\n        exitEditor() {\r\n            sessionStorage.setItem('current-route', 'home');\r\n            this.$router.push('/home');\r\n        },\r\n        loadCodeFromLocalStorage() {\r\n            const savedCode = localStorage.getItem('saved-code');\r\n            if (savedCode) {\r\n                this.code = savedCode;\r\n            } else {\r\n                this.code = `<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <style>\r\n        body {\r\n            margin:0;\r\n        }\r\n        .container {\r\n            height:100vh;\r\n            width:100vw;\r\n            display:flex;\r\n            align-items:center;\r\n            justify-content: center;\r\n        }\r\n        h5 {\r\n            color: skyblue;\r\n            font-weight: bold;\r\n        }\r\n    </style>\r\n</head>\r\n<body>\r\n    <div class=\"container\">\r\n        <h5 id=\"text\">HTML with Inline CSS you can try to add JS</h5>\r\n        <button id=\"clickMe\">Click Me</button>\r\n    </div>\r\n</body>\r\n</html>\r\n`;\r\n            }\r\n        }\r\n    },\r\n    mounted() {\r\n        this.loadCodeFromLocalStorage();\r\n        this.current_theme();\r\n    },\r\n    watch: {\r\n        code(newCode) {\r\n            localStorage.setItem('saved-code', newCode);\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.output-btn{\r\n    padding: 2px 15px;\r\n    position: absolute;\r\n    right: 0;\r\n    top:0;\r\n    font-size: 1.2rem;\r\n    z-index: 10;\r\n    margin: 10px;\r\n    border-radius: 5px;\r\n    color: rgb(53, 194, 11);\r\n}\r\n.container {\r\n    display: flex;\r\n    position: relative;\r\n    flex-direction: column-reverse;\r\n    height: 100%;\r\n    overflow: auto;\r\n}\r\n\r\n.output-container {\r\n    position: relative;\r\n    height: 100vh;\r\n}\r\n\r\n.editor-container {\r\n    height: 100vh;\r\n    margin: 0;\r\n    overflow: hidden;\r\n}\r\n\r\n.output-frame {\r\n    width: calc(100% - 10px);\r\n    height: calc(100% - 10px);\r\n    position: relative;\r\n    padding: 5px;\r\n    background-color: white;\r\n    border: none;\r\n}\r\n\r\n.bi-arrow-left {\r\n    color: white;\r\n    font-size: 1.5rem;\r\n    top: 0;\r\n    left: 0;\r\n    position: absolute;\r\n    margin: 5px 10px;\r\n    z-index: 999;\r\n}\r\n</style>"],"mappings":";AAqBA,SAASA,eAAc,QAAS,2BAA2B;AAC3D,SAASC,GAAE,QAAS,KAAK;AACzB,SAASC,UAAS,QAAS,MAAM;AACjC,eAAe;EACXC,UAAU,EAAE;IACRH;EACJ,CAAC;EACDI,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,IAAI,EAAEJ,GAAG,CAAC,EAAE,CAAC;MACbK,WAAW,EAAC,EAAE;MACdC,cAAc,EAAC;IACnB,CAAC;EACL,CAAC;EACDC,QAAQ,EAAC;IACL,GAAGN,UAAU,CAAC,CAAC,cAAc,CAAC;EAClC,CAAC;EACDO,OAAO,EAAE;IACLC,QAAQA,CAACC,MAAM,EAAC;MACZ,IAAIA,MAAK,KAAM,gBAAgB,EAAC;QAC5B,IAAI,CAACJ,cAAa,GAAI,QAAQ;MAClC,CAAC,MAAI;QACD,IAAI,CAACA,cAAa,GAAI,QAAQ;MAClC;IAEJ,CAAC;IACDK,aAAaA,CAAA,EAAE;MACX,IAAI,CAACN,WAAU,GAAI,IAAI,CAACO,YAAW,KAAM,MAAK,GAAI,SAAQ,GAAI,UAAU;IAC5E,CAAC;IACDC,UAAUA,CAAA,EAAG;MACTC,cAAc,CAACC,OAAO,CAAC,eAAe,EAAE,MAAM,CAAC;MAC/C,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,OAAO,CAAC;IAC9B,CAAC;IACDC,wBAAwBA,CAAA,EAAG;MACvB,MAAMC,SAAQ,GAAIC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;MACpD,IAAIF,SAAS,EAAE;QACX,IAAI,CAACf,IAAG,GAAIe,SAAS;MACzB,OAAO;QACH,IAAI,CAACf,IAAG,GAAI;AAC5B;AACA;;;;;;;;;;;;;;;;;;;AAmBA;AACA;;;;;AAKA;AACA;AACA,CAAC;MACW;IACJ;EACJ,CAAC;EACDkB,OAAOA,CAAA,EAAG;IACN,IAAI,CAACJ,wBAAwB,CAAC,CAAC;IAC/B,IAAI,CAACP,aAAa,CAAC,CAAC;EACxB,CAAC;EACDY,KAAK,EAAE;IACHnB,IAAIA,CAACoB,OAAO,EAAE;MACVJ,YAAY,CAACL,OAAO,CAAC,YAAY,EAAES,OAAO,CAAC;IAC/C;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}