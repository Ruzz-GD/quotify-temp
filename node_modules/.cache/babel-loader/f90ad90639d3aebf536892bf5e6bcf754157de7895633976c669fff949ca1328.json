{"ast":null,"code":"import { VueMonacoEditor } from '@guolao/vue-monaco-editor';\nimport { formatTime } from '@/utils/GameUtils';\nimport { saveGameData, recordAttempt } from '@/utils/FileSystemService';\nimport GameData from '../GameData.json';\nexport default {\n  components: {\n    VueMonacoEditor\n  },\n  data() {\n    return {\n      currentChallenge: 0,\n      code: '',\n      feedback: '',\n      isCorrect: false,\n      score: 0,\n      challenges: [],\n      editorOptions: {\n        minimap: {\n          enabled: false\n        },\n        fontSize: 14,\n        wordWrap: 'on'\n      },\n      timer: null,\n      elapsedTime: 0,\n      showStartOverlay: true,\n      showEndOverlay: false,\n      challange: 'CSS-DEBUG-LVL-2',\n      attemptFileName: 'CSS-DEBUG-LVL-2-ATTEMPT'\n    };\n  },\n  computed: {\n    description() {\n      return this.challenges[this.currentChallenge]?.description || 'No description available';\n    }\n  },\n  watch: {\n    currentChallenge(newVal) {\n      if (this.challenges[newVal]) {\n        this.code = this.challenges[newVal].code;\n        this.isCorrect = false;\n        this.feedback = '';\n      } else {\n        this.code = '';\n      }\n    }\n  },\n  mounted() {\n    if (this.challenges.length > 0) {\n      this.code = this.challenges[this.currentChallenge].code;\n    }\n  },\n  created() {\n    const id = 'css-game-lvl2';\n    const filterData = id => {\n      return GameData.DataForLvl2.filter(data => data.id === id);\n    };\n    this.challenges = filterData(id);\n  },\n  methods: {\n    save_game_data() {\n      saveGameData(this.challange, this.challange, this.score, this.elapsedTime);\n      this.$router.go(-1);\n    },\n    startGame() {\n      this.showStartOverlay = false;\n      this.startTimer();\n      recordAttempt(this.attemptFileName);\n    },\n    exitGame() {\n      this.$router.go(-1);\n    },\n    startTimer() {\n      this.timer = setInterval(() => {\n        this.elapsedTime++;\n      }, 1000);\n    },\n    submitCode() {\n      if (this.code.trim() === this.challenges[this.currentChallenge]?.solution.trim()) {\n        this.feedback = 'Correct! Well done!';\n        this.isCorrect = true;\n        this.score++;\n      } else {\n        this.feedback = 'Incorrect. Try again!';\n        this.isCorrect = false;\n      }\n    },\n    skipChallenge() {\n      this.currentChallenge++;\n      if (this.currentChallenge >= this.challenges.length) {\n        this.finishGame();\n      } else {\n        this.feedback = 'Skipped! Moving to the next challenge.';\n        this.isCorrect = false;\n      }\n    },\n    nextChallenge() {\n      if (this.isCorrect) {\n        this.currentChallenge++;\n      }\n    },\n    finishGame() {\n      clearInterval(this.timer);\n      this.showEndOverlay = true;\n    },\n    format_time(seconds) {\n      return formatTime(seconds);\n    }\n  }\n};","map":{"version":3,"names":["VueMonacoEditor","formatTime","saveGameData","recordAttempt","GameData","components","data","currentChallenge","code","feedback","isCorrect","score","challenges","editorOptions","minimap","enabled","fontSize","wordWrap","timer","elapsedTime","showStartOverlay","showEndOverlay","challange","attemptFileName","computed","description","watch","newVal","mounted","length","created","id","filterData","DataForLvl2","filter","methods","save_game_data","$router","go","startGame","startTimer","exitGame","setInterval","submitCode","trim","solution","skipChallenge","finishGame","nextChallenge","clearInterval","format_time","seconds"],"sources":["C:\\Users\\ruzhe\\CODEHUB-PH\\GAMES\\code-master\\src\\components\\Dashboard\\GameComponents\\CssMission\\CssLvl2.vue"],"sourcesContent":["<template>\r\n    <div class=\"debugging-challenge\">\r\n        <!-- Start Overlay -->\r\n        <div v-if=\"showStartOverlay\" class=\"start-overlay\">\r\n            <h2>Welcome to the Debugging Challenge</h2>\r\n            <button @click=\"startGame\">Start Game</button>\r\n            <button @click=\"exitGame\">Exit</button>\r\n\r\n        </div>\r\n\r\n        <!-- End Overlay -->\r\n        <div v-if=\"showEndOverlay\" class=\"end-overlay\">\r\n            <h2>Congratulations! You've completed all challenges.</h2>\r\n            <p>Total Time: {{ format_time(elapsedTime) }}</p>\r\n            <p>Challenges Completed: {{ score }} / {{ challenges.length }}</p>\r\n            <button @click=\"exitGame\">End</button>\r\n            <button @click=\"save_game_data\">End & Save</button>\r\n        </div>\r\n\r\n        <!-- Game Interface -->\r\n        <div v-else>\r\n            <h2>CSS Debugging Challenge {{ currentChallenge + 1 }}/25</h2>\r\n            <h4>Use inline css method</h4>\r\n            <p>{{ description }}</p>\r\n\r\n            <div class=\"editor-container\">\r\n                <VueMonacoEditor v-model:value=\"code\" theme=\"vs-dark\" language=\"html\" :options=\"editorOptions\" />\r\n            </div>\r\n\r\n            <button @click=\"submitCode\" class=\"debug-submit\">Submit</button>\r\n            <button @click=\"skipChallenge\" class=\"debug-skip\">Skip Challenge</button>\r\n            <p v-if=\"feedback\">{{ feedback }}</p>\r\n\r\n            <button v-if=\"isCorrect && currentChallenge < challenges.length - 1\" @click=\"nextChallenge\">Next\r\n                Challenge</button>\r\n            <button v-if=\"isCorrect && currentChallenge === challenges.length - 1\" @click=\"finishGame\">Finish\r\n                Game</button>\r\n\r\n            <!-- Timer -->\r\n            <div class=\"timer\">Time: {{ format_time(elapsedTime) }}</div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { VueMonacoEditor } from '@guolao/vue-monaco-editor';\r\nimport { formatTime } from '@/utils/GameUtils';\r\nimport { saveGameData,recordAttempt } from '@/utils/FileSystemService';\r\nimport GameData from '../GameData.json';\r\nexport default {\r\n    components: {\r\n        VueMonacoEditor,\r\n    },\r\n    data() {\r\n        return {\r\n            currentChallenge: 0,\r\n            code: '',\r\n            feedback: '',\r\n            isCorrect: false,\r\n            score: 0,\r\n            challenges: [],\r\n            editorOptions: {\r\n                minimap: { enabled: false },\r\n                fontSize: 14,\r\n                wordWrap: 'on',\r\n            },\r\n            timer: null,\r\n            elapsedTime: 0,\r\n            showStartOverlay: true,\r\n            showEndOverlay: false,\r\n            challange:'CSS-DEBUG-LVL-2',\r\n            attemptFileName:'CSS-DEBUG-LVL-2-ATTEMPT',\r\n        };\r\n    },\r\n    computed: {\r\n        description() {\r\n            return this.challenges[this.currentChallenge]?.description || 'No description available';\r\n        },\r\n    },\r\n    watch: {\r\n        currentChallenge(newVal) {\r\n            if (this.challenges[newVal]) {\r\n                this.code = this.challenges[newVal].code;\r\n                this.isCorrect = false;\r\n                this.feedback = '';\r\n            } else {\r\n                this.code = '';\r\n            }\r\n        },\r\n    },\r\n    mounted() {\r\n        if (this.challenges.length > 0) {\r\n            this.code = this.challenges[this.currentChallenge].code;\r\n        }\r\n    },\r\n    created(){\r\n        const id = 'css-game-lvl2';\r\n        const filterData = (id) =>{\r\n            return GameData.DataForLvl2.filter((data) => data.id === id);\r\n        }\r\n        this.challenges = filterData(id);\r\n    },\r\n    methods: {\r\n        save_game_data(){\r\n            saveGameData(this.challange,this.challange,this.score,this.elapsedTime);\r\n            this.$router.go(-1);\r\n        },\r\n        startGame() {\r\n            this.showStartOverlay = false;\r\n            this.startTimer();\r\n            recordAttempt(this.attemptFileName);\r\n        },\r\n        exitGame() {\r\n            this.$router.go(-1)\r\n        },\r\n        startTimer() {\r\n            this.timer = setInterval(() => {\r\n                this.elapsedTime++;\r\n            }, 1000);\r\n        },\r\n        submitCode() {\r\n            if (this.code.trim() === this.challenges[this.currentChallenge]?.solution.trim()) {\r\n                this.feedback = 'Correct! Well done!';\r\n                this.isCorrect = true;\r\n                this.score++;\r\n            } else {\r\n                this.feedback = 'Incorrect. Try again!';\r\n                this.isCorrect = false;\r\n            }\r\n        },\r\n        skipChallenge() {\r\n            this.currentChallenge++;\r\n            if (this.currentChallenge >= this.challenges.length) {\r\n                this.finishGame();\r\n            } else {\r\n                this.feedback = 'Skipped! Moving to the next challenge.';\r\n                this.isCorrect = false;\r\n            }\r\n        },\r\n        nextChallenge() {\r\n            if (this.isCorrect) {\r\n                this.currentChallenge++;\r\n            }\r\n        },\r\n        finishGame() {\r\n            clearInterval(this.timer);\r\n            this.showEndOverlay = true;\r\n        },\r\n        format_time(seconds) {\r\n            return formatTime(seconds);\r\n        },\r\n    },\r\n};\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}