{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"debugging-challenge\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"start-overlay\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"end-overlay\"\n};\nconst _hoisted_4 = {\n  key: 2\n};\nconst _hoisted_5 = {\n  class: \"editor-container\"\n};\nconst _hoisted_6 = {\n  key: 0\n};\nconst _hoisted_7 = {\n  class: \"timer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_VueMonacoEditor = _resolveComponent(\"VueMonacoEditor\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$data.showStartOverlay ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_cache[9] || (_cache[9] = _createElementVNode(\"h2\", null, \"Welcome to the Debugging Challenge\", -1)), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.startGame && $options.startGame(...args))\n  }, \"Start Game\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.exitGame && $options.exitGame(...args))\n  }, \"Exit\")])) : _createCommentVNode(\"\", true), $data.showEndOverlay ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_cache[10] || (_cache[10] = _createElementVNode(\"h2\", null, \"Congratulations! You've completed all challenges.\", -1)), _createElementVNode(\"p\", null, \"Total Time: \" + _toDisplayString($options.format_time($data.elapsedTime)), 1), _createElementVNode(\"p\", null, \"Challenges Completed: \" + _toDisplayString($data.score) + \" / \" + _toDisplayString($data.challenges.length), 1), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.exitGame && $options.exitGame(...args))\n  }, \"End\"), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.save_game_data && $options.save_game_data(...args))\n  }, \"End & Save\")])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"h2\", null, \"CSS Debugging Challenge \" + _toDisplayString($data.currentChallenge + 1) + \"/25\", 1), _cache[11] || (_cache[11] = _createElementVNode(\"h4\", null, \"Use inline css method\", -1)), _createElementVNode(\"p\", null, _toDisplayString($options.description), 1), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_VueMonacoEditor, {\n    value: $data.code,\n    \"onUpdate:value\": _cache[4] || (_cache[4] = $event => $data.code = $event),\n    theme: \"vs-dark\",\n    language: \"html\",\n    options: $data.editorOptions\n  }, null, 8, [\"value\", \"options\"])]), _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.submitCode && $options.submitCode(...args)),\n    class: \"debug-submit\"\n  }, \"Submit\"), _createElementVNode(\"button\", {\n    onClick: _cache[6] || (_cache[6] = (...args) => $options.skipChallenge && $options.skipChallenge(...args)),\n    class: \"debug-skip\"\n  }, \"Skip Challenge\"), $data.feedback ? (_openBlock(), _createElementBlock(\"p\", _hoisted_6, _toDisplayString($data.feedback), 1)) : _createCommentVNode(\"\", true), $data.isCorrect && $data.currentChallenge < $data.challenges.length - 1 ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 1,\n    onClick: _cache[7] || (_cache[7] = (...args) => $options.nextChallenge && $options.nextChallenge(...args))\n  }, \"Next Challenge\")) : _createCommentVNode(\"\", true), $data.isCorrect && $data.currentChallenge === $data.challenges.length - 1 ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 2,\n    onClick: _cache[8] || (_cache[8] = (...args) => $options.finishGame && $options.finishGame(...args))\n  }, \"Finish Game\")) : _createCommentVNode(\"\", true), _createElementVNode(\"div\", _hoisted_7, \"Time: \" + _toDisplayString($options.format_time($data.elapsedTime)), 1)]))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","$data","showStartOverlay","_hoisted_2","_createElementVNode","onClick","_cache","args","$options","startGame","exitGame","_createCommentVNode","showEndOverlay","_hoisted_3","_toDisplayString","format_time","elapsedTime","score","challenges","length","save_game_data","_hoisted_4","currentChallenge","description","_hoisted_5","_createVNode","_component_VueMonacoEditor","value","code","$event","theme","language","options","editorOptions","submitCode","skipChallenge","feedback","_hoisted_6","isCorrect","nextChallenge","finishGame","_hoisted_7"],"sources":["C:\\Users\\ruzhe\\CODEHUB-PH\\GAMES\\code-master\\src\\components\\Dashboard\\GameComponents\\CssMission\\CssLvl2.vue"],"sourcesContent":["<template>\r\n    <div class=\"debugging-challenge\">\r\n        <!-- Start Overlay -->\r\n        <div v-if=\"showStartOverlay\" class=\"start-overlay\">\r\n            <h2>Welcome to the Debugging Challenge</h2>\r\n            <button @click=\"startGame\">Start Game</button>\r\n            <button @click=\"exitGame\">Exit</button>\r\n\r\n        </div>\r\n\r\n        <!-- End Overlay -->\r\n        <div v-if=\"showEndOverlay\" class=\"end-overlay\">\r\n            <h2>Congratulations! You've completed all challenges.</h2>\r\n            <p>Total Time: {{ format_time(elapsedTime) }}</p>\r\n            <p>Challenges Completed: {{ score }} / {{ challenges.length }}</p>\r\n            <button @click=\"exitGame\">End</button>\r\n            <button @click=\"save_game_data\">End & Save</button>\r\n        </div>\r\n\r\n        <!-- Game Interface -->\r\n        <div v-else>\r\n            <h2>CSS Debugging Challenge {{ currentChallenge + 1 }}/25</h2>\r\n            <h4>Use inline css method</h4>\r\n            <p>{{ description }}</p>\r\n\r\n            <div class=\"editor-container\">\r\n                <VueMonacoEditor v-model:value=\"code\" theme=\"vs-dark\" language=\"html\" :options=\"editorOptions\" />\r\n            </div>\r\n\r\n            <button @click=\"submitCode\" class=\"debug-submit\">Submit</button>\r\n            <button @click=\"skipChallenge\" class=\"debug-skip\">Skip Challenge</button>\r\n            <p v-if=\"feedback\">{{ feedback }}</p>\r\n\r\n            <button v-if=\"isCorrect && currentChallenge < challenges.length - 1\" @click=\"nextChallenge\">Next\r\n                Challenge</button>\r\n            <button v-if=\"isCorrect && currentChallenge === challenges.length - 1\" @click=\"finishGame\">Finish\r\n                Game</button>\r\n\r\n            <!-- Timer -->\r\n            <div class=\"timer\">Time: {{ format_time(elapsedTime) }}</div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { VueMonacoEditor } from '@guolao/vue-monaco-editor';\r\nimport { formatTime } from '@/utils/GameUtils';\r\nimport { saveGameData,recordAttempt } from '@/utils/FileSystemService';\r\nimport GameData from '../GameData.json';\r\nexport default {\r\n    components: {\r\n        VueMonacoEditor,\r\n    },\r\n    data() {\r\n        return {\r\n            currentChallenge: 0,\r\n            code: '',\r\n            feedback: '',\r\n            isCorrect: false,\r\n            score: 0,\r\n            challenges: [],\r\n            editorOptions: {\r\n                minimap: { enabled: false },\r\n                fontSize: 14,\r\n                wordWrap: 'on',\r\n            },\r\n            timer: null,\r\n            elapsedTime: 0,\r\n            showStartOverlay: true,\r\n            showEndOverlay: false,\r\n            challange:'CSS-DEBUG-LVL-2',\r\n            attemptFileName:'CSS-DEBUG-LVL-2-ATTEMPT',\r\n        };\r\n    },\r\n    computed: {\r\n        description() {\r\n            return this.challenges[this.currentChallenge]?.description || 'No description available';\r\n        },\r\n    },\r\n    watch: {\r\n        currentChallenge(newVal) {\r\n            if (this.challenges[newVal]) {\r\n                this.code = this.challenges[newVal].code;\r\n                this.isCorrect = false;\r\n                this.feedback = '';\r\n            } else {\r\n                this.code = '';\r\n            }\r\n        },\r\n    },\r\n    mounted() {\r\n        if (this.challenges.length > 0) {\r\n            this.code = this.challenges[this.currentChallenge].code;\r\n        }\r\n    },\r\n    created(){\r\n        const id = 'css-game-lvl2';\r\n        const filterData = (id) =>{\r\n            return GameData.DataForLvl2.filter((data) => data.id === id);\r\n        }\r\n        this.challenges = filterData(id);\r\n    },\r\n    methods: {\r\n        save_game_data(){\r\n            saveGameData(this.challange,this.challange,this.score,this.elapsedTime);\r\n            this.$router.go(-1);\r\n        },\r\n        startGame() {\r\n            this.showStartOverlay = false;\r\n            this.startTimer();\r\n            recordAttempt(this.attemptFileName);\r\n        },\r\n        exitGame() {\r\n            this.$router.go(-1)\r\n        },\r\n        startTimer() {\r\n            this.timer = setInterval(() => {\r\n                this.elapsedTime++;\r\n            }, 1000);\r\n        },\r\n        submitCode() {\r\n            if (this.code.trim() === this.challenges[this.currentChallenge]?.solution.trim()) {\r\n                this.feedback = 'Correct! Well done!';\r\n                this.isCorrect = true;\r\n                this.score++;\r\n            } else {\r\n                this.feedback = 'Incorrect. Try again!';\r\n                this.isCorrect = false;\r\n            }\r\n        },\r\n        skipChallenge() {\r\n            this.currentChallenge++;\r\n            if (this.currentChallenge >= this.challenges.length) {\r\n                this.finishGame();\r\n            } else {\r\n                this.feedback = 'Skipped! Moving to the next challenge.';\r\n                this.isCorrect = false;\r\n            }\r\n        },\r\n        nextChallenge() {\r\n            if (this.isCorrect) {\r\n                this.currentChallenge++;\r\n            }\r\n        },\r\n        finishGame() {\r\n            clearInterval(this.timer);\r\n            this.showEndOverlay = true;\r\n        },\r\n        format_time(seconds) {\r\n            return formatTime(seconds);\r\n        },\r\n    },\r\n};\r\n</script>"],"mappings":";;EACSA,KAAK,EAAC;AAAqB;;EADpCC,GAAA;EAGqCD,KAAK,EAAC;;;EAH3CC,GAAA;EAWmCD,KAAK,EAAC;;;EAXzCC,GAAA;AAAA;;EAyBiBD,KAAK,EAAC;AAAkB;;EAzBzCC,GAAA;AAAA;;EAuCiBD,KAAK,EAAC;AAAO;;;uBAtC1BE,mBAAA,CAwCM,OAxCNC,UAwCM,GAtCSC,KAAA,CAAAC,gBAAgB,I,cAA3BH,mBAAA,CAKM,OALNI,UAKM,G,0BAJFC,mBAAA,CAA2C,YAAvC,oCAAkC,QACtCA,mBAAA,CAA8C;IAArCC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,SAAA,IAAAD,QAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;KAAE,YAAU,GACrCH,mBAAA,CAAuC;IAA9BC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAE,QAAA,IAAAF,QAAA,CAAAE,QAAA,IAAAH,IAAA,CAAQ;KAAE,MAAI,E,KAN1CI,mBAAA,YAWmBV,KAAA,CAAAW,cAAc,I,cAAzBb,mBAAA,CAMM,OANNc,UAMM,G,4BALFT,mBAAA,CAA0D,YAAtD,mDAAiD,QACrDA,mBAAA,CAAiD,WAA9C,cAAY,GAAAU,gBAAA,CAAGN,QAAA,CAAAO,WAAW,CAACd,KAAA,CAAAe,WAAW,QACzCZ,mBAAA,CAAkE,WAA/D,wBAAsB,GAAAU,gBAAA,CAAGb,KAAA,CAAAgB,KAAK,IAAG,KAAG,GAAAH,gBAAA,CAAGb,KAAA,CAAAiB,UAAU,CAACC,MAAM,OAC3Df,mBAAA,CAAsC;IAA7BC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAE,QAAA,IAAAF,QAAA,CAAAE,QAAA,IAAAH,IAAA,CAAQ;KAAE,KAAG,GAC7BH,mBAAA,CAAmD;IAA1CC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAY,cAAA,IAAAZ,QAAA,CAAAY,cAAA,IAAAb,IAAA,CAAc;KAAE,YAAU,E,oBAI9CR,mBAAA,CAoBM,OAxCdsB,UAAA,GAqBYjB,mBAAA,CAA8D,YAA1D,0BAAwB,GAAAU,gBAAA,CAAGb,KAAA,CAAAqB,gBAAgB,QAAO,KAAG,M,4BACzDlB,mBAAA,CAA8B,YAA1B,uBAAqB,QACzBA,mBAAA,CAAwB,WAAAU,gBAAA,CAAlBN,QAAA,CAAAe,WAAW,OAEjBnB,mBAAA,CAEM,OAFNoB,UAEM,GADFC,YAAA,CAAiGC,0BAAA;IAAxEC,KAAK,EAAE1B,KAAA,CAAA2B,IAAI;IA1BpD,kBAAAtB,MAAA,QAAAA,MAAA,MAAAuB,MAAA,IA0BgD5B,KAAA,CAAA2B,IAAI,GAAAC,MAAA;IAAEC,KAAK,EAAC,SAAS;IAACC,QAAQ,EAAC,MAAM;IAAEC,OAAO,EAAE/B,KAAA,CAAAgC;uCAGpF7B,mBAAA,CAAgE;IAAvDC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAA0B,UAAA,IAAA1B,QAAA,CAAA0B,UAAA,IAAA3B,IAAA,CAAU;IAAEV,KAAK,EAAC;KAAe,QAAM,GACvDO,mBAAA,CAAyE;IAAhEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAA2B,aAAA,IAAA3B,QAAA,CAAA2B,aAAA,IAAA5B,IAAA,CAAa;IAAEV,KAAK,EAAC;KAAa,gBAAc,GACvDI,KAAA,CAAAmC,QAAQ,I,cAAjBrC,mBAAA,CAAqC,KA/BjDsC,UAAA,EAAAvB,gBAAA,CA+BkCb,KAAA,CAAAmC,QAAQ,SA/B1CzB,mBAAA,YAiC0BV,KAAA,CAAAqC,SAAS,IAAIrC,KAAA,CAAAqB,gBAAgB,GAAGrB,KAAA,CAAAiB,UAAU,CAACC,MAAM,Q,cAA/DpB,mBAAA,CACsB;IAlClCD,GAAA;IAiCkFO,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAA+B,aAAA,IAAA/B,QAAA,CAAA+B,aAAA,IAAAhC,IAAA,CAAa;KAAE,gBAC/E,KAlCzBI,mBAAA,YAmC0BV,KAAA,CAAAqC,SAAS,IAAIrC,KAAA,CAAAqB,gBAAgB,KAAKrB,KAAA,CAAAiB,UAAU,CAACC,MAAM,Q,cAAjEpB,mBAAA,CACiB;IApC7BD,GAAA;IAmCoFO,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAgC,UAAA,IAAAhC,QAAA,CAAAgC,UAAA,IAAAjC,IAAA,CAAU;KAAE,aACnF,KApCpBI,mBAAA,YAuCYP,mBAAA,CAA6D,OAA7DqC,UAA6D,EAA1C,QAAM,GAAA3B,gBAAA,CAAGN,QAAA,CAAAO,WAAW,CAACd,KAAA,CAAAe,WAAW,O","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}