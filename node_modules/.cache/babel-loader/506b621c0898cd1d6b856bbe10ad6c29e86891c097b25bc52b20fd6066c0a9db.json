{"ast":null,"code":"import { Network } from \"@capacitor/network\";\nimport store from \"@/store\";\nexport const NetworkStates = {\n  isOnline: sessionStorage.getItem(\"network-status\") === \"true\",\n  prevStatus: sessionStorage.getItem(\"prev-network-status\") === \"true\",\n  netNotif_Container: false,\n  netNotif_Animation: false\n};\nexport const NetworkMutations = {\n  setNetworkStatus(state, value) {\n    state.prevStatus = state.isOnline;\n    state.isOnline = value;\n    sessionStorage.setItem(\"prev-network-status\", state.isOnline);\n  },\n  setNotifCon(state, value) {\n    state.netNotif_Container = value;\n  },\n  setNotifAn(state, value) {\n    state.netNotif_Animation = value;\n  }\n};\nexport const NetworkActions = {\n  async checkNetworkStatus({\n    commit,\n    state\n  }) {\n    const status = await Network.getStatus();\n    const isOnline = status.connected;\n    if (state.prevStatus !== isOnline) {\n      commit(\"setNetworkStatus\", isOnline);\n      sessionStorage.setItem(\"network-status\", isOnline);\n      store.dispatch(\"toggleNetNotif\");\n      if (isOnline) {\n        setTimeout(() => {\n          window.location.reload();\n        }, 3000);\n      }\n    }\n    Network.addListener(\"networkStatusChange\", status => {\n      const isOnline = status.connected;\n      if (state.prevStatus !== isOnline) {\n        commit(\"setNetworkStatus\", isOnline);\n        sessionStorage.setItem(\"network-status\", isOnline);\n        store.dispatch(\"toggleNetNotif\");\n        if (isOnline) {\n          window.location.reload();\n        }\n      }\n    });\n  },\n  toggleNetNotif({\n    commit\n  }) {\n    commit(\"setNotifCon\", true);\n    setTimeout(() => {\n      commit(\"setNotifAn\", true);\n      setTimeout(() => {\n        commit(\"setNotifCon\", false);\n        commit(\"setNotifAn\", false);\n      }, 3000);\n    }, 100);\n  }\n};\nexport const NetworkGetters = {\n  networkStatus(state) {\n    return state.isOnline;\n  },\n  netNotifCon(state) {\n    return state.netNotif_Container;\n  },\n  netNotifAn(state) {\n    return state.netNotif_Animation;\n  }\n};","map":{"version":3,"names":["Network","store","NetworkStates","isOnline","sessionStorage","getItem","prevStatus","netNotif_Container","netNotif_Animation","NetworkMutations","setNetworkStatus","state","value","setItem","setNotifCon","setNotifAn","NetworkActions","checkNetworkStatus","commit","status","getStatus","connected","dispatch","setTimeout","window","location","reload","addListener","toggleNetNotif","NetworkGetters","networkStatus","netNotifCon","netNotifAn"],"sources":["C:/Users/ruzhe/CODEHUB-PH/GAMES/code-master/src/modules/Network.js"],"sourcesContent":["import { Network } from \"@capacitor/network\";\r\nimport store from \"@/store\";\r\n\r\nexport const NetworkStates = {\r\n  isOnline: sessionStorage.getItem(\"network-status\") === \"true\",\r\n  prevStatus: sessionStorage.getItem(\"prev-network-status\") === \"true\",\r\n  netNotif_Container: false,\r\n  netNotif_Animation: false,\r\n};\r\n\r\nexport const NetworkMutations = {\r\n  setNetworkStatus(state, value) {\r\n    state.prevStatus = state.isOnline;\r\n    state.isOnline = value;\r\n    sessionStorage.setItem(\"prev-network-status\", state.isOnline);\r\n  },\r\n  setNotifCon(state, value) {\r\n    state.netNotif_Container = value;\r\n  },\r\n  setNotifAn(state, value) {\r\n    state.netNotif_Animation = value;\r\n  },\r\n};\r\n\r\nexport const NetworkActions = {\r\n  async checkNetworkStatus({ commit, state }) {\r\n    const status = await Network.getStatus();\r\n    const isOnline = status.connected;\r\n\r\n    if (state.prevStatus !== isOnline) {\r\n      commit(\"setNetworkStatus\", isOnline);\r\n      sessionStorage.setItem(\"network-status\", isOnline);\r\n      store.dispatch(\"toggleNetNotif\");\r\n      if (isOnline) {\r\n        setTimeout(()=>{\r\n          window.location.reload(); \r\n\r\n        },3000)\r\n        \r\n      }\r\n    }\r\n\r\n    Network.addListener(\"networkStatusChange\", (status) => {\r\n      const isOnline = status.connected;\r\n      if (state.prevStatus !== isOnline) {\r\n        commit(\"setNetworkStatus\", isOnline);\r\n        sessionStorage.setItem(\"network-status\", isOnline);\r\n        store.dispatch(\"toggleNetNotif\");\r\n        if (isOnline) {\r\n          window.location.reload(); \r\n        }\r\n      }\r\n    });\r\n  },\r\n  toggleNetNotif({ commit }) {\r\n    commit(\"setNotifCon\", true);\r\n    setTimeout(() => {\r\n      commit(\"setNotifAn\", true);\r\n      setTimeout(() => {\r\n        commit(\"setNotifCon\", false);\r\n        commit(\"setNotifAn\", false);\r\n      }, 3000);\r\n    }, 100);\r\n  },\r\n};\r\n\r\nexport const NetworkGetters = {\r\n  networkStatus(state) {\r\n    return state.isOnline;\r\n  },\r\n  netNotifCon(state) {\r\n    return state.netNotif_Container;\r\n  },\r\n  netNotifAn(state) {\r\n    return state.netNotif_Animation;\r\n  },\r\n};\r\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,oBAAoB;AAC5C,OAAOC,KAAK,MAAM,SAAS;AAE3B,OAAO,MAAMC,aAAa,GAAG;EAC3BC,QAAQ,EAAEC,cAAc,CAACC,OAAO,CAAC,gBAAgB,CAAC,KAAK,MAAM;EAC7DC,UAAU,EAAEF,cAAc,CAACC,OAAO,CAAC,qBAAqB,CAAC,KAAK,MAAM;EACpEE,kBAAkB,EAAE,KAAK;EACzBC,kBAAkB,EAAE;AACtB,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAG;EAC9BC,gBAAgBA,CAACC,KAAK,EAAEC,KAAK,EAAE;IAC7BD,KAAK,CAACL,UAAU,GAAGK,KAAK,CAACR,QAAQ;IACjCQ,KAAK,CAACR,QAAQ,GAAGS,KAAK;IACtBR,cAAc,CAACS,OAAO,CAAC,qBAAqB,EAAEF,KAAK,CAACR,QAAQ,CAAC;EAC/D,CAAC;EACDW,WAAWA,CAACH,KAAK,EAAEC,KAAK,EAAE;IACxBD,KAAK,CAACJ,kBAAkB,GAAGK,KAAK;EAClC,CAAC;EACDG,UAAUA,CAACJ,KAAK,EAAEC,KAAK,EAAE;IACvBD,KAAK,CAACH,kBAAkB,GAAGI,KAAK;EAClC;AACF,CAAC;AAED,OAAO,MAAMI,cAAc,GAAG;EAC5B,MAAMC,kBAAkBA,CAAC;IAAEC,MAAM;IAAEP;EAAM,CAAC,EAAE;IAC1C,MAAMQ,MAAM,GAAG,MAAMnB,OAAO,CAACoB,SAAS,CAAC,CAAC;IACxC,MAAMjB,QAAQ,GAAGgB,MAAM,CAACE,SAAS;IAEjC,IAAIV,KAAK,CAACL,UAAU,KAAKH,QAAQ,EAAE;MACjCe,MAAM,CAAC,kBAAkB,EAAEf,QAAQ,CAAC;MACpCC,cAAc,CAACS,OAAO,CAAC,gBAAgB,EAAEV,QAAQ,CAAC;MAClDF,KAAK,CAACqB,QAAQ,CAAC,gBAAgB,CAAC;MAChC,IAAInB,QAAQ,EAAE;QACZoB,UAAU,CAAC,MAAI;UACbC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;QAE1B,CAAC,EAAC,IAAI,CAAC;MAET;IACF;IAEA1B,OAAO,CAAC2B,WAAW,CAAC,qBAAqB,EAAGR,MAAM,IAAK;MACrD,MAAMhB,QAAQ,GAAGgB,MAAM,CAACE,SAAS;MACjC,IAAIV,KAAK,CAACL,UAAU,KAAKH,QAAQ,EAAE;QACjCe,MAAM,CAAC,kBAAkB,EAAEf,QAAQ,CAAC;QACpCC,cAAc,CAACS,OAAO,CAAC,gBAAgB,EAAEV,QAAQ,CAAC;QAClDF,KAAK,CAACqB,QAAQ,CAAC,gBAAgB,CAAC;QAChC,IAAInB,QAAQ,EAAE;UACZqB,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;QAC1B;MACF;IACF,CAAC,CAAC;EACJ,CAAC;EACDE,cAAcA,CAAC;IAAEV;EAAO,CAAC,EAAE;IACzBA,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC;IAC3BK,UAAU,CAAC,MAAM;MACfL,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC;MAC1BK,UAAU,CAAC,MAAM;QACfL,MAAM,CAAC,aAAa,EAAE,KAAK,CAAC;QAC5BA,MAAM,CAAC,YAAY,EAAE,KAAK,CAAC;MAC7B,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,EAAE,GAAG,CAAC;EACT;AACF,CAAC;AAED,OAAO,MAAMW,cAAc,GAAG;EAC5BC,aAAaA,CAACnB,KAAK,EAAE;IACnB,OAAOA,KAAK,CAACR,QAAQ;EACvB,CAAC;EACD4B,WAAWA,CAACpB,KAAK,EAAE;IACjB,OAAOA,KAAK,CAACJ,kBAAkB;EACjC,CAAC;EACDyB,UAAUA,CAACrB,KAAK,EAAE;IAChB,OAAOA,KAAK,CAACH,kBAAkB;EACjC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}