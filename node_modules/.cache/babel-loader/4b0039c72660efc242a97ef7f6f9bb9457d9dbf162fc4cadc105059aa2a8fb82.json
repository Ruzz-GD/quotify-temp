{"ast":null,"code":"import { WebPlugin } from '@capacitor/core';\nimport { AudioAsset } from './audio-asset';\nexport class NativeAudioWeb extends WebPlugin {\n  async resume(options) {\n    const audio = this.getAudioAsset(options.assetId).audio;\n    if (audio.paused) {\n      return audio.play();\n    }\n  }\n  async pause(options) {\n    const audio = this.getAudioAsset(options.assetId).audio;\n    return audio.pause();\n  }\n  async getCurrentTime(options) {\n    const audio = this.getAudioAsset(options.assetId).audio;\n    return {\n      currentTime: audio.currentTime\n    };\n  }\n  async getDuration(options) {\n    const audio = this.getAudioAsset(options.assetId).audio;\n    if (Number.isNaN(audio.duration)) {\n      throw 'no duration available';\n    }\n    if (!Number.isFinite(audio.duration)) {\n      throw 'duration not available => media resource is streaming';\n    }\n    return {\n      duration: audio.duration\n    };\n  }\n  async configure(options) {\n    throw `configure is not supported for web: ${JSON.stringify(options)}`;\n  }\n  async preload(options) {\n    var _a;\n    if (NativeAudioWeb.AUDIO_ASSET_BY_ASSET_ID.has(options.assetId)) {\n      throw 'AssetId already exists. Unload first if like to change!';\n    }\n    if (!((_a = options.assetPath) === null || _a === void 0 ? void 0 : _a.length)) {\n      throw 'no assetPath provided';\n    }\n    if (!options.isUrl && !new RegExp('^/?' + NativeAudioWeb.FILE_LOCATION).test(options.assetPath)) {\n      const slashPrefix = options.assetPath.startsWith('/') ? '' : '/';\n      options.assetPath = `${NativeAudioWeb.FILE_LOCATION}${slashPrefix}${options.assetPath}`;\n    }\n    const audio = new Audio(options.assetPath);\n    audio.autoplay = false;\n    audio.loop = false;\n    audio.preload = 'auto';\n    if (options.volume) {\n      audio.volume = options.volume;\n    }\n    NativeAudioWeb.AUDIO_ASSET_BY_ASSET_ID.set(options.assetId, new AudioAsset(audio));\n  }\n  async play(options) {\n    var _a;\n    const audio = this.getAudioAsset(options.assetId).audio;\n    await this.stop(options);\n    audio.loop = false;\n    audio.currentTime = (_a = options.time) !== null && _a !== void 0 ? _a : 0;\n    return audio.play();\n  }\n  async loop(options) {\n    const audio = this.getAudioAsset(options.assetId).audio;\n    await this.stop(options);\n    audio.loop = true;\n    return audio.play();\n  }\n  async stop(options) {\n    const audio = this.getAudioAsset(options.assetId).audio;\n    audio.pause();\n    audio.loop = false;\n    audio.currentTime = 0;\n  }\n  async unload(options) {\n    await this.stop(options);\n    NativeAudioWeb.AUDIO_ASSET_BY_ASSET_ID.delete(options.assetId);\n  }\n  async setVolume(options) {\n    if (typeof (options === null || options === void 0 ? void 0 : options.volume) !== 'number') {\n      throw 'no volume provided';\n    }\n    const audio = this.getAudioAsset(options.assetId).audio;\n    audio.volume = options.volume;\n  }\n  async isPlaying(options) {\n    const audio = this.getAudioAsset(options.assetId).audio;\n    return {\n      isPlaying: !audio.paused\n    };\n  }\n  getAudioAsset(assetId) {\n    this.checkAssetId(assetId);\n    if (!NativeAudioWeb.AUDIO_ASSET_BY_ASSET_ID.has(assetId)) {\n      throw `no asset for assetId \"${assetId}\" available. Call preload first!`;\n    }\n    return NativeAudioWeb.AUDIO_ASSET_BY_ASSET_ID.get(assetId);\n  }\n  checkAssetId(assetId) {\n    if (typeof assetId !== 'string') {\n      throw 'assetId must be a string';\n    }\n    if (!(assetId === null || assetId === void 0 ? void 0 : assetId.length)) {\n      throw 'no assetId provided';\n    }\n  }\n}\nNativeAudioWeb.FILE_LOCATION = 'assets/sounds';\nNativeAudioWeb.AUDIO_ASSET_BY_ASSET_ID = new Map();","map":{"version":3,"names":["WebPlugin","AudioAsset","NativeAudioWeb","resume","options","audio","getAudioAsset","assetId","paused","play","pause","getCurrentTime","currentTime","getDuration","Number","isNaN","duration","isFinite","configure","JSON","stringify","preload","AUDIO_ASSET_BY_ASSET_ID","has","_a","assetPath","length","isUrl","RegExp","FILE_LOCATION","test","slashPrefix","startsWith","Audio","autoplay","loop","volume","set","stop","time","unload","delete","setVolume","isPlaying","checkAssetId","get","Map"],"sources":["../../src/web.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}