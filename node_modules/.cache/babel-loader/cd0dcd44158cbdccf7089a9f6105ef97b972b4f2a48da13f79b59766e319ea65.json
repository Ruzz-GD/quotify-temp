{"ast":null,"code":"var _CodeEditorWidget;\nimport \"core-js/modules/es.array.push.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar CodeEditorWidget_1;\nimport '../../services/markerDecorations.js';\nimport * as dom from '../../../../base/browser/dom.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Emitter, createEventDeliveryQueue } from '../../../../base/common/event.js';\nimport { Disposable, dispose } from '../../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport './editor.css';\nimport { applyFontInfo } from '../../config/domFontInfo.js';\nimport { EditorConfiguration } from '../../config/editorConfiguration.js';\nimport { TabFocus } from '../../config/tabFocus.js';\nimport { EditorExtensionsRegistry } from '../../editorExtensions.js';\nimport { ICodeEditorService } from '../../services/codeEditorService.js';\nimport { View } from '../../view.js';\nimport { DOMLineBreaksComputerFactory } from '../../view/domLineBreaksComputer.js';\nimport { ViewUserInputEvents } from '../../view/viewUserInputEvents.js';\nimport { CodeEditorContributions } from './codeEditorContributions.js';\nimport { filterValidationDecorations } from '../../../common/config/editorOptions.js';\nimport { CursorColumns } from '../../../common/core/cursorColumns.js';\nimport { editorUnnecessaryCodeOpacity } from '../../../common/core/editorColorRegistry.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { WordOperations } from '../../../common/cursor/cursorWordOperations.js';\nimport { InternalEditorAction } from '../../../common/editorAction.js';\nimport * as editorCommon from '../../../common/editorCommon.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { MonospaceLineBreaksComputerFactory } from '../../../common/viewModel/monospaceLineBreaksComputer.js';\nimport { ViewModel } from '../../../common/viewModel/viewModelImpl.js';\nimport * as nls from '../../../../nls.js';\nimport { IAccessibilityService } from '../../../../platform/accessibility/common/accessibility.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ServiceCollection } from '../../../../platform/instantiation/common/serviceCollection.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nimport { editorErrorForeground, editorHintForeground, editorInfoForeground, editorWarningForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { IThemeService, registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nlet CodeEditorWidget = (_CodeEditorWidget = class CodeEditorWidget extends Disposable {\n  //#endregion\n  get isSimpleWidget() {\n    return this._configuration.isSimpleWidget;\n  }\n  get contextMenuId() {\n    return this._configuration.contextMenuId;\n  }\n  constructor(domElement, _options, codeEditorWidgetOptions, instantiationService, codeEditorService, commandService, contextKeyService, themeService, notificationService, accessibilityService, languageConfigurationService, languageFeaturesService) {\n    super();\n    this.languageConfigurationService = languageConfigurationService;\n    //#region Eventing\n    this._deliveryQueue = createEventDeliveryQueue();\n    this._contributions = this._register(new CodeEditorContributions());\n    this._onDidDispose = this._register(new Emitter());\n    this.onDidDispose = this._onDidDispose.event;\n    this._onDidChangeModelContent = this._register(new Emitter({\n      deliveryQueue: this._deliveryQueue\n    }));\n    this.onDidChangeModelContent = this._onDidChangeModelContent.event;\n    this._onDidChangeModelLanguage = this._register(new Emitter({\n      deliveryQueue: this._deliveryQueue\n    }));\n    this.onDidChangeModelLanguage = this._onDidChangeModelLanguage.event;\n    this._onDidChangeModelLanguageConfiguration = this._register(new Emitter({\n      deliveryQueue: this._deliveryQueue\n    }));\n    this.onDidChangeModelLanguageConfiguration = this._onDidChangeModelLanguageConfiguration.event;\n    this._onDidChangeModelOptions = this._register(new Emitter({\n      deliveryQueue: this._deliveryQueue\n    }));\n    this.onDidChangeModelOptions = this._onDidChangeModelOptions.event;\n    this._onDidChangeModelDecorations = this._register(new Emitter({\n      deliveryQueue: this._deliveryQueue\n    }));\n    this.onDidChangeModelDecorations = this._onDidChangeModelDecorations.event;\n    this._onDidChangeModelTokens = this._register(new Emitter({\n      deliveryQueue: this._deliveryQueue\n    }));\n    this.onDidChangeModelTokens = this._onDidChangeModelTokens.event;\n    this._onDidChangeConfiguration = this._register(new Emitter({\n      deliveryQueue: this._deliveryQueue\n    }));\n    this.onDidChangeConfiguration = this._onDidChangeConfiguration.event;\n    this._onWillChangeModel = this._register(new Emitter({\n      deliveryQueue: this._deliveryQueue\n    }));\n    this.onWillChangeModel = this._onWillChangeModel.event;\n    this._onDidChangeModel = this._register(new Emitter({\n      deliveryQueue: this._deliveryQueue\n    }));\n    this.onDidChangeModel = this._onDidChangeModel.event;\n    this._onDidChangeCursorPosition = this._register(new Emitter({\n      deliveryQueue: this._deliveryQueue\n    }));\n    this.onDidChangeCursorPosition = this._onDidChangeCursorPosition.event;\n    this._onDidChangeCursorSelection = this._register(new Emitter({\n      deliveryQueue: this._deliveryQueue\n    }));\n    this.onDidChangeCursorSelection = this._onDidChangeCursorSelection.event;\n    this._onDidAttemptReadOnlyEdit = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n    this.onDidAttemptReadOnlyEdit = this._onDidAttemptReadOnlyEdit.event;\n    this._onDidLayoutChange = this._register(new Emitter({\n      deliveryQueue: this._deliveryQueue\n    }));\n    this.onDidLayoutChange = this._onDidLayoutChange.event;\n    this._editorTextFocus = this._register(new BooleanEventEmitter({\n      deliveryQueue: this._deliveryQueue\n    }));\n    this.onDidFocusEditorText = this._editorTextFocus.onDidChangeToTrue;\n    this.onDidBlurEditorText = this._editorTextFocus.onDidChangeToFalse;\n    this._editorWidgetFocus = this._register(new BooleanEventEmitter({\n      deliveryQueue: this._deliveryQueue\n    }));\n    this.onDidFocusEditorWidget = this._editorWidgetFocus.onDidChangeToTrue;\n    this.onDidBlurEditorWidget = this._editorWidgetFocus.onDidChangeToFalse;\n    this._onWillType = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n    this.onWillType = this._onWillType.event;\n    this._onDidType = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n    this.onDidType = this._onDidType.event;\n    this._onDidCompositionStart = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n    this.onDidCompositionStart = this._onDidCompositionStart.event;\n    this._onDidCompositionEnd = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n    this.onDidCompositionEnd = this._onDidCompositionEnd.event;\n    this._onDidPaste = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n    this.onDidPaste = this._onDidPaste.event;\n    this._onMouseUp = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n    this.onMouseUp = this._onMouseUp.event;\n    this._onMouseDown = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n    this.onMouseDown = this._onMouseDown.event;\n    this._onMouseDrag = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n    this.onMouseDrag = this._onMouseDrag.event;\n    this._onMouseDrop = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n    this.onMouseDrop = this._onMouseDrop.event;\n    this._onMouseDropCanceled = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n    this.onMouseDropCanceled = this._onMouseDropCanceled.event;\n    this._onDropIntoEditor = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n    this.onDropIntoEditor = this._onDropIntoEditor.event;\n    this._onContextMenu = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n    this.onContextMenu = this._onContextMenu.event;\n    this._onMouseMove = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n    this.onMouseMove = this._onMouseMove.event;\n    this._onMouseLeave = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n    this.onMouseLeave = this._onMouseLeave.event;\n    this._onMouseWheel = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n    this.onMouseWheel = this._onMouseWheel.event;\n    this._onKeyUp = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n    this.onKeyUp = this._onKeyUp.event;\n    this._onKeyDown = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n    this.onKeyDown = this._onKeyDown.event;\n    this._onDidContentSizeChange = this._register(new Emitter({\n      deliveryQueue: this._deliveryQueue\n    }));\n    this.onDidContentSizeChange = this._onDidContentSizeChange.event;\n    this._onDidScrollChange = this._register(new Emitter({\n      deliveryQueue: this._deliveryQueue\n    }));\n    this.onDidScrollChange = this._onDidScrollChange.event;\n    this._onDidChangeViewZones = this._register(new Emitter({\n      deliveryQueue: this._deliveryQueue\n    }));\n    this.onDidChangeViewZones = this._onDidChangeViewZones.event;\n    this._onDidChangeHiddenAreas = this._register(new Emitter({\n      deliveryQueue: this._deliveryQueue\n    }));\n    this.onDidChangeHiddenAreas = this._onDidChangeHiddenAreas.event;\n    this._updateCounter = 0;\n    this._onBeginUpdate = this._register(new Emitter());\n    this.onBeginUpdate = this._onBeginUpdate.event;\n    this._onEndUpdate = this._register(new Emitter());\n    this.onEndUpdate = this._onEndUpdate.event;\n    this._actions = new Map();\n    this._bannerDomNode = null;\n    this._dropIntoEditorDecorations = this.createDecorationsCollection();\n    codeEditorService.willCreateCodeEditor();\n    const options = {\n      ..._options\n    };\n    this._domElement = domElement;\n    this._overflowWidgetsDomNode = options.overflowWidgetsDomNode;\n    delete options.overflowWidgetsDomNode;\n    this._id = ++EDITOR_ID;\n    this._decorationTypeKeysToIds = {};\n    this._decorationTypeSubtypes = {};\n    this._telemetryData = codeEditorWidgetOptions.telemetryData;\n    this._configuration = this._register(this._createConfiguration(codeEditorWidgetOptions.isSimpleWidget || false, codeEditorWidgetOptions.contextMenuId ?? (codeEditorWidgetOptions.isSimpleWidget ? MenuId.SimpleEditorContext : MenuId.EditorContext), options, accessibilityService));\n    this._register(this._configuration.onDidChange(e => {\n      this._onDidChangeConfiguration.fire(e);\n      const options = this._configuration.options;\n      if (e.hasChanged(146 /* EditorOption.layoutInfo */)) {\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        this._onDidLayoutChange.fire(layoutInfo);\n      }\n    }));\n    this._contextKeyService = this._register(contextKeyService.createScoped(this._domElement));\n    this._notificationService = notificationService;\n    this._codeEditorService = codeEditorService;\n    this._commandService = commandService;\n    this._themeService = themeService;\n    this._register(new EditorContextKeysManager(this, this._contextKeyService));\n    this._register(new EditorModeContext(this, this._contextKeyService, languageFeaturesService));\n    this._instantiationService = this._register(instantiationService.createChild(new ServiceCollection([IContextKeyService, this._contextKeyService])));\n    this._modelData = null;\n    this._focusTracker = new CodeEditorWidgetFocusTracker(domElement, this._overflowWidgetsDomNode);\n    this._register(this._focusTracker.onChange(() => {\n      this._editorWidgetFocus.setValue(this._focusTracker.hasFocus());\n    }));\n    this._contentWidgets = {};\n    this._overlayWidgets = {};\n    this._glyphMarginWidgets = {};\n    let contributions;\n    if (Array.isArray(codeEditorWidgetOptions.contributions)) {\n      contributions = codeEditorWidgetOptions.contributions;\n    } else {\n      contributions = EditorExtensionsRegistry.getEditorContributions();\n    }\n    this._contributions.initialize(this, contributions, this._instantiationService);\n    for (const action of EditorExtensionsRegistry.getEditorActions()) {\n      if (this._actions.has(action.id)) {\n        onUnexpectedError(new Error(`Cannot have two actions with the same id ${action.id}`));\n        continue;\n      }\n      const internalAction = new InternalEditorAction(action.id, action.label, action.alias, action.metadata, action.precondition ?? undefined, args => {\n        return this._instantiationService.invokeFunction(accessor => {\n          return Promise.resolve(action.runEditorCommand(accessor, this, args));\n        });\n      }, this._contextKeyService);\n      this._actions.set(internalAction.id, internalAction);\n    }\n    const isDropIntoEnabled = () => {\n      return !this._configuration.options.get(92 /* EditorOption.readOnly */) && this._configuration.options.get(36 /* EditorOption.dropIntoEditor */).enabled;\n    };\n    this._register(new dom.DragAndDropObserver(this._domElement, {\n      onDragOver: e => {\n        if (!isDropIntoEnabled()) {\n          return;\n        }\n        const target = this.getTargetAtClientPoint(e.clientX, e.clientY);\n        if (target?.position) {\n          this.showDropIndicatorAt(target.position);\n        }\n      },\n      onDrop: async e => {\n        if (!isDropIntoEnabled()) {\n          return;\n        }\n        this.removeDropIndicator();\n        if (!e.dataTransfer) {\n          return;\n        }\n        const target = this.getTargetAtClientPoint(e.clientX, e.clientY);\n        if (target?.position) {\n          this._onDropIntoEditor.fire({\n            position: target.position,\n            event: e\n          });\n        }\n      },\n      onDragLeave: () => {\n        this.removeDropIndicator();\n      },\n      onDragEnd: () => {\n        this.removeDropIndicator();\n      }\n    }));\n    this._codeEditorService.addCodeEditor(this);\n  }\n  writeScreenReaderContent(reason) {\n    this._modelData?.view.writeScreenReaderContent(reason);\n  }\n  _createConfiguration(isSimpleWidget, contextMenuId, options, accessibilityService) {\n    return new EditorConfiguration(isSimpleWidget, contextMenuId, options, this._domElement, accessibilityService);\n  }\n  getId() {\n    return this.getEditorType() + ':' + this._id;\n  }\n  getEditorType() {\n    return editorCommon.EditorType.ICodeEditor;\n  }\n  dispose() {\n    this._codeEditorService.removeCodeEditor(this);\n    this._focusTracker.dispose();\n    this._actions.clear();\n    this._contentWidgets = {};\n    this._overlayWidgets = {};\n    this._removeDecorationTypes();\n    this._postDetachModelCleanup(this._detachModel());\n    this._onDidDispose.fire();\n    super.dispose();\n  }\n  invokeWithinContext(fn) {\n    return this._instantiationService.invokeFunction(fn);\n  }\n  updateOptions(newOptions) {\n    this._configuration.updateOptions(newOptions || {});\n  }\n  getOptions() {\n    return this._configuration.options;\n  }\n  getOption(id) {\n    return this._configuration.options.get(id);\n  }\n  getRawOptions() {\n    return this._configuration.getRawOptions();\n  }\n  getOverflowWidgetsDomNode() {\n    return this._overflowWidgetsDomNode;\n  }\n  getConfiguredWordAtPosition(position) {\n    if (!this._modelData) {\n      return null;\n    }\n    return WordOperations.getWordAtPosition(this._modelData.model, this._configuration.options.get(132 /* EditorOption.wordSeparators */), this._configuration.options.get(131 /* EditorOption.wordSegmenterLocales */), position);\n  }\n  getValue(options = null) {\n    if (!this._modelData) {\n      return '';\n    }\n    const preserveBOM = options && options.preserveBOM ? true : false;\n    let eolPreference = 0 /* EndOfLinePreference.TextDefined */;\n    if (options && options.lineEnding && options.lineEnding === '\\n') {\n      eolPreference = 1 /* EndOfLinePreference.LF */;\n    } else if (options && options.lineEnding && options.lineEnding === '\\r\\n') {\n      eolPreference = 2 /* EndOfLinePreference.CRLF */;\n    }\n    return this._modelData.model.getValue(eolPreference, preserveBOM);\n  }\n  setValue(newValue) {\n    try {\n      this._beginUpdate();\n      if (!this._modelData) {\n        return;\n      }\n      this._modelData.model.setValue(newValue);\n    } finally {\n      this._endUpdate();\n    }\n  }\n  getModel() {\n    if (!this._modelData) {\n      return null;\n    }\n    return this._modelData.model;\n  }\n  setModel(_model = null) {\n    try {\n      this._beginUpdate();\n      const model = _model;\n      if (this._modelData === null && model === null) {\n        // Current model is the new model\n        return;\n      }\n      if (this._modelData && this._modelData.model === model) {\n        // Current model is the new model\n        return;\n      }\n      const e = {\n        oldModelUrl: this._modelData?.model.uri || null,\n        newModelUrl: model?.uri || null\n      };\n      this._onWillChangeModel.fire(e);\n      const hasTextFocus = this.hasTextFocus();\n      const detachedModel = this._detachModel();\n      this._attachModel(model);\n      if (hasTextFocus && this.hasModel()) {\n        this.focus();\n      }\n      this._removeDecorationTypes();\n      this._onDidChangeModel.fire(e);\n      this._postDetachModelCleanup(detachedModel);\n      this._contributionsDisposable = this._contributions.onAfterModelAttached();\n    } finally {\n      this._endUpdate();\n    }\n  }\n  _removeDecorationTypes() {\n    this._decorationTypeKeysToIds = {};\n    if (this._decorationTypeSubtypes) {\n      for (const decorationType in this._decorationTypeSubtypes) {\n        const subTypes = this._decorationTypeSubtypes[decorationType];\n        for (const subType in subTypes) {\n          this._removeDecorationType(decorationType + '-' + subType);\n        }\n      }\n      this._decorationTypeSubtypes = {};\n    }\n  }\n  getVisibleRanges() {\n    if (!this._modelData) {\n      return [];\n    }\n    return this._modelData.viewModel.getVisibleRanges();\n  }\n  getVisibleRangesPlusViewportAboveBelow() {\n    if (!this._modelData) {\n      return [];\n    }\n    return this._modelData.viewModel.getVisibleRangesPlusViewportAboveBelow();\n  }\n  getWhitespaces() {\n    if (!this._modelData) {\n      return [];\n    }\n    return this._modelData.viewModel.viewLayout.getWhitespaces();\n  }\n  static _getVerticalOffsetAfterPosition(modelData, modelLineNumber, modelColumn, includeViewZones) {\n    const modelPosition = modelData.model.validatePosition({\n      lineNumber: modelLineNumber,\n      column: modelColumn\n    });\n    const viewPosition = modelData.viewModel.coordinatesConverter.convertModelPositionToViewPosition(modelPosition);\n    return modelData.viewModel.viewLayout.getVerticalOffsetAfterLineNumber(viewPosition.lineNumber, includeViewZones);\n  }\n  getTopForLineNumber(lineNumber, includeViewZones = false) {\n    if (!this._modelData) {\n      return -1;\n    }\n    return CodeEditorWidget_1._getVerticalOffsetForPosition(this._modelData, lineNumber, 1, includeViewZones);\n  }\n  getTopForPosition(lineNumber, column) {\n    if (!this._modelData) {\n      return -1;\n    }\n    return CodeEditorWidget_1._getVerticalOffsetForPosition(this._modelData, lineNumber, column, false);\n  }\n  static _getVerticalOffsetForPosition(modelData, modelLineNumber, modelColumn, includeViewZones = false) {\n    const modelPosition = modelData.model.validatePosition({\n      lineNumber: modelLineNumber,\n      column: modelColumn\n    });\n    const viewPosition = modelData.viewModel.coordinatesConverter.convertModelPositionToViewPosition(modelPosition);\n    return modelData.viewModel.viewLayout.getVerticalOffsetForLineNumber(viewPosition.lineNumber, includeViewZones);\n  }\n  getBottomForLineNumber(lineNumber, includeViewZones = false) {\n    if (!this._modelData) {\n      return -1;\n    }\n    return CodeEditorWidget_1._getVerticalOffsetAfterPosition(this._modelData, lineNumber, 1, includeViewZones);\n  }\n  setHiddenAreas(ranges, source) {\n    this._modelData?.viewModel.setHiddenAreas(ranges.map(r => Range.lift(r)), source);\n  }\n  getVisibleColumnFromPosition(rawPosition) {\n    if (!this._modelData) {\n      return rawPosition.column;\n    }\n    const position = this._modelData.model.validatePosition(rawPosition);\n    const tabSize = this._modelData.model.getOptions().tabSize;\n    return CursorColumns.visibleColumnFromColumn(this._modelData.model.getLineContent(position.lineNumber), position.column, tabSize) + 1;\n  }\n  getPosition() {\n    if (!this._modelData) {\n      return null;\n    }\n    return this._modelData.viewModel.getPosition();\n  }\n  setPosition(position, source = 'api') {\n    if (!this._modelData) {\n      return;\n    }\n    if (!Position.isIPosition(position)) {\n      throw new Error('Invalid arguments');\n    }\n    this._modelData.viewModel.setSelections(source, [{\n      selectionStartLineNumber: position.lineNumber,\n      selectionStartColumn: position.column,\n      positionLineNumber: position.lineNumber,\n      positionColumn: position.column\n    }]);\n  }\n  _sendRevealRange(modelRange, verticalType, revealHorizontal, scrollType) {\n    if (!this._modelData) {\n      return;\n    }\n    if (!Range.isIRange(modelRange)) {\n      throw new Error('Invalid arguments');\n    }\n    const validatedModelRange = this._modelData.model.validateRange(modelRange);\n    const viewRange = this._modelData.viewModel.coordinatesConverter.convertModelRangeToViewRange(validatedModelRange);\n    this._modelData.viewModel.revealRange('api', revealHorizontal, viewRange, verticalType, scrollType);\n  }\n  revealLine(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n    this._revealLine(lineNumber, 0 /* VerticalRevealType.Simple */, scrollType);\n  }\n  revealLineInCenter(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n    this._revealLine(lineNumber, 1 /* VerticalRevealType.Center */, scrollType);\n  }\n  revealLineInCenterIfOutsideViewport(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n    this._revealLine(lineNumber, 2 /* VerticalRevealType.CenterIfOutsideViewport */, scrollType);\n  }\n  revealLineNearTop(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n    this._revealLine(lineNumber, 5 /* VerticalRevealType.NearTop */, scrollType);\n  }\n  _revealLine(lineNumber, revealType, scrollType) {\n    if (typeof lineNumber !== 'number') {\n      throw new Error('Invalid arguments');\n    }\n    this._sendRevealRange(new Range(lineNumber, 1, lineNumber, 1), revealType, false, scrollType);\n  }\n  revealPosition(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n    this._revealPosition(position, 0 /* VerticalRevealType.Simple */, true, scrollType);\n  }\n  revealPositionInCenter(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n    this._revealPosition(position, 1 /* VerticalRevealType.Center */, true, scrollType);\n  }\n  revealPositionInCenterIfOutsideViewport(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n    this._revealPosition(position, 2 /* VerticalRevealType.CenterIfOutsideViewport */, true, scrollType);\n  }\n  revealPositionNearTop(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n    this._revealPosition(position, 5 /* VerticalRevealType.NearTop */, true, scrollType);\n  }\n  _revealPosition(position, verticalType, revealHorizontal, scrollType) {\n    if (!Position.isIPosition(position)) {\n      throw new Error('Invalid arguments');\n    }\n    this._sendRevealRange(new Range(position.lineNumber, position.column, position.lineNumber, position.column), verticalType, revealHorizontal, scrollType);\n  }\n  getSelection() {\n    if (!this._modelData) {\n      return null;\n    }\n    return this._modelData.viewModel.getSelection();\n  }\n  getSelections() {\n    if (!this._modelData) {\n      return null;\n    }\n    return this._modelData.viewModel.getSelections();\n  }\n  setSelection(something, source = 'api') {\n    const isSelection = Selection.isISelection(something);\n    const isRange = Range.isIRange(something);\n    if (!isSelection && !isRange) {\n      throw new Error('Invalid arguments');\n    }\n    if (isSelection) {\n      this._setSelectionImpl(something, source);\n    } else if (isRange) {\n      // act as if it was an IRange\n      const selection = {\n        selectionStartLineNumber: something.startLineNumber,\n        selectionStartColumn: something.startColumn,\n        positionLineNumber: something.endLineNumber,\n        positionColumn: something.endColumn\n      };\n      this._setSelectionImpl(selection, source);\n    }\n  }\n  _setSelectionImpl(sel, source) {\n    if (!this._modelData) {\n      return;\n    }\n    const selection = new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n    this._modelData.viewModel.setSelections(source, [selection]);\n  }\n  revealLines(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n    this._revealLines(startLineNumber, endLineNumber, 0 /* VerticalRevealType.Simple */, scrollType);\n  }\n  revealLinesInCenter(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n    this._revealLines(startLineNumber, endLineNumber, 1 /* VerticalRevealType.Center */, scrollType);\n  }\n  revealLinesInCenterIfOutsideViewport(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n    this._revealLines(startLineNumber, endLineNumber, 2 /* VerticalRevealType.CenterIfOutsideViewport */, scrollType);\n  }\n  revealLinesNearTop(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n    this._revealLines(startLineNumber, endLineNumber, 5 /* VerticalRevealType.NearTop */, scrollType);\n  }\n  _revealLines(startLineNumber, endLineNumber, verticalType, scrollType) {\n    if (typeof startLineNumber !== 'number' || typeof endLineNumber !== 'number') {\n      throw new Error('Invalid arguments');\n    }\n    this._sendRevealRange(new Range(startLineNumber, 1, endLineNumber, 1), verticalType, false, scrollType);\n  }\n  revealRange(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */, revealVerticalInCenter = false, revealHorizontal = true) {\n    this._revealRange(range, revealVerticalInCenter ? 1 /* VerticalRevealType.Center */ : 0 /* VerticalRevealType.Simple */, revealHorizontal, scrollType);\n  }\n  revealRangeInCenter(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n    this._revealRange(range, 1 /* VerticalRevealType.Center */, true, scrollType);\n  }\n  revealRangeInCenterIfOutsideViewport(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n    this._revealRange(range, 2 /* VerticalRevealType.CenterIfOutsideViewport */, true, scrollType);\n  }\n  revealRangeNearTop(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n    this._revealRange(range, 5 /* VerticalRevealType.NearTop */, true, scrollType);\n  }\n  revealRangeNearTopIfOutsideViewport(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n    this._revealRange(range, 6 /* VerticalRevealType.NearTopIfOutsideViewport */, true, scrollType);\n  }\n  revealRangeAtTop(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n    this._revealRange(range, 3 /* VerticalRevealType.Top */, true, scrollType);\n  }\n  _revealRange(range, verticalType, revealHorizontal, scrollType) {\n    if (!Range.isIRange(range)) {\n      throw new Error('Invalid arguments');\n    }\n    this._sendRevealRange(Range.lift(range), verticalType, revealHorizontal, scrollType);\n  }\n  setSelections(ranges, source = 'api', reason = 0 /* CursorChangeReason.NotSet */) {\n    if (!this._modelData) {\n      return;\n    }\n    if (!ranges || ranges.length === 0) {\n      throw new Error('Invalid arguments');\n    }\n    for (let i = 0, len = ranges.length; i < len; i++) {\n      if (!Selection.isISelection(ranges[i])) {\n        throw new Error('Invalid arguments');\n      }\n    }\n    this._modelData.viewModel.setSelections(source, ranges, reason);\n  }\n  getContentWidth() {\n    if (!this._modelData) {\n      return -1;\n    }\n    return this._modelData.viewModel.viewLayout.getContentWidth();\n  }\n  getScrollWidth() {\n    if (!this._modelData) {\n      return -1;\n    }\n    return this._modelData.viewModel.viewLayout.getScrollWidth();\n  }\n  getScrollLeft() {\n    if (!this._modelData) {\n      return -1;\n    }\n    return this._modelData.viewModel.viewLayout.getCurrentScrollLeft();\n  }\n  getContentHeight() {\n    if (!this._modelData) {\n      return -1;\n    }\n    return this._modelData.viewModel.viewLayout.getContentHeight();\n  }\n  getScrollHeight() {\n    if (!this._modelData) {\n      return -1;\n    }\n    return this._modelData.viewModel.viewLayout.getScrollHeight();\n  }\n  getScrollTop() {\n    if (!this._modelData) {\n      return -1;\n    }\n    return this._modelData.viewModel.viewLayout.getCurrentScrollTop();\n  }\n  setScrollLeft(newScrollLeft, scrollType = 1 /* editorCommon.ScrollType.Immediate */) {\n    if (!this._modelData) {\n      return;\n    }\n    if (typeof newScrollLeft !== 'number') {\n      throw new Error('Invalid arguments');\n    }\n    this._modelData.viewModel.viewLayout.setScrollPosition({\n      scrollLeft: newScrollLeft\n    }, scrollType);\n  }\n  setScrollTop(newScrollTop, scrollType = 1 /* editorCommon.ScrollType.Immediate */) {\n    if (!this._modelData) {\n      return;\n    }\n    if (typeof newScrollTop !== 'number') {\n      throw new Error('Invalid arguments');\n    }\n    this._modelData.viewModel.viewLayout.setScrollPosition({\n      scrollTop: newScrollTop\n    }, scrollType);\n  }\n  setScrollPosition(position, scrollType = 1 /* editorCommon.ScrollType.Immediate */) {\n    if (!this._modelData) {\n      return;\n    }\n    this._modelData.viewModel.viewLayout.setScrollPosition(position, scrollType);\n  }\n  hasPendingScrollAnimation() {\n    if (!this._modelData) {\n      return false;\n    }\n    return this._modelData.viewModel.viewLayout.hasPendingScrollAnimation();\n  }\n  saveViewState() {\n    if (!this._modelData) {\n      return null;\n    }\n    const contributionsState = this._contributions.saveViewState();\n    const cursorState = this._modelData.viewModel.saveCursorState();\n    const viewState = this._modelData.viewModel.saveState();\n    return {\n      cursorState: cursorState,\n      viewState: viewState,\n      contributionsState: contributionsState\n    };\n  }\n  restoreViewState(s) {\n    if (!this._modelData || !this._modelData.hasRealView) {\n      return;\n    }\n    const codeEditorState = s;\n    if (codeEditorState && codeEditorState.cursorState && codeEditorState.viewState) {\n      const cursorState = codeEditorState.cursorState;\n      if (Array.isArray(cursorState)) {\n        if (cursorState.length > 0) {\n          this._modelData.viewModel.restoreCursorState(cursorState);\n        }\n      } else {\n        // Backwards compatibility\n        this._modelData.viewModel.restoreCursorState([cursorState]);\n      }\n      this._contributions.restoreViewState(codeEditorState.contributionsState || {});\n      const reducedState = this._modelData.viewModel.reduceRestoreState(codeEditorState.viewState);\n      this._modelData.view.restoreState(reducedState);\n    }\n  }\n  handleInitialized() {\n    this._getViewModel()?.visibleLinesStabilized();\n  }\n  getContribution(id) {\n    return this._contributions.get(id);\n  }\n  getActions() {\n    return Array.from(this._actions.values());\n  }\n  getSupportedActions() {\n    let result = this.getActions();\n    result = result.filter(action => action.isSupported());\n    return result;\n  }\n  getAction(id) {\n    return this._actions.get(id) || null;\n  }\n  trigger(source, handlerId, payload) {\n    payload = payload || {};\n    try {\n      this._beginUpdate();\n      switch (handlerId) {\n        case \"compositionStart\" /* editorCommon.Handler.CompositionStart */:\n          this._startComposition();\n          return;\n        case \"compositionEnd\" /* editorCommon.Handler.CompositionEnd */:\n          this._endComposition(source);\n          return;\n        case \"type\" /* editorCommon.Handler.Type */:\n          {\n            const args = payload;\n            this._type(source, args.text || '');\n            return;\n          }\n        case \"replacePreviousChar\" /* editorCommon.Handler.ReplacePreviousChar */:\n          {\n            const args = payload;\n            this._compositionType(source, args.text || '', args.replaceCharCnt || 0, 0, 0);\n            return;\n          }\n        case \"compositionType\" /* editorCommon.Handler.CompositionType */:\n          {\n            const args = payload;\n            this._compositionType(source, args.text || '', args.replacePrevCharCnt || 0, args.replaceNextCharCnt || 0, args.positionDelta || 0);\n            return;\n          }\n        case \"paste\" /* editorCommon.Handler.Paste */:\n          {\n            const args = payload;\n            this._paste(source, args.text || '', args.pasteOnNewLine || false, args.multicursorText || null, args.mode || null, args.clipboardEvent);\n            return;\n          }\n        case \"cut\" /* editorCommon.Handler.Cut */:\n          this._cut(source);\n          return;\n      }\n      const action = this.getAction(handlerId);\n      if (action) {\n        Promise.resolve(action.run(payload)).then(undefined, onUnexpectedError);\n        return;\n      }\n      if (!this._modelData) {\n        return;\n      }\n      if (this._triggerEditorCommand(source, handlerId, payload)) {\n        return;\n      }\n      this._triggerCommand(handlerId, payload);\n    } finally {\n      this._endUpdate();\n    }\n  }\n  _triggerCommand(handlerId, payload) {\n    this._commandService.executeCommand(handlerId, payload);\n  }\n  _startComposition() {\n    if (!this._modelData) {\n      return;\n    }\n    this._modelData.viewModel.startComposition();\n    this._onDidCompositionStart.fire();\n  }\n  _endComposition(source) {\n    if (!this._modelData) {\n      return;\n    }\n    this._modelData.viewModel.endComposition(source);\n    this._onDidCompositionEnd.fire();\n  }\n  _type(source, text) {\n    if (!this._modelData || text.length === 0) {\n      return;\n    }\n    if (source === 'keyboard') {\n      this._onWillType.fire(text);\n    }\n    this._modelData.viewModel.type(text, source);\n    if (source === 'keyboard') {\n      this._onDidType.fire(text);\n    }\n  }\n  _compositionType(source, text, replacePrevCharCnt, replaceNextCharCnt, positionDelta) {\n    if (!this._modelData) {\n      return;\n    }\n    this._modelData.viewModel.compositionType(text, replacePrevCharCnt, replaceNextCharCnt, positionDelta, source);\n  }\n  _paste(source, text, pasteOnNewLine, multicursorText, mode, clipboardEvent) {\n    if (!this._modelData) {\n      return;\n    }\n    const viewModel = this._modelData.viewModel;\n    const startPosition = viewModel.getSelection().getStartPosition();\n    viewModel.paste(text, pasteOnNewLine, multicursorText, source);\n    const endPosition = viewModel.getSelection().getStartPosition();\n    if (source === 'keyboard') {\n      this._onDidPaste.fire({\n        clipboardEvent,\n        range: new Range(startPosition.lineNumber, startPosition.column, endPosition.lineNumber, endPosition.column),\n        languageId: mode\n      });\n    }\n  }\n  _cut(source) {\n    if (!this._modelData) {\n      return;\n    }\n    this._modelData.viewModel.cut(source);\n  }\n  _triggerEditorCommand(source, handlerId, payload) {\n    const command = EditorExtensionsRegistry.getEditorCommand(handlerId);\n    if (command) {\n      payload = payload || {};\n      payload.source = source;\n      this._instantiationService.invokeFunction(accessor => {\n        Promise.resolve(command.runEditorCommand(accessor, this, payload)).then(undefined, onUnexpectedError);\n      });\n      return true;\n    }\n    return false;\n  }\n  _getViewModel() {\n    if (!this._modelData) {\n      return null;\n    }\n    return this._modelData.viewModel;\n  }\n  pushUndoStop() {\n    if (!this._modelData) {\n      return false;\n    }\n    if (this._configuration.options.get(92 /* EditorOption.readOnly */)) {\n      // read only editor => sorry!\n      return false;\n    }\n    this._modelData.model.pushStackElement();\n    return true;\n  }\n  popUndoStop() {\n    if (!this._modelData) {\n      return false;\n    }\n    if (this._configuration.options.get(92 /* EditorOption.readOnly */)) {\n      // read only editor => sorry!\n      return false;\n    }\n    this._modelData.model.popStackElement();\n    return true;\n  }\n  executeEdits(source, edits, endCursorState) {\n    if (!this._modelData) {\n      return false;\n    }\n    if (this._configuration.options.get(92 /* EditorOption.readOnly */)) {\n      // read only editor => sorry!\n      return false;\n    }\n    let cursorStateComputer;\n    if (!endCursorState) {\n      cursorStateComputer = () => null;\n    } else if (Array.isArray(endCursorState)) {\n      cursorStateComputer = () => endCursorState;\n    } else {\n      cursorStateComputer = endCursorState;\n    }\n    this._modelData.viewModel.executeEdits(source, edits, cursorStateComputer);\n    return true;\n  }\n  executeCommand(source, command) {\n    if (!this._modelData) {\n      return;\n    }\n    this._modelData.viewModel.executeCommand(command, source);\n  }\n  executeCommands(source, commands) {\n    if (!this._modelData) {\n      return;\n    }\n    this._modelData.viewModel.executeCommands(commands, source);\n  }\n  createDecorationsCollection(decorations) {\n    return new EditorDecorationsCollection(this, decorations);\n  }\n  changeDecorations(callback) {\n    if (!this._modelData) {\n      // callback will not be called\n      return null;\n    }\n    return this._modelData.model.changeDecorations(callback, this._id);\n  }\n  getLineDecorations(lineNumber) {\n    if (!this._modelData) {\n      return null;\n    }\n    return this._modelData.model.getLineDecorations(lineNumber, this._id, filterValidationDecorations(this._configuration.options));\n  }\n  getDecorationsInRange(range) {\n    if (!this._modelData) {\n      return null;\n    }\n    return this._modelData.model.getDecorationsInRange(range, this._id, filterValidationDecorations(this._configuration.options));\n  }\n  /**\n   * @deprecated\n   */\n  deltaDecorations(oldDecorations, newDecorations) {\n    if (!this._modelData) {\n      return [];\n    }\n    if (oldDecorations.length === 0 && newDecorations.length === 0) {\n      return oldDecorations;\n    }\n    return this._modelData.model.deltaDecorations(oldDecorations, newDecorations, this._id);\n  }\n  removeDecorations(decorationIds) {\n    if (!this._modelData || decorationIds.length === 0) {\n      return;\n    }\n    this._modelData.model.changeDecorations(changeAccessor => {\n      changeAccessor.deltaDecorations(decorationIds, []);\n    });\n  }\n  removeDecorationsByType(decorationTypeKey) {\n    // remove decorations for type and sub type\n    const oldDecorationsIds = this._decorationTypeKeysToIds[decorationTypeKey];\n    if (oldDecorationsIds) {\n      this.changeDecorations(accessor => accessor.deltaDecorations(oldDecorationsIds, []));\n    }\n    if (this._decorationTypeKeysToIds.hasOwnProperty(decorationTypeKey)) {\n      delete this._decorationTypeKeysToIds[decorationTypeKey];\n    }\n    if (this._decorationTypeSubtypes.hasOwnProperty(decorationTypeKey)) {\n      delete this._decorationTypeSubtypes[decorationTypeKey];\n    }\n  }\n  getLayoutInfo() {\n    const options = this._configuration.options;\n    const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n    return layoutInfo;\n  }\n  createOverviewRuler(cssClassName) {\n    if (!this._modelData || !this._modelData.hasRealView) {\n      return null;\n    }\n    return this._modelData.view.createOverviewRuler(cssClassName);\n  }\n  getContainerDomNode() {\n    return this._domElement;\n  }\n  getDomNode() {\n    if (!this._modelData || !this._modelData.hasRealView) {\n      return null;\n    }\n    return this._modelData.view.domNode.domNode;\n  }\n  delegateVerticalScrollbarPointerDown(browserEvent) {\n    if (!this._modelData || !this._modelData.hasRealView) {\n      return;\n    }\n    this._modelData.view.delegateVerticalScrollbarPointerDown(browserEvent);\n  }\n  delegateScrollFromMouseWheelEvent(browserEvent) {\n    if (!this._modelData || !this._modelData.hasRealView) {\n      return;\n    }\n    this._modelData.view.delegateScrollFromMouseWheelEvent(browserEvent);\n  }\n  layout(dimension, postponeRendering = false) {\n    this._configuration.observeContainer(dimension);\n    if (!postponeRendering) {\n      this.render();\n    }\n  }\n  focus() {\n    if (!this._modelData || !this._modelData.hasRealView) {\n      return;\n    }\n    this._modelData.view.focus();\n  }\n  hasTextFocus() {\n    if (!this._modelData || !this._modelData.hasRealView) {\n      return false;\n    }\n    return this._modelData.view.isFocused();\n  }\n  hasWidgetFocus() {\n    return this._focusTracker && this._focusTracker.hasFocus();\n  }\n  addContentWidget(widget) {\n    const widgetData = {\n      widget: widget,\n      position: widget.getPosition()\n    };\n    if (this._contentWidgets.hasOwnProperty(widget.getId())) {\n      console.warn('Overwriting a content widget with the same id:' + widget.getId());\n    }\n    this._contentWidgets[widget.getId()] = widgetData;\n    if (this._modelData && this._modelData.hasRealView) {\n      this._modelData.view.addContentWidget(widgetData);\n    }\n  }\n  layoutContentWidget(widget) {\n    const widgetId = widget.getId();\n    if (this._contentWidgets.hasOwnProperty(widgetId)) {\n      const widgetData = this._contentWidgets[widgetId];\n      widgetData.position = widget.getPosition();\n      if (this._modelData && this._modelData.hasRealView) {\n        this._modelData.view.layoutContentWidget(widgetData);\n      }\n    }\n  }\n  removeContentWidget(widget) {\n    const widgetId = widget.getId();\n    if (this._contentWidgets.hasOwnProperty(widgetId)) {\n      const widgetData = this._contentWidgets[widgetId];\n      delete this._contentWidgets[widgetId];\n      if (this._modelData && this._modelData.hasRealView) {\n        this._modelData.view.removeContentWidget(widgetData);\n      }\n    }\n  }\n  addOverlayWidget(widget) {\n    const widgetData = {\n      widget: widget,\n      position: widget.getPosition()\n    };\n    if (this._overlayWidgets.hasOwnProperty(widget.getId())) {\n      console.warn('Overwriting an overlay widget with the same id.');\n    }\n    this._overlayWidgets[widget.getId()] = widgetData;\n    if (this._modelData && this._modelData.hasRealView) {\n      this._modelData.view.addOverlayWidget(widgetData);\n    }\n  }\n  layoutOverlayWidget(widget) {\n    const widgetId = widget.getId();\n    if (this._overlayWidgets.hasOwnProperty(widgetId)) {\n      const widgetData = this._overlayWidgets[widgetId];\n      widgetData.position = widget.getPosition();\n      if (this._modelData && this._modelData.hasRealView) {\n        this._modelData.view.layoutOverlayWidget(widgetData);\n      }\n    }\n  }\n  removeOverlayWidget(widget) {\n    const widgetId = widget.getId();\n    if (this._overlayWidgets.hasOwnProperty(widgetId)) {\n      const widgetData = this._overlayWidgets[widgetId];\n      delete this._overlayWidgets[widgetId];\n      if (this._modelData && this._modelData.hasRealView) {\n        this._modelData.view.removeOverlayWidget(widgetData);\n      }\n    }\n  }\n  addGlyphMarginWidget(widget) {\n    const widgetData = {\n      widget: widget,\n      position: widget.getPosition()\n    };\n    if (this._glyphMarginWidgets.hasOwnProperty(widget.getId())) {\n      console.warn('Overwriting a glyph margin widget with the same id.');\n    }\n    this._glyphMarginWidgets[widget.getId()] = widgetData;\n    if (this._modelData && this._modelData.hasRealView) {\n      this._modelData.view.addGlyphMarginWidget(widgetData);\n    }\n  }\n  layoutGlyphMarginWidget(widget) {\n    const widgetId = widget.getId();\n    if (this._glyphMarginWidgets.hasOwnProperty(widgetId)) {\n      const widgetData = this._glyphMarginWidgets[widgetId];\n      widgetData.position = widget.getPosition();\n      if (this._modelData && this._modelData.hasRealView) {\n        this._modelData.view.layoutGlyphMarginWidget(widgetData);\n      }\n    }\n  }\n  removeGlyphMarginWidget(widget) {\n    const widgetId = widget.getId();\n    if (this._glyphMarginWidgets.hasOwnProperty(widgetId)) {\n      const widgetData = this._glyphMarginWidgets[widgetId];\n      delete this._glyphMarginWidgets[widgetId];\n      if (this._modelData && this._modelData.hasRealView) {\n        this._modelData.view.removeGlyphMarginWidget(widgetData);\n      }\n    }\n  }\n  changeViewZones(callback) {\n    if (!this._modelData || !this._modelData.hasRealView) {\n      return;\n    }\n    this._modelData.view.change(callback);\n  }\n  getTargetAtClientPoint(clientX, clientY) {\n    if (!this._modelData || !this._modelData.hasRealView) {\n      return null;\n    }\n    return this._modelData.view.getTargetAtClientPoint(clientX, clientY);\n  }\n  getScrolledVisiblePosition(rawPosition) {\n    if (!this._modelData || !this._modelData.hasRealView) {\n      return null;\n    }\n    const position = this._modelData.model.validatePosition(rawPosition);\n    const options = this._configuration.options;\n    const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n    const top = CodeEditorWidget_1._getVerticalOffsetForPosition(this._modelData, position.lineNumber, position.column) - this.getScrollTop();\n    const left = this._modelData.view.getOffsetForColumn(position.lineNumber, position.column) + layoutInfo.glyphMarginWidth + layoutInfo.lineNumbersWidth + layoutInfo.decorationsWidth - this.getScrollLeft();\n    return {\n      top: top,\n      left: left,\n      height: options.get(67 /* EditorOption.lineHeight */)\n    };\n  }\n  getOffsetForColumn(lineNumber, column) {\n    if (!this._modelData || !this._modelData.hasRealView) {\n      return -1;\n    }\n    return this._modelData.view.getOffsetForColumn(lineNumber, column);\n  }\n  render(forceRedraw = false) {\n    if (!this._modelData || !this._modelData.hasRealView) {\n      return;\n    }\n    this._modelData.viewModel.batchEvents(() => {\n      this._modelData.view.render(true, forceRedraw);\n    });\n  }\n  setAriaOptions(options) {\n    if (!this._modelData || !this._modelData.hasRealView) {\n      return;\n    }\n    this._modelData.view.setAriaOptions(options);\n  }\n  applyFontInfo(target) {\n    applyFontInfo(target, this._configuration.options.get(50 /* EditorOption.fontInfo */));\n  }\n  setBanner(domNode, domNodeHeight) {\n    if (this._bannerDomNode && this._domElement.contains(this._bannerDomNode)) {\n      this._bannerDomNode.remove();\n    }\n    this._bannerDomNode = domNode;\n    this._configuration.setReservedHeight(domNode ? domNodeHeight : 0);\n    if (this._bannerDomNode) {\n      this._domElement.prepend(this._bannerDomNode);\n    }\n  }\n  _attachModel(model) {\n    if (!model) {\n      this._modelData = null;\n      return;\n    }\n    const listenersToRemove = [];\n    this._domElement.setAttribute('data-mode-id', model.getLanguageId());\n    this._configuration.setIsDominatedByLongLines(model.isDominatedByLongLines());\n    this._configuration.setModelLineCount(model.getLineCount());\n    const attachedView = model.onBeforeAttached();\n    const viewModel = new ViewModel(this._id, this._configuration, model, DOMLineBreaksComputerFactory.create(dom.getWindow(this._domElement)), MonospaceLineBreaksComputerFactory.create(this._configuration.options), callback => dom.scheduleAtNextAnimationFrame(dom.getWindow(this._domElement), callback), this.languageConfigurationService, this._themeService, attachedView, {\n      batchChanges: cb => {\n        try {\n          this._beginUpdate();\n          return cb();\n        } finally {\n          this._endUpdate();\n        }\n      }\n    });\n    // Someone might destroy the model from under the editor, so prevent any exceptions by setting a null model\n    listenersToRemove.push(model.onWillDispose(() => this.setModel(null)));\n    listenersToRemove.push(viewModel.onEvent(e => {\n      switch (e.kind) {\n        case 0 /* OutgoingViewModelEventKind.ContentSizeChanged */:\n          this._onDidContentSizeChange.fire(e);\n          break;\n        case 1 /* OutgoingViewModelEventKind.FocusChanged */:\n          this._editorTextFocus.setValue(e.hasFocus);\n          break;\n        case 2 /* OutgoingViewModelEventKind.ScrollChanged */:\n          this._onDidScrollChange.fire(e);\n          break;\n        case 3 /* OutgoingViewModelEventKind.ViewZonesChanged */:\n          this._onDidChangeViewZones.fire();\n          break;\n        case 4 /* OutgoingViewModelEventKind.HiddenAreasChanged */:\n          this._onDidChangeHiddenAreas.fire();\n          break;\n        case 5 /* OutgoingViewModelEventKind.ReadOnlyEditAttempt */:\n          this._onDidAttemptReadOnlyEdit.fire();\n          break;\n        case 6 /* OutgoingViewModelEventKind.CursorStateChanged */:\n          {\n            if (e.reachedMaxCursorCount) {\n              const multiCursorLimit = this.getOption(80 /* EditorOption.multiCursorLimit */);\n              const message = nls.localize('cursors.maximum', \"The number of cursors has been limited to {0}. Consider using [find and replace](https://code.visualstudio.com/docs/editor/codebasics#_find-and-replace) for larger changes or increase the editor multi cursor limit setting.\", multiCursorLimit);\n              this._notificationService.prompt(Severity.Warning, message, [{\n                label: 'Find and Replace',\n                run: () => {\n                  this._commandService.executeCommand('editor.action.startFindReplaceAction');\n                }\n              }, {\n                label: nls.localize('goToSetting', 'Increase Multi Cursor Limit'),\n                run: () => {\n                  this._commandService.executeCommand('workbench.action.openSettings2', {\n                    query: 'editor.multiCursorLimit'\n                  });\n                }\n              }]);\n            }\n            const positions = [];\n            for (let i = 0, len = e.selections.length; i < len; i++) {\n              positions[i] = e.selections[i].getPosition();\n            }\n            const e1 = {\n              position: positions[0],\n              secondaryPositions: positions.slice(1),\n              reason: e.reason,\n              source: e.source\n            };\n            this._onDidChangeCursorPosition.fire(e1);\n            const e2 = {\n              selection: e.selections[0],\n              secondarySelections: e.selections.slice(1),\n              modelVersionId: e.modelVersionId,\n              oldSelections: e.oldSelections,\n              oldModelVersionId: e.oldModelVersionId,\n              source: e.source,\n              reason: e.reason\n            };\n            this._onDidChangeCursorSelection.fire(e2);\n            break;\n          }\n        case 7 /* OutgoingViewModelEventKind.ModelDecorationsChanged */:\n          this._onDidChangeModelDecorations.fire(e.event);\n          break;\n        case 8 /* OutgoingViewModelEventKind.ModelLanguageChanged */:\n          this._domElement.setAttribute('data-mode-id', model.getLanguageId());\n          this._onDidChangeModelLanguage.fire(e.event);\n          break;\n        case 9 /* OutgoingViewModelEventKind.ModelLanguageConfigurationChanged */:\n          this._onDidChangeModelLanguageConfiguration.fire(e.event);\n          break;\n        case 10 /* OutgoingViewModelEventKind.ModelContentChanged */:\n          this._onDidChangeModelContent.fire(e.event);\n          break;\n        case 11 /* OutgoingViewModelEventKind.ModelOptionsChanged */:\n          this._onDidChangeModelOptions.fire(e.event);\n          break;\n        case 12 /* OutgoingViewModelEventKind.ModelTokensChanged */:\n          this._onDidChangeModelTokens.fire(e.event);\n          break;\n      }\n    }));\n    const [view, hasRealView] = this._createView(viewModel);\n    if (hasRealView) {\n      this._domElement.appendChild(view.domNode.domNode);\n      let keys = Object.keys(this._contentWidgets);\n      for (let i = 0, len = keys.length; i < len; i++) {\n        const widgetId = keys[i];\n        view.addContentWidget(this._contentWidgets[widgetId]);\n      }\n      keys = Object.keys(this._overlayWidgets);\n      for (let i = 0, len = keys.length; i < len; i++) {\n        const widgetId = keys[i];\n        view.addOverlayWidget(this._overlayWidgets[widgetId]);\n      }\n      keys = Object.keys(this._glyphMarginWidgets);\n      for (let i = 0, len = keys.length; i < len; i++) {\n        const widgetId = keys[i];\n        view.addGlyphMarginWidget(this._glyphMarginWidgets[widgetId]);\n      }\n      view.render(false, true);\n      view.domNode.domNode.setAttribute('data-uri', model.uri.toString());\n    }\n    this._modelData = new ModelData(model, viewModel, view, hasRealView, listenersToRemove, attachedView);\n  }\n  _createView(viewModel) {\n    let commandDelegate;\n    if (this.isSimpleWidget) {\n      commandDelegate = {\n        paste: (text, pasteOnNewLine, multicursorText, mode) => {\n          this._paste('keyboard', text, pasteOnNewLine, multicursorText, mode);\n        },\n        type: text => {\n          this._type('keyboard', text);\n        },\n        compositionType: (text, replacePrevCharCnt, replaceNextCharCnt, positionDelta) => {\n          this._compositionType('keyboard', text, replacePrevCharCnt, replaceNextCharCnt, positionDelta);\n        },\n        startComposition: () => {\n          this._startComposition();\n        },\n        endComposition: () => {\n          this._endComposition('keyboard');\n        },\n        cut: () => {\n          this._cut('keyboard');\n        }\n      };\n    } else {\n      commandDelegate = {\n        paste: (text, pasteOnNewLine, multicursorText, mode) => {\n          const payload = {\n            text,\n            pasteOnNewLine,\n            multicursorText,\n            mode\n          };\n          this._commandService.executeCommand(\"paste\" /* editorCommon.Handler.Paste */, payload);\n        },\n        type: text => {\n          const payload = {\n            text\n          };\n          this._commandService.executeCommand(\"type\" /* editorCommon.Handler.Type */, payload);\n        },\n        compositionType: (text, replacePrevCharCnt, replaceNextCharCnt, positionDelta) => {\n          // Try if possible to go through the existing `replacePreviousChar` command\n          if (replaceNextCharCnt || positionDelta) {\n            // must be handled through the new command\n            const payload = {\n              text,\n              replacePrevCharCnt,\n              replaceNextCharCnt,\n              positionDelta\n            };\n            this._commandService.executeCommand(\"compositionType\" /* editorCommon.Handler.CompositionType */, payload);\n          } else {\n            const payload = {\n              text,\n              replaceCharCnt: replacePrevCharCnt\n            };\n            this._commandService.executeCommand(\"replacePreviousChar\" /* editorCommon.Handler.ReplacePreviousChar */, payload);\n          }\n        },\n        startComposition: () => {\n          this._commandService.executeCommand(\"compositionStart\" /* editorCommon.Handler.CompositionStart */, {});\n        },\n        endComposition: () => {\n          this._commandService.executeCommand(\"compositionEnd\" /* editorCommon.Handler.CompositionEnd */, {});\n        },\n        cut: () => {\n          this._commandService.executeCommand(\"cut\" /* editorCommon.Handler.Cut */, {});\n        }\n      };\n    }\n    const viewUserInputEvents = new ViewUserInputEvents(viewModel.coordinatesConverter);\n    viewUserInputEvents.onKeyDown = e => this._onKeyDown.fire(e);\n    viewUserInputEvents.onKeyUp = e => this._onKeyUp.fire(e);\n    viewUserInputEvents.onContextMenu = e => this._onContextMenu.fire(e);\n    viewUserInputEvents.onMouseMove = e => this._onMouseMove.fire(e);\n    viewUserInputEvents.onMouseLeave = e => this._onMouseLeave.fire(e);\n    viewUserInputEvents.onMouseDown = e => this._onMouseDown.fire(e);\n    viewUserInputEvents.onMouseUp = e => this._onMouseUp.fire(e);\n    viewUserInputEvents.onMouseDrag = e => this._onMouseDrag.fire(e);\n    viewUserInputEvents.onMouseDrop = e => this._onMouseDrop.fire(e);\n    viewUserInputEvents.onMouseDropCanceled = e => this._onMouseDropCanceled.fire(e);\n    viewUserInputEvents.onMouseWheel = e => this._onMouseWheel.fire(e);\n    const view = new View(commandDelegate, this._configuration, this._themeService.getColorTheme(), viewModel, viewUserInputEvents, this._overflowWidgetsDomNode, this._instantiationService);\n    return [view, true];\n  }\n  _postDetachModelCleanup(detachedModel) {\n    detachedModel?.removeAllDecorationsWithOwnerId(this._id);\n  }\n  _detachModel() {\n    this._contributionsDisposable?.dispose();\n    this._contributionsDisposable = undefined;\n    if (!this._modelData) {\n      return null;\n    }\n    const model = this._modelData.model;\n    const removeDomNode = this._modelData.hasRealView ? this._modelData.view.domNode.domNode : null;\n    this._modelData.dispose();\n    this._modelData = null;\n    this._domElement.removeAttribute('data-mode-id');\n    if (removeDomNode && this._domElement.contains(removeDomNode)) {\n      removeDomNode.remove();\n    }\n    if (this._bannerDomNode && this._domElement.contains(this._bannerDomNode)) {\n      this._bannerDomNode.remove();\n    }\n    return model;\n  }\n  _removeDecorationType(key) {\n    this._codeEditorService.removeDecorationType(key);\n  }\n  hasModel() {\n    return this._modelData !== null;\n  }\n  showDropIndicatorAt(position) {\n    const newDecorations = [{\n      range: new Range(position.lineNumber, position.column, position.lineNumber, position.column),\n      options: CodeEditorWidget_1.dropIntoEditorDecorationOptions\n    }];\n    this._dropIntoEditorDecorations.set(newDecorations);\n    this.revealPosition(position, 1 /* editorCommon.ScrollType.Immediate */);\n  }\n  removeDropIndicator() {\n    this._dropIntoEditorDecorations.clear();\n  }\n  setContextValue(key, value) {\n    this._contextKeyService.createKey(key, value);\n  }\n  _beginUpdate() {\n    this._updateCounter++;\n    if (this._updateCounter === 1) {\n      this._onBeginUpdate.fire();\n    }\n  }\n  _endUpdate() {\n    this._updateCounter--;\n    if (this._updateCounter === 0) {\n      this._onEndUpdate.fire();\n    }\n  }\n}, CodeEditorWidget_1 = _CodeEditorWidget, _CodeEditorWidget.dropIntoEditorDecorationOptions = ModelDecorationOptions.register({\n  description: 'workbench-dnd-target',\n  className: 'dnd-target'\n}), _CodeEditorWidget);\nCodeEditorWidget = CodeEditorWidget_1 = __decorate([__param(3, IInstantiationService), __param(4, ICodeEditorService), __param(5, ICommandService), __param(6, IContextKeyService), __param(7, IThemeService), __param(8, INotificationService), __param(9, IAccessibilityService), __param(10, ILanguageConfigurationService), __param(11, ILanguageFeaturesService)], CodeEditorWidget);\nexport { CodeEditorWidget };\nlet EDITOR_ID = 0;\nclass ModelData {\n  constructor(model, viewModel, view, hasRealView, listenersToRemove, attachedView) {\n    this.model = model;\n    this.viewModel = viewModel;\n    this.view = view;\n    this.hasRealView = hasRealView;\n    this.listenersToRemove = listenersToRemove;\n    this.attachedView = attachedView;\n  }\n  dispose() {\n    dispose(this.listenersToRemove);\n    this.model.onBeforeDetached(this.attachedView);\n    if (this.hasRealView) {\n      this.view.dispose();\n    }\n    this.viewModel.dispose();\n  }\n}\nexport class BooleanEventEmitter extends Disposable {\n  constructor(_emitterOptions) {\n    super();\n    this._emitterOptions = _emitterOptions;\n    this._onDidChangeToTrue = this._register(new Emitter(this._emitterOptions));\n    this.onDidChangeToTrue = this._onDidChangeToTrue.event;\n    this._onDidChangeToFalse = this._register(new Emitter(this._emitterOptions));\n    this.onDidChangeToFalse = this._onDidChangeToFalse.event;\n    this._value = 0 /* BooleanEventValue.NotSet */;\n  }\n  setValue(_value) {\n    const value = _value ? 2 /* BooleanEventValue.True */ : 1 /* BooleanEventValue.False */;\n    if (this._value === value) {\n      return;\n    }\n    this._value = value;\n    if (this._value === 2 /* BooleanEventValue.True */) {\n      this._onDidChangeToTrue.fire();\n    } else if (this._value === 1 /* BooleanEventValue.False */) {\n      this._onDidChangeToFalse.fire();\n    }\n  }\n}\n/**\n * A regular event emitter that also makes sure contributions are instantiated if necessary\n */\nclass InteractionEmitter extends Emitter {\n  constructor(_contributions, deliveryQueue) {\n    super({\n      deliveryQueue\n    });\n    this._contributions = _contributions;\n  }\n  fire(event) {\n    this._contributions.onBeforeInteractionEvent();\n    super.fire(event);\n  }\n}\nclass EditorContextKeysManager extends Disposable {\n  constructor(editor, contextKeyService) {\n    super();\n    this._editor = editor;\n    contextKeyService.createKey('editorId', editor.getId());\n    this._editorSimpleInput = EditorContextKeys.editorSimpleInput.bindTo(contextKeyService);\n    this._editorFocus = EditorContextKeys.focus.bindTo(contextKeyService);\n    this._textInputFocus = EditorContextKeys.textInputFocus.bindTo(contextKeyService);\n    this._editorTextFocus = EditorContextKeys.editorTextFocus.bindTo(contextKeyService);\n    this._tabMovesFocus = EditorContextKeys.tabMovesFocus.bindTo(contextKeyService);\n    this._editorReadonly = EditorContextKeys.readOnly.bindTo(contextKeyService);\n    this._inDiffEditor = EditorContextKeys.inDiffEditor.bindTo(contextKeyService);\n    this._editorColumnSelection = EditorContextKeys.columnSelection.bindTo(contextKeyService);\n    this._hasMultipleSelections = EditorContextKeys.hasMultipleSelections.bindTo(contextKeyService);\n    this._hasNonEmptySelection = EditorContextKeys.hasNonEmptySelection.bindTo(contextKeyService);\n    this._canUndo = EditorContextKeys.canUndo.bindTo(contextKeyService);\n    this._canRedo = EditorContextKeys.canRedo.bindTo(contextKeyService);\n    this._register(this._editor.onDidChangeConfiguration(() => this._updateFromConfig()));\n    this._register(this._editor.onDidChangeCursorSelection(() => this._updateFromSelection()));\n    this._register(this._editor.onDidFocusEditorWidget(() => this._updateFromFocus()));\n    this._register(this._editor.onDidBlurEditorWidget(() => this._updateFromFocus()));\n    this._register(this._editor.onDidFocusEditorText(() => this._updateFromFocus()));\n    this._register(this._editor.onDidBlurEditorText(() => this._updateFromFocus()));\n    this._register(this._editor.onDidChangeModel(() => this._updateFromModel()));\n    this._register(this._editor.onDidChangeConfiguration(() => this._updateFromModel()));\n    this._register(TabFocus.onDidChangeTabFocus(tabFocusMode => this._tabMovesFocus.set(tabFocusMode)));\n    this._updateFromConfig();\n    this._updateFromSelection();\n    this._updateFromFocus();\n    this._updateFromModel();\n    this._editorSimpleInput.set(this._editor.isSimpleWidget);\n  }\n  _updateFromConfig() {\n    const options = this._editor.getOptions();\n    this._tabMovesFocus.set(TabFocus.getTabFocusMode());\n    this._editorReadonly.set(options.get(92 /* EditorOption.readOnly */));\n    this._inDiffEditor.set(options.get(61 /* EditorOption.inDiffEditor */));\n    this._editorColumnSelection.set(options.get(22 /* EditorOption.columnSelection */));\n  }\n  _updateFromSelection() {\n    const selections = this._editor.getSelections();\n    if (!selections) {\n      this._hasMultipleSelections.reset();\n      this._hasNonEmptySelection.reset();\n    } else {\n      this._hasMultipleSelections.set(selections.length > 1);\n      this._hasNonEmptySelection.set(selections.some(s => !s.isEmpty()));\n    }\n  }\n  _updateFromFocus() {\n    this._editorFocus.set(this._editor.hasWidgetFocus() && !this._editor.isSimpleWidget);\n    this._editorTextFocus.set(this._editor.hasTextFocus() && !this._editor.isSimpleWidget);\n    this._textInputFocus.set(this._editor.hasTextFocus());\n  }\n  _updateFromModel() {\n    const model = this._editor.getModel();\n    this._canUndo.set(Boolean(model && model.canUndo()));\n    this._canRedo.set(Boolean(model && model.canRedo()));\n  }\n}\nexport class EditorModeContext extends Disposable {\n  constructor(_editor, _contextKeyService, _languageFeaturesService) {\n    super();\n    this._editor = _editor;\n    this._contextKeyService = _contextKeyService;\n    this._languageFeaturesService = _languageFeaturesService;\n    this._langId = EditorContextKeys.languageId.bindTo(_contextKeyService);\n    this._hasCompletionItemProvider = EditorContextKeys.hasCompletionItemProvider.bindTo(_contextKeyService);\n    this._hasCodeActionsProvider = EditorContextKeys.hasCodeActionsProvider.bindTo(_contextKeyService);\n    this._hasCodeLensProvider = EditorContextKeys.hasCodeLensProvider.bindTo(_contextKeyService);\n    this._hasDefinitionProvider = EditorContextKeys.hasDefinitionProvider.bindTo(_contextKeyService);\n    this._hasDeclarationProvider = EditorContextKeys.hasDeclarationProvider.bindTo(_contextKeyService);\n    this._hasImplementationProvider = EditorContextKeys.hasImplementationProvider.bindTo(_contextKeyService);\n    this._hasTypeDefinitionProvider = EditorContextKeys.hasTypeDefinitionProvider.bindTo(_contextKeyService);\n    this._hasHoverProvider = EditorContextKeys.hasHoverProvider.bindTo(_contextKeyService);\n    this._hasDocumentHighlightProvider = EditorContextKeys.hasDocumentHighlightProvider.bindTo(_contextKeyService);\n    this._hasDocumentSymbolProvider = EditorContextKeys.hasDocumentSymbolProvider.bindTo(_contextKeyService);\n    this._hasReferenceProvider = EditorContextKeys.hasReferenceProvider.bindTo(_contextKeyService);\n    this._hasRenameProvider = EditorContextKeys.hasRenameProvider.bindTo(_contextKeyService);\n    this._hasSignatureHelpProvider = EditorContextKeys.hasSignatureHelpProvider.bindTo(_contextKeyService);\n    this._hasInlayHintsProvider = EditorContextKeys.hasInlayHintsProvider.bindTo(_contextKeyService);\n    this._hasDocumentFormattingProvider = EditorContextKeys.hasDocumentFormattingProvider.bindTo(_contextKeyService);\n    this._hasDocumentSelectionFormattingProvider = EditorContextKeys.hasDocumentSelectionFormattingProvider.bindTo(_contextKeyService);\n    this._hasMultipleDocumentFormattingProvider = EditorContextKeys.hasMultipleDocumentFormattingProvider.bindTo(_contextKeyService);\n    this._hasMultipleDocumentSelectionFormattingProvider = EditorContextKeys.hasMultipleDocumentSelectionFormattingProvider.bindTo(_contextKeyService);\n    this._isInEmbeddedEditor = EditorContextKeys.isInEmbeddedEditor.bindTo(_contextKeyService);\n    const update = () => this._update();\n    // update when model/mode changes\n    this._register(_editor.onDidChangeModel(update));\n    this._register(_editor.onDidChangeModelLanguage(update));\n    // update when registries change\n    this._register(_languageFeaturesService.completionProvider.onDidChange(update));\n    this._register(_languageFeaturesService.codeActionProvider.onDidChange(update));\n    this._register(_languageFeaturesService.codeLensProvider.onDidChange(update));\n    this._register(_languageFeaturesService.definitionProvider.onDidChange(update));\n    this._register(_languageFeaturesService.declarationProvider.onDidChange(update));\n    this._register(_languageFeaturesService.implementationProvider.onDidChange(update));\n    this._register(_languageFeaturesService.typeDefinitionProvider.onDidChange(update));\n    this._register(_languageFeaturesService.hoverProvider.onDidChange(update));\n    this._register(_languageFeaturesService.documentHighlightProvider.onDidChange(update));\n    this._register(_languageFeaturesService.documentSymbolProvider.onDidChange(update));\n    this._register(_languageFeaturesService.referenceProvider.onDidChange(update));\n    this._register(_languageFeaturesService.renameProvider.onDidChange(update));\n    this._register(_languageFeaturesService.documentFormattingEditProvider.onDidChange(update));\n    this._register(_languageFeaturesService.documentRangeFormattingEditProvider.onDidChange(update));\n    this._register(_languageFeaturesService.signatureHelpProvider.onDidChange(update));\n    this._register(_languageFeaturesService.inlayHintsProvider.onDidChange(update));\n    update();\n  }\n  dispose() {\n    super.dispose();\n  }\n  reset() {\n    this._contextKeyService.bufferChangeEvents(() => {\n      this._langId.reset();\n      this._hasCompletionItemProvider.reset();\n      this._hasCodeActionsProvider.reset();\n      this._hasCodeLensProvider.reset();\n      this._hasDefinitionProvider.reset();\n      this._hasDeclarationProvider.reset();\n      this._hasImplementationProvider.reset();\n      this._hasTypeDefinitionProvider.reset();\n      this._hasHoverProvider.reset();\n      this._hasDocumentHighlightProvider.reset();\n      this._hasDocumentSymbolProvider.reset();\n      this._hasReferenceProvider.reset();\n      this._hasRenameProvider.reset();\n      this._hasDocumentFormattingProvider.reset();\n      this._hasDocumentSelectionFormattingProvider.reset();\n      this._hasSignatureHelpProvider.reset();\n      this._isInEmbeddedEditor.reset();\n    });\n  }\n  _update() {\n    const model = this._editor.getModel();\n    if (!model) {\n      this.reset();\n      return;\n    }\n    this._contextKeyService.bufferChangeEvents(() => {\n      this._langId.set(model.getLanguageId());\n      this._hasCompletionItemProvider.set(this._languageFeaturesService.completionProvider.has(model));\n      this._hasCodeActionsProvider.set(this._languageFeaturesService.codeActionProvider.has(model));\n      this._hasCodeLensProvider.set(this._languageFeaturesService.codeLensProvider.has(model));\n      this._hasDefinitionProvider.set(this._languageFeaturesService.definitionProvider.has(model));\n      this._hasDeclarationProvider.set(this._languageFeaturesService.declarationProvider.has(model));\n      this._hasImplementationProvider.set(this._languageFeaturesService.implementationProvider.has(model));\n      this._hasTypeDefinitionProvider.set(this._languageFeaturesService.typeDefinitionProvider.has(model));\n      this._hasHoverProvider.set(this._languageFeaturesService.hoverProvider.has(model));\n      this._hasDocumentHighlightProvider.set(this._languageFeaturesService.documentHighlightProvider.has(model));\n      this._hasDocumentSymbolProvider.set(this._languageFeaturesService.documentSymbolProvider.has(model));\n      this._hasReferenceProvider.set(this._languageFeaturesService.referenceProvider.has(model));\n      this._hasRenameProvider.set(this._languageFeaturesService.renameProvider.has(model));\n      this._hasSignatureHelpProvider.set(this._languageFeaturesService.signatureHelpProvider.has(model));\n      this._hasInlayHintsProvider.set(this._languageFeaturesService.inlayHintsProvider.has(model));\n      this._hasDocumentFormattingProvider.set(this._languageFeaturesService.documentFormattingEditProvider.has(model) || this._languageFeaturesService.documentRangeFormattingEditProvider.has(model));\n      this._hasDocumentSelectionFormattingProvider.set(this._languageFeaturesService.documentRangeFormattingEditProvider.has(model));\n      this._hasMultipleDocumentFormattingProvider.set(this._languageFeaturesService.documentFormattingEditProvider.all(model).length + this._languageFeaturesService.documentRangeFormattingEditProvider.all(model).length > 1);\n      this._hasMultipleDocumentSelectionFormattingProvider.set(this._languageFeaturesService.documentRangeFormattingEditProvider.all(model).length > 1);\n      this._isInEmbeddedEditor.set(model.uri.scheme === Schemas.walkThroughSnippet || model.uri.scheme === Schemas.vscodeChatCodeBlock);\n    });\n  }\n}\nclass CodeEditorWidgetFocusTracker extends Disposable {\n  constructor(domElement, overflowWidgetsDomNode) {\n    super();\n    this._onChange = this._register(new Emitter());\n    this.onChange = this._onChange.event;\n    this._hadFocus = undefined;\n    this._hasDomElementFocus = false;\n    this._domFocusTracker = this._register(dom.trackFocus(domElement));\n    this._overflowWidgetsDomNodeHasFocus = false;\n    this._register(this._domFocusTracker.onDidFocus(() => {\n      this._hasDomElementFocus = true;\n      this._update();\n    }));\n    this._register(this._domFocusTracker.onDidBlur(() => {\n      this._hasDomElementFocus = false;\n      this._update();\n    }));\n    if (overflowWidgetsDomNode) {\n      this._overflowWidgetsDomNode = this._register(dom.trackFocus(overflowWidgetsDomNode));\n      this._register(this._overflowWidgetsDomNode.onDidFocus(() => {\n        this._overflowWidgetsDomNodeHasFocus = true;\n        this._update();\n      }));\n      this._register(this._overflowWidgetsDomNode.onDidBlur(() => {\n        this._overflowWidgetsDomNodeHasFocus = false;\n        this._update();\n      }));\n    }\n  }\n  _update() {\n    const focused = this._hasDomElementFocus || this._overflowWidgetsDomNodeHasFocus;\n    if (this._hadFocus !== focused) {\n      this._hadFocus = focused;\n      this._onChange.fire(undefined);\n    }\n  }\n  hasFocus() {\n    return this._hadFocus ?? false;\n  }\n}\nclass EditorDecorationsCollection {\n  get length() {\n    return this._decorationIds.length;\n  }\n  constructor(_editor, decorations) {\n    this._editor = _editor;\n    this._decorationIds = [];\n    this._isChangingDecorations = false;\n    if (Array.isArray(decorations) && decorations.length > 0) {\n      this.set(decorations);\n    }\n  }\n  onDidChange(listener, thisArgs, disposables) {\n    return this._editor.onDidChangeModelDecorations(e => {\n      if (this._isChangingDecorations) {\n        return;\n      }\n      listener.call(thisArgs, e);\n    }, disposables);\n  }\n  getRange(index) {\n    if (!this._editor.hasModel()) {\n      return null;\n    }\n    if (index >= this._decorationIds.length) {\n      return null;\n    }\n    return this._editor.getModel().getDecorationRange(this._decorationIds[index]);\n  }\n  getRanges() {\n    if (!this._editor.hasModel()) {\n      return [];\n    }\n    const model = this._editor.getModel();\n    const result = [];\n    for (const decorationId of this._decorationIds) {\n      const range = model.getDecorationRange(decorationId);\n      if (range) {\n        result.push(range);\n      }\n    }\n    return result;\n  }\n  has(decoration) {\n    return this._decorationIds.includes(decoration.id);\n  }\n  clear() {\n    if (this._decorationIds.length === 0) {\n      // nothing to do\n      return;\n    }\n    this.set([]);\n  }\n  set(newDecorations) {\n    try {\n      this._isChangingDecorations = true;\n      this._editor.changeDecorations(accessor => {\n        this._decorationIds = accessor.deltaDecorations(this._decorationIds, newDecorations);\n      });\n    } finally {\n      this._isChangingDecorations = false;\n    }\n    return this._decorationIds;\n  }\n  append(newDecorations) {\n    let newDecorationIds = [];\n    try {\n      this._isChangingDecorations = true;\n      this._editor.changeDecorations(accessor => {\n        newDecorationIds = accessor.deltaDecorations([], newDecorations);\n        this._decorationIds = this._decorationIds.concat(newDecorationIds);\n      });\n    } finally {\n      this._isChangingDecorations = false;\n    }\n    return newDecorationIds;\n  }\n}\nconst squigglyStart = encodeURIComponent(`<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 6 3' enable-background='new 0 0 6 3' height='3' width='6'><g fill='`);\nconst squigglyEnd = encodeURIComponent(`'><polygon points='5.5,0 2.5,3 1.1,3 4.1,0'/><polygon points='4,0 6,2 6,0.6 5.4,0'/><polygon points='0,2 1,3 2.4,3 0,0.6'/></g></svg>`);\nfunction getSquigglySVGData(color) {\n  return squigglyStart + encodeURIComponent(color.toString()) + squigglyEnd;\n}\nconst dotdotdotStart = encodeURIComponent(`<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"3\" width=\"12\"><g fill=\"`);\nconst dotdotdotEnd = encodeURIComponent(`\"><circle cx=\"1\" cy=\"1\" r=\"1\"/><circle cx=\"5\" cy=\"1\" r=\"1\"/><circle cx=\"9\" cy=\"1\" r=\"1\"/></g></svg>`);\nfunction getDotDotDotSVGData(color) {\n  return dotdotdotStart + encodeURIComponent(color.toString()) + dotdotdotEnd;\n}\nregisterThemingParticipant((theme, collector) => {\n  const errorForeground = theme.getColor(editorErrorForeground);\n  if (errorForeground) {\n    collector.addRule(`.monaco-editor .${\"squiggly-error\" /* ClassName.EditorErrorDecoration */} { background: url(\"data:image/svg+xml,${getSquigglySVGData(errorForeground)}\") repeat-x bottom left; }`);\n  }\n  const warningForeground = theme.getColor(editorWarningForeground);\n  if (warningForeground) {\n    collector.addRule(`.monaco-editor .${\"squiggly-warning\" /* ClassName.EditorWarningDecoration */} { background: url(\"data:image/svg+xml,${getSquigglySVGData(warningForeground)}\") repeat-x bottom left; }`);\n  }\n  const infoForeground = theme.getColor(editorInfoForeground);\n  if (infoForeground) {\n    collector.addRule(`.monaco-editor .${\"squiggly-info\" /* ClassName.EditorInfoDecoration */} { background: url(\"data:image/svg+xml,${getSquigglySVGData(infoForeground)}\") repeat-x bottom left; }`);\n  }\n  const hintForeground = theme.getColor(editorHintForeground);\n  if (hintForeground) {\n    collector.addRule(`.monaco-editor .${\"squiggly-hint\" /* ClassName.EditorHintDecoration */} { background: url(\"data:image/svg+xml,${getDotDotDotSVGData(hintForeground)}\") no-repeat bottom left; }`);\n  }\n  const unnecessaryForeground = theme.getColor(editorUnnecessaryCodeOpacity);\n  if (unnecessaryForeground) {\n    collector.addRule(`.monaco-editor.showUnused .${\"squiggly-inline-unnecessary\" /* ClassName.EditorUnnecessaryInlineDecoration */} { opacity: ${unnecessaryForeground.rgba.a}; }`);\n  }\n});","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","CodeEditorWidget_1","dom","onUnexpectedError","Emitter","createEventDeliveryQueue","Disposable","dispose","Schemas","applyFontInfo","EditorConfiguration","TabFocus","EditorExtensionsRegistry","ICodeEditorService","View","DOMLineBreaksComputerFactory","ViewUserInputEvents","CodeEditorContributions","filterValidationDecorations","CursorColumns","editorUnnecessaryCodeOpacity","Position","Range","Selection","WordOperations","InternalEditorAction","editorCommon","EditorContextKeys","ILanguageConfigurationService","ModelDecorationOptions","ILanguageFeaturesService","MonospaceLineBreaksComputerFactory","ViewModel","nls","IAccessibilityService","ICommandService","IContextKeyService","IInstantiationService","ServiceCollection","INotificationService","Severity","editorErrorForeground","editorHintForeground","editorInfoForeground","editorWarningForeground","IThemeService","registerThemingParticipant","MenuId","CodeEditorWidget","_CodeEditorWidget","isSimpleWidget","_configuration","contextMenuId","constructor","domElement","_options","codeEditorWidgetOptions","instantiationService","codeEditorService","commandService","contextKeyService","themeService","notificationService","accessibilityService","languageConfigurationService","languageFeaturesService","_deliveryQueue","_contributions","_register","_onDidDispose","onDidDispose","event","_onDidChangeModelContent","deliveryQueue","onDidChangeModelContent","_onDidChangeModelLanguage","onDidChangeModelLanguage","_onDidChangeModelLanguageConfiguration","onDidChangeModelLanguageConfiguration","_onDidChangeModelOptions","onDidChangeModelOptions","_onDidChangeModelDecorations","onDidChangeModelDecorations","_onDidChangeModelTokens","onDidChangeModelTokens","_onDidChangeConfiguration","onDidChangeConfiguration","_onWillChangeModel","onWillChangeModel","_onDidChangeModel","onDidChangeModel","_onDidChangeCursorPosition","onDidChangeCursorPosition","_onDidChangeCursorSelection","onDidChangeCursorSelection","_onDidAttemptReadOnlyEdit","InteractionEmitter","onDidAttemptReadOnlyEdit","_onDidLayoutChange","onDidLayoutChange","_editorTextFocus","BooleanEventEmitter","onDidFocusEditorText","onDidChangeToTrue","onDidBlurEditorText","onDidChangeToFalse","_editorWidgetFocus","onDidFocusEditorWidget","onDidBlurEditorWidget","_onWillType","onWillType","_onDidType","onDidType","_onDidCompositionStart","onDidCompositionStart","_onDidCompositionEnd","onDidCompositionEnd","_onDidPaste","onDidPaste","_onMouseUp","onMouseUp","_onMouseDown","onMouseDown","_onMouseDrag","onMouseDrag","_onMouseDrop","onMouseDrop","_onMouseDropCanceled","onMouseDropCanceled","_onDropIntoEditor","onDropIntoEditor","_onContextMenu","onContextMenu","_onMouseMove","onMouseMove","_onMouseLeave","onMouseLeave","_onMouseWheel","onMouseWheel","_onKeyUp","onKeyUp","_onKeyDown","onKeyDown","_onDidContentSizeChange","onDidContentSizeChange","_onDidScrollChange","onDidScrollChange","_onDidChangeViewZones","onDidChangeViewZones","_onDidChangeHiddenAreas","onDidChangeHiddenAreas","_updateCounter","_onBeginUpdate","onBeginUpdate","_onEndUpdate","onEndUpdate","_actions","Map","_bannerDomNode","_dropIntoEditorDecorations","createDecorationsCollection","willCreateCodeEditor","options","_domElement","_overflowWidgetsDomNode","overflowWidgetsDomNode","_id","EDITOR_ID","_decorationTypeKeysToIds","_decorationTypeSubtypes","_telemetryData","telemetryData","_createConfiguration","SimpleEditorContext","EditorContext","onDidChange","e","fire","hasChanged","layoutInfo","get","_contextKeyService","createScoped","_notificationService","_codeEditorService","_commandService","_themeService","EditorContextKeysManager","EditorModeContext","_instantiationService","createChild","_modelData","_focusTracker","CodeEditorWidgetFocusTracker","onChange","setValue","hasFocus","_contentWidgets","_overlayWidgets","_glyphMarginWidgets","contributions","Array","isArray","getEditorContributions","initialize","action","getEditorActions","has","id","Error","internalAction","label","alias","metadata","precondition","undefined","args","invokeFunction","accessor","Promise","resolve","runEditorCommand","set","isDropIntoEnabled","enabled","DragAndDropObserver","onDragOver","getTargetAtClientPoint","clientX","clientY","position","showDropIndicatorAt","onDrop","removeDropIndicator","dataTransfer","onDragLeave","onDragEnd","addCodeEditor","writeScreenReaderContent","reason","view","getId","getEditorType","EditorType","ICodeEditor","removeCodeEditor","clear","_removeDecorationTypes","_postDetachModelCleanup","_detachModel","invokeWithinContext","fn","updateOptions","newOptions","getOptions","getOption","getRawOptions","getOverflowWidgetsDomNode","getConfiguredWordAtPosition","getWordAtPosition","model","getValue","preserveBOM","eolPreference","lineEnding","newValue","_beginUpdate","_endUpdate","getModel","setModel","_model","oldModelUrl","uri","newModelUrl","hasTextFocus","detachedModel","_attachModel","hasModel","focus","_contributionsDisposable","onAfterModelAttached","decorationType","subTypes","subType","_removeDecorationType","getVisibleRanges","viewModel","getVisibleRangesPlusViewportAboveBelow","getWhitespaces","viewLayout","_getVerticalOffsetAfterPosition","modelData","modelLineNumber","modelColumn","includeViewZones","modelPosition","validatePosition","lineNumber","column","viewPosition","coordinatesConverter","convertModelPositionToViewPosition","getVerticalOffsetAfterLineNumber","getTopForLineNumber","_getVerticalOffsetForPosition","getTopForPosition","getVerticalOffsetForLineNumber","getBottomForLineNumber","setHiddenAreas","ranges","source","map","lift","getVisibleColumnFromPosition","rawPosition","tabSize","visibleColumnFromColumn","getLineContent","getPosition","setPosition","isIPosition","setSelections","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","_sendRevealRange","modelRange","verticalType","revealHorizontal","scrollType","isIRange","validatedModelRange","validateRange","viewRange","convertModelRangeToViewRange","revealRange","revealLine","_revealLine","revealLineInCenter","revealLineInCenterIfOutsideViewport","revealLineNearTop","revealType","revealPosition","_revealPosition","revealPositionInCenter","revealPositionInCenterIfOutsideViewport","revealPositionNearTop","getSelection","getSelections","setSelection","something","isSelection","isISelection","isRange","_setSelectionImpl","selection","startLineNumber","startColumn","endLineNumber","endColumn","sel","revealLines","_revealLines","revealLinesInCenter","revealLinesInCenterIfOutsideViewport","revealLinesNearTop","range","revealVerticalInCenter","_revealRange","revealRangeInCenter","revealRangeInCenterIfOutsideViewport","revealRangeNearTop","revealRangeNearTopIfOutsideViewport","revealRangeAtTop","len","getContentWidth","getScrollWidth","getScrollLeft","getCurrentScrollLeft","getContentHeight","getScrollHeight","getScrollTop","getCurrentScrollTop","setScrollLeft","newScrollLeft","setScrollPosition","scrollLeft","setScrollTop","newScrollTop","scrollTop","hasPendingScrollAnimation","saveViewState","contributionsState","cursorState","saveCursorState","viewState","saveState","restoreViewState","s","hasRealView","codeEditorState","restoreCursorState","reducedState","reduceRestoreState","restoreState","handleInitialized","_getViewModel","visibleLinesStabilized","getContribution","getActions","from","values","getSupportedActions","result","filter","isSupported","getAction","trigger","handlerId","payload","_startComposition","_endComposition","_type","text","_compositionType","replaceCharCnt","replacePrevCharCnt","replaceNextCharCnt","positionDelta","_paste","pasteOnNewLine","multicursorText","mode","clipboardEvent","_cut","run","then","_triggerEditorCommand","_triggerCommand","executeCommand","startComposition","endComposition","type","compositionType","startPosition","getStartPosition","paste","endPosition","languageId","cut","command","getEditorCommand","pushUndoStop","pushStackElement","popUndoStop","popStackElement","executeEdits","edits","endCursorState","cursorStateComputer","executeCommands","commands","decorations","EditorDecorationsCollection","changeDecorations","callback","getLineDecorations","getDecorationsInRange","deltaDecorations","oldDecorations","newDecorations","removeDecorations","decorationIds","changeAccessor","removeDecorationsByType","decorationTypeKey","oldDecorationsIds","hasOwnProperty","getLayoutInfo","createOverviewRuler","cssClassName","getContainerDomNode","getDomNode","domNode","delegateVerticalScrollbarPointerDown","browserEvent","delegateScrollFromMouseWheelEvent","layout","dimension","postponeRendering","observeContainer","render","isFocused","hasWidgetFocus","addContentWidget","widget","widgetData","console","warn","layoutContentWidget","widgetId","removeContentWidget","addOverlayWidget","layoutOverlayWidget","removeOverlayWidget","addGlyphMarginWidget","layoutGlyphMarginWidget","removeGlyphMarginWidget","changeViewZones","change","getScrolledVisiblePosition","top","left","getOffsetForColumn","glyphMarginWidth","lineNumbersWidth","decorationsWidth","height","forceRedraw","batchEvents","setAriaOptions","setBanner","domNodeHeight","contains","remove","setReservedHeight","prepend","listenersToRemove","setAttribute","getLanguageId","setIsDominatedByLongLines","isDominatedByLongLines","setModelLineCount","getLineCount","attachedView","onBeforeAttached","create","getWindow","scheduleAtNextAnimationFrame","batchChanges","cb","push","onWillDispose","onEvent","kind","reachedMaxCursorCount","multiCursorLimit","message","localize","prompt","Warning","query","positions","selections","e1","secondaryPositions","slice","e2","secondarySelections","modelVersionId","oldSelections","oldModelVersionId","_createView","appendChild","keys","toString","ModelData","commandDelegate","viewUserInputEvents","getColorTheme","removeAllDecorationsWithOwnerId","removeDomNode","removeAttribute","removeDecorationType","dropIntoEditorDecorationOptions","setContextValue","value","createKey","register","description","className","onBeforeDetached","_emitterOptions","_onDidChangeToTrue","_onDidChangeToFalse","_value","onBeforeInteractionEvent","editor","_editor","_editorSimpleInput","editorSimpleInput","bindTo","_editorFocus","_textInputFocus","textInputFocus","editorTextFocus","_tabMovesFocus","tabMovesFocus","_editorReadonly","readOnly","_inDiffEditor","inDiffEditor","_editorColumnSelection","columnSelection","_hasMultipleSelections","hasMultipleSelections","_hasNonEmptySelection","hasNonEmptySelection","_canUndo","canUndo","_canRedo","canRedo","_updateFromConfig","_updateFromSelection","_updateFromFocus","_updateFromModel","onDidChangeTabFocus","tabFocusMode","getTabFocusMode","reset","some","isEmpty","Boolean","_languageFeaturesService","_langId","_hasCompletionItemProvider","hasCompletionItemProvider","_hasCodeActionsProvider","hasCodeActionsProvider","_hasCodeLensProvider","hasCodeLensProvider","_hasDefinitionProvider","hasDefinitionProvider","_hasDeclarationProvider","hasDeclarationProvider","_hasImplementationProvider","hasImplementationProvider","_hasTypeDefinitionProvider","hasTypeDefinitionProvider","_hasHoverProvider","hasHoverProvider","_hasDocumentHighlightProvider","hasDocumentHighlightProvider","_hasDocumentSymbolProvider","hasDocumentSymbolProvider","_hasReferenceProvider","hasReferenceProvider","_hasRenameProvider","hasRenameProvider","_hasSignatureHelpProvider","hasSignatureHelpProvider","_hasInlayHintsProvider","hasInlayHintsProvider","_hasDocumentFormattingProvider","hasDocumentFormattingProvider","_hasDocumentSelectionFormattingProvider","hasDocumentSelectionFormattingProvider","_hasMultipleDocumentFormattingProvider","hasMultipleDocumentFormattingProvider","_hasMultipleDocumentSelectionFormattingProvider","hasMultipleDocumentSelectionFormattingProvider","_isInEmbeddedEditor","isInEmbeddedEditor","update","_update","completionProvider","codeActionProvider","codeLensProvider","definitionProvider","declarationProvider","implementationProvider","typeDefinitionProvider","hoverProvider","documentHighlightProvider","documentSymbolProvider","referenceProvider","renameProvider","documentFormattingEditProvider","documentRangeFormattingEditProvider","signatureHelpProvider","inlayHintsProvider","bufferChangeEvents","all","scheme","walkThroughSnippet","vscodeChatCodeBlock","_onChange","_hadFocus","_hasDomElementFocus","_domFocusTracker","trackFocus","_overflowWidgetsDomNodeHasFocus","onDidFocus","onDidBlur","focused","_decorationIds","_isChangingDecorations","listener","thisArgs","disposables","call","getRange","index","getDecorationRange","getRanges","decorationId","decoration","includes","append","newDecorationIds","concat","squigglyStart","encodeURIComponent","squigglyEnd","getSquigglySVGData","color","dotdotdotStart","dotdotdotEnd","getDotDotDotSVGData","theme","collector","errorForeground","getColor","addRule","warningForeground","infoForeground","hintForeground","unnecessaryForeground","rgba","a"],"sources":["C:/Users/ruzhe/CODEHUB-PH/GAMES/code-master/node_modules/monaco-editor/esm/vs/editor/browser/widget/codeEditor/codeEditorWidget.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar CodeEditorWidget_1;\nimport '../../services/markerDecorations.js';\nimport * as dom from '../../../../base/browser/dom.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Emitter, createEventDeliveryQueue } from '../../../../base/common/event.js';\nimport { Disposable, dispose } from '../../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport './editor.css';\nimport { applyFontInfo } from '../../config/domFontInfo.js';\nimport { EditorConfiguration } from '../../config/editorConfiguration.js';\nimport { TabFocus } from '../../config/tabFocus.js';\nimport { EditorExtensionsRegistry } from '../../editorExtensions.js';\nimport { ICodeEditorService } from '../../services/codeEditorService.js';\nimport { View } from '../../view.js';\nimport { DOMLineBreaksComputerFactory } from '../../view/domLineBreaksComputer.js';\nimport { ViewUserInputEvents } from '../../view/viewUserInputEvents.js';\nimport { CodeEditorContributions } from './codeEditorContributions.js';\nimport { filterValidationDecorations } from '../../../common/config/editorOptions.js';\nimport { CursorColumns } from '../../../common/core/cursorColumns.js';\nimport { editorUnnecessaryCodeOpacity } from '../../../common/core/editorColorRegistry.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { WordOperations } from '../../../common/cursor/cursorWordOperations.js';\nimport { InternalEditorAction } from '../../../common/editorAction.js';\nimport * as editorCommon from '../../../common/editorCommon.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { MonospaceLineBreaksComputerFactory } from '../../../common/viewModel/monospaceLineBreaksComputer.js';\nimport { ViewModel } from '../../../common/viewModel/viewModelImpl.js';\nimport * as nls from '../../../../nls.js';\nimport { IAccessibilityService } from '../../../../platform/accessibility/common/accessibility.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ServiceCollection } from '../../../../platform/instantiation/common/serviceCollection.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nimport { editorErrorForeground, editorHintForeground, editorInfoForeground, editorWarningForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { IThemeService, registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nlet CodeEditorWidget = class CodeEditorWidget extends Disposable {\n    static { CodeEditorWidget_1 = this; }\n    static { this.dropIntoEditorDecorationOptions = ModelDecorationOptions.register({\n        description: 'workbench-dnd-target',\n        className: 'dnd-target'\n    }); }\n    //#endregion\n    get isSimpleWidget() {\n        return this._configuration.isSimpleWidget;\n    }\n    get contextMenuId() {\n        return this._configuration.contextMenuId;\n    }\n    constructor(domElement, _options, codeEditorWidgetOptions, instantiationService, codeEditorService, commandService, contextKeyService, themeService, notificationService, accessibilityService, languageConfigurationService, languageFeaturesService) {\n        super();\n        this.languageConfigurationService = languageConfigurationService;\n        //#region Eventing\n        this._deliveryQueue = createEventDeliveryQueue();\n        this._contributions = this._register(new CodeEditorContributions());\n        this._onDidDispose = this._register(new Emitter());\n        this.onDidDispose = this._onDidDispose.event;\n        this._onDidChangeModelContent = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModelContent = this._onDidChangeModelContent.event;\n        this._onDidChangeModelLanguage = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModelLanguage = this._onDidChangeModelLanguage.event;\n        this._onDidChangeModelLanguageConfiguration = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModelLanguageConfiguration = this._onDidChangeModelLanguageConfiguration.event;\n        this._onDidChangeModelOptions = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModelOptions = this._onDidChangeModelOptions.event;\n        this._onDidChangeModelDecorations = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModelDecorations = this._onDidChangeModelDecorations.event;\n        this._onDidChangeModelTokens = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModelTokens = this._onDidChangeModelTokens.event;\n        this._onDidChangeConfiguration = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeConfiguration = this._onDidChangeConfiguration.event;\n        this._onWillChangeModel = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onWillChangeModel = this._onWillChangeModel.event;\n        this._onDidChangeModel = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModel = this._onDidChangeModel.event;\n        this._onDidChangeCursorPosition = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeCursorPosition = this._onDidChangeCursorPosition.event;\n        this._onDidChangeCursorSelection = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeCursorSelection = this._onDidChangeCursorSelection.event;\n        this._onDidAttemptReadOnlyEdit = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onDidAttemptReadOnlyEdit = this._onDidAttemptReadOnlyEdit.event;\n        this._onDidLayoutChange = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._editorTextFocus = this._register(new BooleanEventEmitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidFocusEditorText = this._editorTextFocus.onDidChangeToTrue;\n        this.onDidBlurEditorText = this._editorTextFocus.onDidChangeToFalse;\n        this._editorWidgetFocus = this._register(new BooleanEventEmitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidFocusEditorWidget = this._editorWidgetFocus.onDidChangeToTrue;\n        this.onDidBlurEditorWidget = this._editorWidgetFocus.onDidChangeToFalse;\n        this._onWillType = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onWillType = this._onWillType.event;\n        this._onDidType = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onDidType = this._onDidType.event;\n        this._onDidCompositionStart = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onDidCompositionStart = this._onDidCompositionStart.event;\n        this._onDidCompositionEnd = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onDidCompositionEnd = this._onDidCompositionEnd.event;\n        this._onDidPaste = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onDidPaste = this._onDidPaste.event;\n        this._onMouseUp = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onMouseUp = this._onMouseUp.event;\n        this._onMouseDown = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onMouseDown = this._onMouseDown.event;\n        this._onMouseDrag = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onMouseDrag = this._onMouseDrag.event;\n        this._onMouseDrop = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onMouseDrop = this._onMouseDrop.event;\n        this._onMouseDropCanceled = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onMouseDropCanceled = this._onMouseDropCanceled.event;\n        this._onDropIntoEditor = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onDropIntoEditor = this._onDropIntoEditor.event;\n        this._onContextMenu = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onContextMenu = this._onContextMenu.event;\n        this._onMouseMove = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onMouseMove = this._onMouseMove.event;\n        this._onMouseLeave = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onMouseLeave = this._onMouseLeave.event;\n        this._onMouseWheel = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onMouseWheel = this._onMouseWheel.event;\n        this._onKeyUp = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onKeyUp = this._onKeyUp.event;\n        this._onKeyDown = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onKeyDown = this._onKeyDown.event;\n        this._onDidContentSizeChange = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidContentSizeChange = this._onDidContentSizeChange.event;\n        this._onDidScrollChange = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidScrollChange = this._onDidScrollChange.event;\n        this._onDidChangeViewZones = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeViewZones = this._onDidChangeViewZones.event;\n        this._onDidChangeHiddenAreas = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeHiddenAreas = this._onDidChangeHiddenAreas.event;\n        this._updateCounter = 0;\n        this._onBeginUpdate = this._register(new Emitter());\n        this.onBeginUpdate = this._onBeginUpdate.event;\n        this._onEndUpdate = this._register(new Emitter());\n        this.onEndUpdate = this._onEndUpdate.event;\n        this._actions = new Map();\n        this._bannerDomNode = null;\n        this._dropIntoEditorDecorations = this.createDecorationsCollection();\n        codeEditorService.willCreateCodeEditor();\n        const options = { ..._options };\n        this._domElement = domElement;\n        this._overflowWidgetsDomNode = options.overflowWidgetsDomNode;\n        delete options.overflowWidgetsDomNode;\n        this._id = (++EDITOR_ID);\n        this._decorationTypeKeysToIds = {};\n        this._decorationTypeSubtypes = {};\n        this._telemetryData = codeEditorWidgetOptions.telemetryData;\n        this._configuration = this._register(this._createConfiguration(codeEditorWidgetOptions.isSimpleWidget || false, codeEditorWidgetOptions.contextMenuId ?? (codeEditorWidgetOptions.isSimpleWidget ? MenuId.SimpleEditorContext : MenuId.EditorContext), options, accessibilityService));\n        this._register(this._configuration.onDidChange((e) => {\n            this._onDidChangeConfiguration.fire(e);\n            const options = this._configuration.options;\n            if (e.hasChanged(146 /* EditorOption.layoutInfo */)) {\n                const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n                this._onDidLayoutChange.fire(layoutInfo);\n            }\n        }));\n        this._contextKeyService = this._register(contextKeyService.createScoped(this._domElement));\n        this._notificationService = notificationService;\n        this._codeEditorService = codeEditorService;\n        this._commandService = commandService;\n        this._themeService = themeService;\n        this._register(new EditorContextKeysManager(this, this._contextKeyService));\n        this._register(new EditorModeContext(this, this._contextKeyService, languageFeaturesService));\n        this._instantiationService = this._register(instantiationService.createChild(new ServiceCollection([IContextKeyService, this._contextKeyService])));\n        this._modelData = null;\n        this._focusTracker = new CodeEditorWidgetFocusTracker(domElement, this._overflowWidgetsDomNode);\n        this._register(this._focusTracker.onChange(() => {\n            this._editorWidgetFocus.setValue(this._focusTracker.hasFocus());\n        }));\n        this._contentWidgets = {};\n        this._overlayWidgets = {};\n        this._glyphMarginWidgets = {};\n        let contributions;\n        if (Array.isArray(codeEditorWidgetOptions.contributions)) {\n            contributions = codeEditorWidgetOptions.contributions;\n        }\n        else {\n            contributions = EditorExtensionsRegistry.getEditorContributions();\n        }\n        this._contributions.initialize(this, contributions, this._instantiationService);\n        for (const action of EditorExtensionsRegistry.getEditorActions()) {\n            if (this._actions.has(action.id)) {\n                onUnexpectedError(new Error(`Cannot have two actions with the same id ${action.id}`));\n                continue;\n            }\n            const internalAction = new InternalEditorAction(action.id, action.label, action.alias, action.metadata, action.precondition ?? undefined, (args) => {\n                return this._instantiationService.invokeFunction((accessor) => {\n                    return Promise.resolve(action.runEditorCommand(accessor, this, args));\n                });\n            }, this._contextKeyService);\n            this._actions.set(internalAction.id, internalAction);\n        }\n        const isDropIntoEnabled = () => {\n            return !this._configuration.options.get(92 /* EditorOption.readOnly */)\n                && this._configuration.options.get(36 /* EditorOption.dropIntoEditor */).enabled;\n        };\n        this._register(new dom.DragAndDropObserver(this._domElement, {\n            onDragOver: e => {\n                if (!isDropIntoEnabled()) {\n                    return;\n                }\n                const target = this.getTargetAtClientPoint(e.clientX, e.clientY);\n                if (target?.position) {\n                    this.showDropIndicatorAt(target.position);\n                }\n            },\n            onDrop: async (e) => {\n                if (!isDropIntoEnabled()) {\n                    return;\n                }\n                this.removeDropIndicator();\n                if (!e.dataTransfer) {\n                    return;\n                }\n                const target = this.getTargetAtClientPoint(e.clientX, e.clientY);\n                if (target?.position) {\n                    this._onDropIntoEditor.fire({ position: target.position, event: e });\n                }\n            },\n            onDragLeave: () => {\n                this.removeDropIndicator();\n            },\n            onDragEnd: () => {\n                this.removeDropIndicator();\n            },\n        }));\n        this._codeEditorService.addCodeEditor(this);\n    }\n    writeScreenReaderContent(reason) {\n        this._modelData?.view.writeScreenReaderContent(reason);\n    }\n    _createConfiguration(isSimpleWidget, contextMenuId, options, accessibilityService) {\n        return new EditorConfiguration(isSimpleWidget, contextMenuId, options, this._domElement, accessibilityService);\n    }\n    getId() {\n        return this.getEditorType() + ':' + this._id;\n    }\n    getEditorType() {\n        return editorCommon.EditorType.ICodeEditor;\n    }\n    dispose() {\n        this._codeEditorService.removeCodeEditor(this);\n        this._focusTracker.dispose();\n        this._actions.clear();\n        this._contentWidgets = {};\n        this._overlayWidgets = {};\n        this._removeDecorationTypes();\n        this._postDetachModelCleanup(this._detachModel());\n        this._onDidDispose.fire();\n        super.dispose();\n    }\n    invokeWithinContext(fn) {\n        return this._instantiationService.invokeFunction(fn);\n    }\n    updateOptions(newOptions) {\n        this._configuration.updateOptions(newOptions || {});\n    }\n    getOptions() {\n        return this._configuration.options;\n    }\n    getOption(id) {\n        return this._configuration.options.get(id);\n    }\n    getRawOptions() {\n        return this._configuration.getRawOptions();\n    }\n    getOverflowWidgetsDomNode() {\n        return this._overflowWidgetsDomNode;\n    }\n    getConfiguredWordAtPosition(position) {\n        if (!this._modelData) {\n            return null;\n        }\n        return WordOperations.getWordAtPosition(this._modelData.model, this._configuration.options.get(132 /* EditorOption.wordSeparators */), this._configuration.options.get(131 /* EditorOption.wordSegmenterLocales */), position);\n    }\n    getValue(options = null) {\n        if (!this._modelData) {\n            return '';\n        }\n        const preserveBOM = (options && options.preserveBOM) ? true : false;\n        let eolPreference = 0 /* EndOfLinePreference.TextDefined */;\n        if (options && options.lineEnding && options.lineEnding === '\\n') {\n            eolPreference = 1 /* EndOfLinePreference.LF */;\n        }\n        else if (options && options.lineEnding && options.lineEnding === '\\r\\n') {\n            eolPreference = 2 /* EndOfLinePreference.CRLF */;\n        }\n        return this._modelData.model.getValue(eolPreference, preserveBOM);\n    }\n    setValue(newValue) {\n        try {\n            this._beginUpdate();\n            if (!this._modelData) {\n                return;\n            }\n            this._modelData.model.setValue(newValue);\n        }\n        finally {\n            this._endUpdate();\n        }\n    }\n    getModel() {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.model;\n    }\n    setModel(_model = null) {\n        try {\n            this._beginUpdate();\n            const model = _model;\n            if (this._modelData === null && model === null) {\n                // Current model is the new model\n                return;\n            }\n            if (this._modelData && this._modelData.model === model) {\n                // Current model is the new model\n                return;\n            }\n            const e = {\n                oldModelUrl: this._modelData?.model.uri || null,\n                newModelUrl: model?.uri || null\n            };\n            this._onWillChangeModel.fire(e);\n            const hasTextFocus = this.hasTextFocus();\n            const detachedModel = this._detachModel();\n            this._attachModel(model);\n            if (hasTextFocus && this.hasModel()) {\n                this.focus();\n            }\n            this._removeDecorationTypes();\n            this._onDidChangeModel.fire(e);\n            this._postDetachModelCleanup(detachedModel);\n            this._contributionsDisposable = this._contributions.onAfterModelAttached();\n        }\n        finally {\n            this._endUpdate();\n        }\n    }\n    _removeDecorationTypes() {\n        this._decorationTypeKeysToIds = {};\n        if (this._decorationTypeSubtypes) {\n            for (const decorationType in this._decorationTypeSubtypes) {\n                const subTypes = this._decorationTypeSubtypes[decorationType];\n                for (const subType in subTypes) {\n                    this._removeDecorationType(decorationType + '-' + subType);\n                }\n            }\n            this._decorationTypeSubtypes = {};\n        }\n    }\n    getVisibleRanges() {\n        if (!this._modelData) {\n            return [];\n        }\n        return this._modelData.viewModel.getVisibleRanges();\n    }\n    getVisibleRangesPlusViewportAboveBelow() {\n        if (!this._modelData) {\n            return [];\n        }\n        return this._modelData.viewModel.getVisibleRangesPlusViewportAboveBelow();\n    }\n    getWhitespaces() {\n        if (!this._modelData) {\n            return [];\n        }\n        return this._modelData.viewModel.viewLayout.getWhitespaces();\n    }\n    static _getVerticalOffsetAfterPosition(modelData, modelLineNumber, modelColumn, includeViewZones) {\n        const modelPosition = modelData.model.validatePosition({\n            lineNumber: modelLineNumber,\n            column: modelColumn\n        });\n        const viewPosition = modelData.viewModel.coordinatesConverter.convertModelPositionToViewPosition(modelPosition);\n        return modelData.viewModel.viewLayout.getVerticalOffsetAfterLineNumber(viewPosition.lineNumber, includeViewZones);\n    }\n    getTopForLineNumber(lineNumber, includeViewZones = false) {\n        if (!this._modelData) {\n            return -1;\n        }\n        return CodeEditorWidget_1._getVerticalOffsetForPosition(this._modelData, lineNumber, 1, includeViewZones);\n    }\n    getTopForPosition(lineNumber, column) {\n        if (!this._modelData) {\n            return -1;\n        }\n        return CodeEditorWidget_1._getVerticalOffsetForPosition(this._modelData, lineNumber, column, false);\n    }\n    static _getVerticalOffsetForPosition(modelData, modelLineNumber, modelColumn, includeViewZones = false) {\n        const modelPosition = modelData.model.validatePosition({\n            lineNumber: modelLineNumber,\n            column: modelColumn\n        });\n        const viewPosition = modelData.viewModel.coordinatesConverter.convertModelPositionToViewPosition(modelPosition);\n        return modelData.viewModel.viewLayout.getVerticalOffsetForLineNumber(viewPosition.lineNumber, includeViewZones);\n    }\n    getBottomForLineNumber(lineNumber, includeViewZones = false) {\n        if (!this._modelData) {\n            return -1;\n        }\n        return CodeEditorWidget_1._getVerticalOffsetAfterPosition(this._modelData, lineNumber, 1, includeViewZones);\n    }\n    setHiddenAreas(ranges, source) {\n        this._modelData?.viewModel.setHiddenAreas(ranges.map(r => Range.lift(r)), source);\n    }\n    getVisibleColumnFromPosition(rawPosition) {\n        if (!this._modelData) {\n            return rawPosition.column;\n        }\n        const position = this._modelData.model.validatePosition(rawPosition);\n        const tabSize = this._modelData.model.getOptions().tabSize;\n        return CursorColumns.visibleColumnFromColumn(this._modelData.model.getLineContent(position.lineNumber), position.column, tabSize) + 1;\n    }\n    getPosition() {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.viewModel.getPosition();\n    }\n    setPosition(position, source = 'api') {\n        if (!this._modelData) {\n            return;\n        }\n        if (!Position.isIPosition(position)) {\n            throw new Error('Invalid arguments');\n        }\n        this._modelData.viewModel.setSelections(source, [{\n                selectionStartLineNumber: position.lineNumber,\n                selectionStartColumn: position.column,\n                positionLineNumber: position.lineNumber,\n                positionColumn: position.column\n            }]);\n    }\n    _sendRevealRange(modelRange, verticalType, revealHorizontal, scrollType) {\n        if (!this._modelData) {\n            return;\n        }\n        if (!Range.isIRange(modelRange)) {\n            throw new Error('Invalid arguments');\n        }\n        const validatedModelRange = this._modelData.model.validateRange(modelRange);\n        const viewRange = this._modelData.viewModel.coordinatesConverter.convertModelRangeToViewRange(validatedModelRange);\n        this._modelData.viewModel.revealRange('api', revealHorizontal, viewRange, verticalType, scrollType);\n    }\n    revealLine(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLine(lineNumber, 0 /* VerticalRevealType.Simple */, scrollType);\n    }\n    revealLineInCenter(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLine(lineNumber, 1 /* VerticalRevealType.Center */, scrollType);\n    }\n    revealLineInCenterIfOutsideViewport(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLine(lineNumber, 2 /* VerticalRevealType.CenterIfOutsideViewport */, scrollType);\n    }\n    revealLineNearTop(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLine(lineNumber, 5 /* VerticalRevealType.NearTop */, scrollType);\n    }\n    _revealLine(lineNumber, revealType, scrollType) {\n        if (typeof lineNumber !== 'number') {\n            throw new Error('Invalid arguments');\n        }\n        this._sendRevealRange(new Range(lineNumber, 1, lineNumber, 1), revealType, false, scrollType);\n    }\n    revealPosition(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealPosition(position, 0 /* VerticalRevealType.Simple */, true, scrollType);\n    }\n    revealPositionInCenter(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealPosition(position, 1 /* VerticalRevealType.Center */, true, scrollType);\n    }\n    revealPositionInCenterIfOutsideViewport(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealPosition(position, 2 /* VerticalRevealType.CenterIfOutsideViewport */, true, scrollType);\n    }\n    revealPositionNearTop(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealPosition(position, 5 /* VerticalRevealType.NearTop */, true, scrollType);\n    }\n    _revealPosition(position, verticalType, revealHorizontal, scrollType) {\n        if (!Position.isIPosition(position)) {\n            throw new Error('Invalid arguments');\n        }\n        this._sendRevealRange(new Range(position.lineNumber, position.column, position.lineNumber, position.column), verticalType, revealHorizontal, scrollType);\n    }\n    getSelection() {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.viewModel.getSelection();\n    }\n    getSelections() {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.viewModel.getSelections();\n    }\n    setSelection(something, source = 'api') {\n        const isSelection = Selection.isISelection(something);\n        const isRange = Range.isIRange(something);\n        if (!isSelection && !isRange) {\n            throw new Error('Invalid arguments');\n        }\n        if (isSelection) {\n            this._setSelectionImpl(something, source);\n        }\n        else if (isRange) {\n            // act as if it was an IRange\n            const selection = {\n                selectionStartLineNumber: something.startLineNumber,\n                selectionStartColumn: something.startColumn,\n                positionLineNumber: something.endLineNumber,\n                positionColumn: something.endColumn\n            };\n            this._setSelectionImpl(selection, source);\n        }\n    }\n    _setSelectionImpl(sel, source) {\n        if (!this._modelData) {\n            return;\n        }\n        const selection = new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n        this._modelData.viewModel.setSelections(source, [selection]);\n    }\n    revealLines(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLines(startLineNumber, endLineNumber, 0 /* VerticalRevealType.Simple */, scrollType);\n    }\n    revealLinesInCenter(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLines(startLineNumber, endLineNumber, 1 /* VerticalRevealType.Center */, scrollType);\n    }\n    revealLinesInCenterIfOutsideViewport(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLines(startLineNumber, endLineNumber, 2 /* VerticalRevealType.CenterIfOutsideViewport */, scrollType);\n    }\n    revealLinesNearTop(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLines(startLineNumber, endLineNumber, 5 /* VerticalRevealType.NearTop */, scrollType);\n    }\n    _revealLines(startLineNumber, endLineNumber, verticalType, scrollType) {\n        if (typeof startLineNumber !== 'number' || typeof endLineNumber !== 'number') {\n            throw new Error('Invalid arguments');\n        }\n        this._sendRevealRange(new Range(startLineNumber, 1, endLineNumber, 1), verticalType, false, scrollType);\n    }\n    revealRange(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */, revealVerticalInCenter = false, revealHorizontal = true) {\n        this._revealRange(range, revealVerticalInCenter ? 1 /* VerticalRevealType.Center */ : 0 /* VerticalRevealType.Simple */, revealHorizontal, scrollType);\n    }\n    revealRangeInCenter(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealRange(range, 1 /* VerticalRevealType.Center */, true, scrollType);\n    }\n    revealRangeInCenterIfOutsideViewport(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealRange(range, 2 /* VerticalRevealType.CenterIfOutsideViewport */, true, scrollType);\n    }\n    revealRangeNearTop(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealRange(range, 5 /* VerticalRevealType.NearTop */, true, scrollType);\n    }\n    revealRangeNearTopIfOutsideViewport(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealRange(range, 6 /* VerticalRevealType.NearTopIfOutsideViewport */, true, scrollType);\n    }\n    revealRangeAtTop(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealRange(range, 3 /* VerticalRevealType.Top */, true, scrollType);\n    }\n    _revealRange(range, verticalType, revealHorizontal, scrollType) {\n        if (!Range.isIRange(range)) {\n            throw new Error('Invalid arguments');\n        }\n        this._sendRevealRange(Range.lift(range), verticalType, revealHorizontal, scrollType);\n    }\n    setSelections(ranges, source = 'api', reason = 0 /* CursorChangeReason.NotSet */) {\n        if (!this._modelData) {\n            return;\n        }\n        if (!ranges || ranges.length === 0) {\n            throw new Error('Invalid arguments');\n        }\n        for (let i = 0, len = ranges.length; i < len; i++) {\n            if (!Selection.isISelection(ranges[i])) {\n                throw new Error('Invalid arguments');\n            }\n        }\n        this._modelData.viewModel.setSelections(source, ranges, reason);\n    }\n    getContentWidth() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getContentWidth();\n    }\n    getScrollWidth() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getScrollWidth();\n    }\n    getScrollLeft() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getCurrentScrollLeft();\n    }\n    getContentHeight() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getContentHeight();\n    }\n    getScrollHeight() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getScrollHeight();\n    }\n    getScrollTop() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getCurrentScrollTop();\n    }\n    setScrollLeft(newScrollLeft, scrollType = 1 /* editorCommon.ScrollType.Immediate */) {\n        if (!this._modelData) {\n            return;\n        }\n        if (typeof newScrollLeft !== 'number') {\n            throw new Error('Invalid arguments');\n        }\n        this._modelData.viewModel.viewLayout.setScrollPosition({\n            scrollLeft: newScrollLeft\n        }, scrollType);\n    }\n    setScrollTop(newScrollTop, scrollType = 1 /* editorCommon.ScrollType.Immediate */) {\n        if (!this._modelData) {\n            return;\n        }\n        if (typeof newScrollTop !== 'number') {\n            throw new Error('Invalid arguments');\n        }\n        this._modelData.viewModel.viewLayout.setScrollPosition({\n            scrollTop: newScrollTop\n        }, scrollType);\n    }\n    setScrollPosition(position, scrollType = 1 /* editorCommon.ScrollType.Immediate */) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.viewLayout.setScrollPosition(position, scrollType);\n    }\n    hasPendingScrollAnimation() {\n        if (!this._modelData) {\n            return false;\n        }\n        return this._modelData.viewModel.viewLayout.hasPendingScrollAnimation();\n    }\n    saveViewState() {\n        if (!this._modelData) {\n            return null;\n        }\n        const contributionsState = this._contributions.saveViewState();\n        const cursorState = this._modelData.viewModel.saveCursorState();\n        const viewState = this._modelData.viewModel.saveState();\n        return {\n            cursorState: cursorState,\n            viewState: viewState,\n            contributionsState: contributionsState\n        };\n    }\n    restoreViewState(s) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        const codeEditorState = s;\n        if (codeEditorState && codeEditorState.cursorState && codeEditorState.viewState) {\n            const cursorState = codeEditorState.cursorState;\n            if (Array.isArray(cursorState)) {\n                if (cursorState.length > 0) {\n                    this._modelData.viewModel.restoreCursorState(cursorState);\n                }\n            }\n            else {\n                // Backwards compatibility\n                this._modelData.viewModel.restoreCursorState([cursorState]);\n            }\n            this._contributions.restoreViewState(codeEditorState.contributionsState || {});\n            const reducedState = this._modelData.viewModel.reduceRestoreState(codeEditorState.viewState);\n            this._modelData.view.restoreState(reducedState);\n        }\n    }\n    handleInitialized() {\n        this._getViewModel()?.visibleLinesStabilized();\n    }\n    getContribution(id) {\n        return this._contributions.get(id);\n    }\n    getActions() {\n        return Array.from(this._actions.values());\n    }\n    getSupportedActions() {\n        let result = this.getActions();\n        result = result.filter(action => action.isSupported());\n        return result;\n    }\n    getAction(id) {\n        return this._actions.get(id) || null;\n    }\n    trigger(source, handlerId, payload) {\n        payload = payload || {};\n        try {\n            this._beginUpdate();\n            switch (handlerId) {\n                case \"compositionStart\" /* editorCommon.Handler.CompositionStart */:\n                    this._startComposition();\n                    return;\n                case \"compositionEnd\" /* editorCommon.Handler.CompositionEnd */:\n                    this._endComposition(source);\n                    return;\n                case \"type\" /* editorCommon.Handler.Type */: {\n                    const args = payload;\n                    this._type(source, args.text || '');\n                    return;\n                }\n                case \"replacePreviousChar\" /* editorCommon.Handler.ReplacePreviousChar */: {\n                    const args = payload;\n                    this._compositionType(source, args.text || '', args.replaceCharCnt || 0, 0, 0);\n                    return;\n                }\n                case \"compositionType\" /* editorCommon.Handler.CompositionType */: {\n                    const args = payload;\n                    this._compositionType(source, args.text || '', args.replacePrevCharCnt || 0, args.replaceNextCharCnt || 0, args.positionDelta || 0);\n                    return;\n                }\n                case \"paste\" /* editorCommon.Handler.Paste */: {\n                    const args = payload;\n                    this._paste(source, args.text || '', args.pasteOnNewLine || false, args.multicursorText || null, args.mode || null, args.clipboardEvent);\n                    return;\n                }\n                case \"cut\" /* editorCommon.Handler.Cut */:\n                    this._cut(source);\n                    return;\n            }\n            const action = this.getAction(handlerId);\n            if (action) {\n                Promise.resolve(action.run(payload)).then(undefined, onUnexpectedError);\n                return;\n            }\n            if (!this._modelData) {\n                return;\n            }\n            if (this._triggerEditorCommand(source, handlerId, payload)) {\n                return;\n            }\n            this._triggerCommand(handlerId, payload);\n        }\n        finally {\n            this._endUpdate();\n        }\n    }\n    _triggerCommand(handlerId, payload) {\n        this._commandService.executeCommand(handlerId, payload);\n    }\n    _startComposition() {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.startComposition();\n        this._onDidCompositionStart.fire();\n    }\n    _endComposition(source) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.endComposition(source);\n        this._onDidCompositionEnd.fire();\n    }\n    _type(source, text) {\n        if (!this._modelData || text.length === 0) {\n            return;\n        }\n        if (source === 'keyboard') {\n            this._onWillType.fire(text);\n        }\n        this._modelData.viewModel.type(text, source);\n        if (source === 'keyboard') {\n            this._onDidType.fire(text);\n        }\n    }\n    _compositionType(source, text, replacePrevCharCnt, replaceNextCharCnt, positionDelta) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.compositionType(text, replacePrevCharCnt, replaceNextCharCnt, positionDelta, source);\n    }\n    _paste(source, text, pasteOnNewLine, multicursorText, mode, clipboardEvent) {\n        if (!this._modelData) {\n            return;\n        }\n        const viewModel = this._modelData.viewModel;\n        const startPosition = viewModel.getSelection().getStartPosition();\n        viewModel.paste(text, pasteOnNewLine, multicursorText, source);\n        const endPosition = viewModel.getSelection().getStartPosition();\n        if (source === 'keyboard') {\n            this._onDidPaste.fire({\n                clipboardEvent,\n                range: new Range(startPosition.lineNumber, startPosition.column, endPosition.lineNumber, endPosition.column),\n                languageId: mode\n            });\n        }\n    }\n    _cut(source) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.cut(source);\n    }\n    _triggerEditorCommand(source, handlerId, payload) {\n        const command = EditorExtensionsRegistry.getEditorCommand(handlerId);\n        if (command) {\n            payload = payload || {};\n            payload.source = source;\n            this._instantiationService.invokeFunction((accessor) => {\n                Promise.resolve(command.runEditorCommand(accessor, this, payload)).then(undefined, onUnexpectedError);\n            });\n            return true;\n        }\n        return false;\n    }\n    _getViewModel() {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.viewModel;\n    }\n    pushUndoStop() {\n        if (!this._modelData) {\n            return false;\n        }\n        if (this._configuration.options.get(92 /* EditorOption.readOnly */)) {\n            // read only editor => sorry!\n            return false;\n        }\n        this._modelData.model.pushStackElement();\n        return true;\n    }\n    popUndoStop() {\n        if (!this._modelData) {\n            return false;\n        }\n        if (this._configuration.options.get(92 /* EditorOption.readOnly */)) {\n            // read only editor => sorry!\n            return false;\n        }\n        this._modelData.model.popStackElement();\n        return true;\n    }\n    executeEdits(source, edits, endCursorState) {\n        if (!this._modelData) {\n            return false;\n        }\n        if (this._configuration.options.get(92 /* EditorOption.readOnly */)) {\n            // read only editor => sorry!\n            return false;\n        }\n        let cursorStateComputer;\n        if (!endCursorState) {\n            cursorStateComputer = () => null;\n        }\n        else if (Array.isArray(endCursorState)) {\n            cursorStateComputer = () => endCursorState;\n        }\n        else {\n            cursorStateComputer = endCursorState;\n        }\n        this._modelData.viewModel.executeEdits(source, edits, cursorStateComputer);\n        return true;\n    }\n    executeCommand(source, command) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.executeCommand(command, source);\n    }\n    executeCommands(source, commands) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.executeCommands(commands, source);\n    }\n    createDecorationsCollection(decorations) {\n        return new EditorDecorationsCollection(this, decorations);\n    }\n    changeDecorations(callback) {\n        if (!this._modelData) {\n            // callback will not be called\n            return null;\n        }\n        return this._modelData.model.changeDecorations(callback, this._id);\n    }\n    getLineDecorations(lineNumber) {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.model.getLineDecorations(lineNumber, this._id, filterValidationDecorations(this._configuration.options));\n    }\n    getDecorationsInRange(range) {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.model.getDecorationsInRange(range, this._id, filterValidationDecorations(this._configuration.options));\n    }\n    /**\n     * @deprecated\n     */\n    deltaDecorations(oldDecorations, newDecorations) {\n        if (!this._modelData) {\n            return [];\n        }\n        if (oldDecorations.length === 0 && newDecorations.length === 0) {\n            return oldDecorations;\n        }\n        return this._modelData.model.deltaDecorations(oldDecorations, newDecorations, this._id);\n    }\n    removeDecorations(decorationIds) {\n        if (!this._modelData || decorationIds.length === 0) {\n            return;\n        }\n        this._modelData.model.changeDecorations((changeAccessor) => {\n            changeAccessor.deltaDecorations(decorationIds, []);\n        });\n    }\n    removeDecorationsByType(decorationTypeKey) {\n        // remove decorations for type and sub type\n        const oldDecorationsIds = this._decorationTypeKeysToIds[decorationTypeKey];\n        if (oldDecorationsIds) {\n            this.changeDecorations(accessor => accessor.deltaDecorations(oldDecorationsIds, []));\n        }\n        if (this._decorationTypeKeysToIds.hasOwnProperty(decorationTypeKey)) {\n            delete this._decorationTypeKeysToIds[decorationTypeKey];\n        }\n        if (this._decorationTypeSubtypes.hasOwnProperty(decorationTypeKey)) {\n            delete this._decorationTypeSubtypes[decorationTypeKey];\n        }\n    }\n    getLayoutInfo() {\n        const options = this._configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        return layoutInfo;\n    }\n    createOverviewRuler(cssClassName) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return null;\n        }\n        return this._modelData.view.createOverviewRuler(cssClassName);\n    }\n    getContainerDomNode() {\n        return this._domElement;\n    }\n    getDomNode() {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return null;\n        }\n        return this._modelData.view.domNode.domNode;\n    }\n    delegateVerticalScrollbarPointerDown(browserEvent) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.delegateVerticalScrollbarPointerDown(browserEvent);\n    }\n    delegateScrollFromMouseWheelEvent(browserEvent) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.delegateScrollFromMouseWheelEvent(browserEvent);\n    }\n    layout(dimension, postponeRendering = false) {\n        this._configuration.observeContainer(dimension);\n        if (!postponeRendering) {\n            this.render();\n        }\n    }\n    focus() {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.focus();\n    }\n    hasTextFocus() {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return false;\n        }\n        return this._modelData.view.isFocused();\n    }\n    hasWidgetFocus() {\n        return this._focusTracker && this._focusTracker.hasFocus();\n    }\n    addContentWidget(widget) {\n        const widgetData = {\n            widget: widget,\n            position: widget.getPosition()\n        };\n        if (this._contentWidgets.hasOwnProperty(widget.getId())) {\n            console.warn('Overwriting a content widget with the same id:' + widget.getId());\n        }\n        this._contentWidgets[widget.getId()] = widgetData;\n        if (this._modelData && this._modelData.hasRealView) {\n            this._modelData.view.addContentWidget(widgetData);\n        }\n    }\n    layoutContentWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._contentWidgets.hasOwnProperty(widgetId)) {\n            const widgetData = this._contentWidgets[widgetId];\n            widgetData.position = widget.getPosition();\n            if (this._modelData && this._modelData.hasRealView) {\n                this._modelData.view.layoutContentWidget(widgetData);\n            }\n        }\n    }\n    removeContentWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._contentWidgets.hasOwnProperty(widgetId)) {\n            const widgetData = this._contentWidgets[widgetId];\n            delete this._contentWidgets[widgetId];\n            if (this._modelData && this._modelData.hasRealView) {\n                this._modelData.view.removeContentWidget(widgetData);\n            }\n        }\n    }\n    addOverlayWidget(widget) {\n        const widgetData = {\n            widget: widget,\n            position: widget.getPosition()\n        };\n        if (this._overlayWidgets.hasOwnProperty(widget.getId())) {\n            console.warn('Overwriting an overlay widget with the same id.');\n        }\n        this._overlayWidgets[widget.getId()] = widgetData;\n        if (this._modelData && this._modelData.hasRealView) {\n            this._modelData.view.addOverlayWidget(widgetData);\n        }\n    }\n    layoutOverlayWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._overlayWidgets.hasOwnProperty(widgetId)) {\n            const widgetData = this._overlayWidgets[widgetId];\n            widgetData.position = widget.getPosition();\n            if (this._modelData && this._modelData.hasRealView) {\n                this._modelData.view.layoutOverlayWidget(widgetData);\n            }\n        }\n    }\n    removeOverlayWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._overlayWidgets.hasOwnProperty(widgetId)) {\n            const widgetData = this._overlayWidgets[widgetId];\n            delete this._overlayWidgets[widgetId];\n            if (this._modelData && this._modelData.hasRealView) {\n                this._modelData.view.removeOverlayWidget(widgetData);\n            }\n        }\n    }\n    addGlyphMarginWidget(widget) {\n        const widgetData = {\n            widget: widget,\n            position: widget.getPosition()\n        };\n        if (this._glyphMarginWidgets.hasOwnProperty(widget.getId())) {\n            console.warn('Overwriting a glyph margin widget with the same id.');\n        }\n        this._glyphMarginWidgets[widget.getId()] = widgetData;\n        if (this._modelData && this._modelData.hasRealView) {\n            this._modelData.view.addGlyphMarginWidget(widgetData);\n        }\n    }\n    layoutGlyphMarginWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._glyphMarginWidgets.hasOwnProperty(widgetId)) {\n            const widgetData = this._glyphMarginWidgets[widgetId];\n            widgetData.position = widget.getPosition();\n            if (this._modelData && this._modelData.hasRealView) {\n                this._modelData.view.layoutGlyphMarginWidget(widgetData);\n            }\n        }\n    }\n    removeGlyphMarginWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._glyphMarginWidgets.hasOwnProperty(widgetId)) {\n            const widgetData = this._glyphMarginWidgets[widgetId];\n            delete this._glyphMarginWidgets[widgetId];\n            if (this._modelData && this._modelData.hasRealView) {\n                this._modelData.view.removeGlyphMarginWidget(widgetData);\n            }\n        }\n    }\n    changeViewZones(callback) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.change(callback);\n    }\n    getTargetAtClientPoint(clientX, clientY) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return null;\n        }\n        return this._modelData.view.getTargetAtClientPoint(clientX, clientY);\n    }\n    getScrolledVisiblePosition(rawPosition) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return null;\n        }\n        const position = this._modelData.model.validatePosition(rawPosition);\n        const options = this._configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        const top = CodeEditorWidget_1._getVerticalOffsetForPosition(this._modelData, position.lineNumber, position.column) - this.getScrollTop();\n        const left = this._modelData.view.getOffsetForColumn(position.lineNumber, position.column) + layoutInfo.glyphMarginWidth + layoutInfo.lineNumbersWidth + layoutInfo.decorationsWidth - this.getScrollLeft();\n        return {\n            top: top,\n            left: left,\n            height: options.get(67 /* EditorOption.lineHeight */)\n        };\n    }\n    getOffsetForColumn(lineNumber, column) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return -1;\n        }\n        return this._modelData.view.getOffsetForColumn(lineNumber, column);\n    }\n    render(forceRedraw = false) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.viewModel.batchEvents(() => {\n            this._modelData.view.render(true, forceRedraw);\n        });\n    }\n    setAriaOptions(options) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.setAriaOptions(options);\n    }\n    applyFontInfo(target) {\n        applyFontInfo(target, this._configuration.options.get(50 /* EditorOption.fontInfo */));\n    }\n    setBanner(domNode, domNodeHeight) {\n        if (this._bannerDomNode && this._domElement.contains(this._bannerDomNode)) {\n            this._bannerDomNode.remove();\n        }\n        this._bannerDomNode = domNode;\n        this._configuration.setReservedHeight(domNode ? domNodeHeight : 0);\n        if (this._bannerDomNode) {\n            this._domElement.prepend(this._bannerDomNode);\n        }\n    }\n    _attachModel(model) {\n        if (!model) {\n            this._modelData = null;\n            return;\n        }\n        const listenersToRemove = [];\n        this._domElement.setAttribute('data-mode-id', model.getLanguageId());\n        this._configuration.setIsDominatedByLongLines(model.isDominatedByLongLines());\n        this._configuration.setModelLineCount(model.getLineCount());\n        const attachedView = model.onBeforeAttached();\n        const viewModel = new ViewModel(this._id, this._configuration, model, DOMLineBreaksComputerFactory.create(dom.getWindow(this._domElement)), MonospaceLineBreaksComputerFactory.create(this._configuration.options), (callback) => dom.scheduleAtNextAnimationFrame(dom.getWindow(this._domElement), callback), this.languageConfigurationService, this._themeService, attachedView, {\n            batchChanges: (cb) => {\n                try {\n                    this._beginUpdate();\n                    return cb();\n                }\n                finally {\n                    this._endUpdate();\n                }\n            },\n        });\n        // Someone might destroy the model from under the editor, so prevent any exceptions by setting a null model\n        listenersToRemove.push(model.onWillDispose(() => this.setModel(null)));\n        listenersToRemove.push(viewModel.onEvent((e) => {\n            switch (e.kind) {\n                case 0 /* OutgoingViewModelEventKind.ContentSizeChanged */:\n                    this._onDidContentSizeChange.fire(e);\n                    break;\n                case 1 /* OutgoingViewModelEventKind.FocusChanged */:\n                    this._editorTextFocus.setValue(e.hasFocus);\n                    break;\n                case 2 /* OutgoingViewModelEventKind.ScrollChanged */:\n                    this._onDidScrollChange.fire(e);\n                    break;\n                case 3 /* OutgoingViewModelEventKind.ViewZonesChanged */:\n                    this._onDidChangeViewZones.fire();\n                    break;\n                case 4 /* OutgoingViewModelEventKind.HiddenAreasChanged */:\n                    this._onDidChangeHiddenAreas.fire();\n                    break;\n                case 5 /* OutgoingViewModelEventKind.ReadOnlyEditAttempt */:\n                    this._onDidAttemptReadOnlyEdit.fire();\n                    break;\n                case 6 /* OutgoingViewModelEventKind.CursorStateChanged */: {\n                    if (e.reachedMaxCursorCount) {\n                        const multiCursorLimit = this.getOption(80 /* EditorOption.multiCursorLimit */);\n                        const message = nls.localize('cursors.maximum', \"The number of cursors has been limited to {0}. Consider using [find and replace](https://code.visualstudio.com/docs/editor/codebasics#_find-and-replace) for larger changes or increase the editor multi cursor limit setting.\", multiCursorLimit);\n                        this._notificationService.prompt(Severity.Warning, message, [\n                            {\n                                label: 'Find and Replace',\n                                run: () => {\n                                    this._commandService.executeCommand('editor.action.startFindReplaceAction');\n                                }\n                            },\n                            {\n                                label: nls.localize('goToSetting', 'Increase Multi Cursor Limit'),\n                                run: () => {\n                                    this._commandService.executeCommand('workbench.action.openSettings2', {\n                                        query: 'editor.multiCursorLimit'\n                                    });\n                                }\n                            }\n                        ]);\n                    }\n                    const positions = [];\n                    for (let i = 0, len = e.selections.length; i < len; i++) {\n                        positions[i] = e.selections[i].getPosition();\n                    }\n                    const e1 = {\n                        position: positions[0],\n                        secondaryPositions: positions.slice(1),\n                        reason: e.reason,\n                        source: e.source\n                    };\n                    this._onDidChangeCursorPosition.fire(e1);\n                    const e2 = {\n                        selection: e.selections[0],\n                        secondarySelections: e.selections.slice(1),\n                        modelVersionId: e.modelVersionId,\n                        oldSelections: e.oldSelections,\n                        oldModelVersionId: e.oldModelVersionId,\n                        source: e.source,\n                        reason: e.reason\n                    };\n                    this._onDidChangeCursorSelection.fire(e2);\n                    break;\n                }\n                case 7 /* OutgoingViewModelEventKind.ModelDecorationsChanged */:\n                    this._onDidChangeModelDecorations.fire(e.event);\n                    break;\n                case 8 /* OutgoingViewModelEventKind.ModelLanguageChanged */:\n                    this._domElement.setAttribute('data-mode-id', model.getLanguageId());\n                    this._onDidChangeModelLanguage.fire(e.event);\n                    break;\n                case 9 /* OutgoingViewModelEventKind.ModelLanguageConfigurationChanged */:\n                    this._onDidChangeModelLanguageConfiguration.fire(e.event);\n                    break;\n                case 10 /* OutgoingViewModelEventKind.ModelContentChanged */:\n                    this._onDidChangeModelContent.fire(e.event);\n                    break;\n                case 11 /* OutgoingViewModelEventKind.ModelOptionsChanged */:\n                    this._onDidChangeModelOptions.fire(e.event);\n                    break;\n                case 12 /* OutgoingViewModelEventKind.ModelTokensChanged */:\n                    this._onDidChangeModelTokens.fire(e.event);\n                    break;\n            }\n        }));\n        const [view, hasRealView] = this._createView(viewModel);\n        if (hasRealView) {\n            this._domElement.appendChild(view.domNode.domNode);\n            let keys = Object.keys(this._contentWidgets);\n            for (let i = 0, len = keys.length; i < len; i++) {\n                const widgetId = keys[i];\n                view.addContentWidget(this._contentWidgets[widgetId]);\n            }\n            keys = Object.keys(this._overlayWidgets);\n            for (let i = 0, len = keys.length; i < len; i++) {\n                const widgetId = keys[i];\n                view.addOverlayWidget(this._overlayWidgets[widgetId]);\n            }\n            keys = Object.keys(this._glyphMarginWidgets);\n            for (let i = 0, len = keys.length; i < len; i++) {\n                const widgetId = keys[i];\n                view.addGlyphMarginWidget(this._glyphMarginWidgets[widgetId]);\n            }\n            view.render(false, true);\n            view.domNode.domNode.setAttribute('data-uri', model.uri.toString());\n        }\n        this._modelData = new ModelData(model, viewModel, view, hasRealView, listenersToRemove, attachedView);\n    }\n    _createView(viewModel) {\n        let commandDelegate;\n        if (this.isSimpleWidget) {\n            commandDelegate = {\n                paste: (text, pasteOnNewLine, multicursorText, mode) => {\n                    this._paste('keyboard', text, pasteOnNewLine, multicursorText, mode);\n                },\n                type: (text) => {\n                    this._type('keyboard', text);\n                },\n                compositionType: (text, replacePrevCharCnt, replaceNextCharCnt, positionDelta) => {\n                    this._compositionType('keyboard', text, replacePrevCharCnt, replaceNextCharCnt, positionDelta);\n                },\n                startComposition: () => {\n                    this._startComposition();\n                },\n                endComposition: () => {\n                    this._endComposition('keyboard');\n                },\n                cut: () => {\n                    this._cut('keyboard');\n                }\n            };\n        }\n        else {\n            commandDelegate = {\n                paste: (text, pasteOnNewLine, multicursorText, mode) => {\n                    const payload = { text, pasteOnNewLine, multicursorText, mode };\n                    this._commandService.executeCommand(\"paste\" /* editorCommon.Handler.Paste */, payload);\n                },\n                type: (text) => {\n                    const payload = { text };\n                    this._commandService.executeCommand(\"type\" /* editorCommon.Handler.Type */, payload);\n                },\n                compositionType: (text, replacePrevCharCnt, replaceNextCharCnt, positionDelta) => {\n                    // Try if possible to go through the existing `replacePreviousChar` command\n                    if (replaceNextCharCnt || positionDelta) {\n                        // must be handled through the new command\n                        const payload = { text, replacePrevCharCnt, replaceNextCharCnt, positionDelta };\n                        this._commandService.executeCommand(\"compositionType\" /* editorCommon.Handler.CompositionType */, payload);\n                    }\n                    else {\n                        const payload = { text, replaceCharCnt: replacePrevCharCnt };\n                        this._commandService.executeCommand(\"replacePreviousChar\" /* editorCommon.Handler.ReplacePreviousChar */, payload);\n                    }\n                },\n                startComposition: () => {\n                    this._commandService.executeCommand(\"compositionStart\" /* editorCommon.Handler.CompositionStart */, {});\n                },\n                endComposition: () => {\n                    this._commandService.executeCommand(\"compositionEnd\" /* editorCommon.Handler.CompositionEnd */, {});\n                },\n                cut: () => {\n                    this._commandService.executeCommand(\"cut\" /* editorCommon.Handler.Cut */, {});\n                }\n            };\n        }\n        const viewUserInputEvents = new ViewUserInputEvents(viewModel.coordinatesConverter);\n        viewUserInputEvents.onKeyDown = (e) => this._onKeyDown.fire(e);\n        viewUserInputEvents.onKeyUp = (e) => this._onKeyUp.fire(e);\n        viewUserInputEvents.onContextMenu = (e) => this._onContextMenu.fire(e);\n        viewUserInputEvents.onMouseMove = (e) => this._onMouseMove.fire(e);\n        viewUserInputEvents.onMouseLeave = (e) => this._onMouseLeave.fire(e);\n        viewUserInputEvents.onMouseDown = (e) => this._onMouseDown.fire(e);\n        viewUserInputEvents.onMouseUp = (e) => this._onMouseUp.fire(e);\n        viewUserInputEvents.onMouseDrag = (e) => this._onMouseDrag.fire(e);\n        viewUserInputEvents.onMouseDrop = (e) => this._onMouseDrop.fire(e);\n        viewUserInputEvents.onMouseDropCanceled = (e) => this._onMouseDropCanceled.fire(e);\n        viewUserInputEvents.onMouseWheel = (e) => this._onMouseWheel.fire(e);\n        const view = new View(commandDelegate, this._configuration, this._themeService.getColorTheme(), viewModel, viewUserInputEvents, this._overflowWidgetsDomNode, this._instantiationService);\n        return [view, true];\n    }\n    _postDetachModelCleanup(detachedModel) {\n        detachedModel?.removeAllDecorationsWithOwnerId(this._id);\n    }\n    _detachModel() {\n        this._contributionsDisposable?.dispose();\n        this._contributionsDisposable = undefined;\n        if (!this._modelData) {\n            return null;\n        }\n        const model = this._modelData.model;\n        const removeDomNode = this._modelData.hasRealView ? this._modelData.view.domNode.domNode : null;\n        this._modelData.dispose();\n        this._modelData = null;\n        this._domElement.removeAttribute('data-mode-id');\n        if (removeDomNode && this._domElement.contains(removeDomNode)) {\n            removeDomNode.remove();\n        }\n        if (this._bannerDomNode && this._domElement.contains(this._bannerDomNode)) {\n            this._bannerDomNode.remove();\n        }\n        return model;\n    }\n    _removeDecorationType(key) {\n        this._codeEditorService.removeDecorationType(key);\n    }\n    hasModel() {\n        return (this._modelData !== null);\n    }\n    showDropIndicatorAt(position) {\n        const newDecorations = [{\n                range: new Range(position.lineNumber, position.column, position.lineNumber, position.column),\n                options: CodeEditorWidget_1.dropIntoEditorDecorationOptions\n            }];\n        this._dropIntoEditorDecorations.set(newDecorations);\n        this.revealPosition(position, 1 /* editorCommon.ScrollType.Immediate */);\n    }\n    removeDropIndicator() {\n        this._dropIntoEditorDecorations.clear();\n    }\n    setContextValue(key, value) {\n        this._contextKeyService.createKey(key, value);\n    }\n    _beginUpdate() {\n        this._updateCounter++;\n        if (this._updateCounter === 1) {\n            this._onBeginUpdate.fire();\n        }\n    }\n    _endUpdate() {\n        this._updateCounter--;\n        if (this._updateCounter === 0) {\n            this._onEndUpdate.fire();\n        }\n    }\n};\nCodeEditorWidget = CodeEditorWidget_1 = __decorate([\n    __param(3, IInstantiationService),\n    __param(4, ICodeEditorService),\n    __param(5, ICommandService),\n    __param(6, IContextKeyService),\n    __param(7, IThemeService),\n    __param(8, INotificationService),\n    __param(9, IAccessibilityService),\n    __param(10, ILanguageConfigurationService),\n    __param(11, ILanguageFeaturesService)\n], CodeEditorWidget);\nexport { CodeEditorWidget };\nlet EDITOR_ID = 0;\nclass ModelData {\n    constructor(model, viewModel, view, hasRealView, listenersToRemove, attachedView) {\n        this.model = model;\n        this.viewModel = viewModel;\n        this.view = view;\n        this.hasRealView = hasRealView;\n        this.listenersToRemove = listenersToRemove;\n        this.attachedView = attachedView;\n    }\n    dispose() {\n        dispose(this.listenersToRemove);\n        this.model.onBeforeDetached(this.attachedView);\n        if (this.hasRealView) {\n            this.view.dispose();\n        }\n        this.viewModel.dispose();\n    }\n}\nexport class BooleanEventEmitter extends Disposable {\n    constructor(_emitterOptions) {\n        super();\n        this._emitterOptions = _emitterOptions;\n        this._onDidChangeToTrue = this._register(new Emitter(this._emitterOptions));\n        this.onDidChangeToTrue = this._onDidChangeToTrue.event;\n        this._onDidChangeToFalse = this._register(new Emitter(this._emitterOptions));\n        this.onDidChangeToFalse = this._onDidChangeToFalse.event;\n        this._value = 0 /* BooleanEventValue.NotSet */;\n    }\n    setValue(_value) {\n        const value = (_value ? 2 /* BooleanEventValue.True */ : 1 /* BooleanEventValue.False */);\n        if (this._value === value) {\n            return;\n        }\n        this._value = value;\n        if (this._value === 2 /* BooleanEventValue.True */) {\n            this._onDidChangeToTrue.fire();\n        }\n        else if (this._value === 1 /* BooleanEventValue.False */) {\n            this._onDidChangeToFalse.fire();\n        }\n    }\n}\n/**\n * A regular event emitter that also makes sure contributions are instantiated if necessary\n */\nclass InteractionEmitter extends Emitter {\n    constructor(_contributions, deliveryQueue) {\n        super({ deliveryQueue });\n        this._contributions = _contributions;\n    }\n    fire(event) {\n        this._contributions.onBeforeInteractionEvent();\n        super.fire(event);\n    }\n}\nclass EditorContextKeysManager extends Disposable {\n    constructor(editor, contextKeyService) {\n        super();\n        this._editor = editor;\n        contextKeyService.createKey('editorId', editor.getId());\n        this._editorSimpleInput = EditorContextKeys.editorSimpleInput.bindTo(contextKeyService);\n        this._editorFocus = EditorContextKeys.focus.bindTo(contextKeyService);\n        this._textInputFocus = EditorContextKeys.textInputFocus.bindTo(contextKeyService);\n        this._editorTextFocus = EditorContextKeys.editorTextFocus.bindTo(contextKeyService);\n        this._tabMovesFocus = EditorContextKeys.tabMovesFocus.bindTo(contextKeyService);\n        this._editorReadonly = EditorContextKeys.readOnly.bindTo(contextKeyService);\n        this._inDiffEditor = EditorContextKeys.inDiffEditor.bindTo(contextKeyService);\n        this._editorColumnSelection = EditorContextKeys.columnSelection.bindTo(contextKeyService);\n        this._hasMultipleSelections = EditorContextKeys.hasMultipleSelections.bindTo(contextKeyService);\n        this._hasNonEmptySelection = EditorContextKeys.hasNonEmptySelection.bindTo(contextKeyService);\n        this._canUndo = EditorContextKeys.canUndo.bindTo(contextKeyService);\n        this._canRedo = EditorContextKeys.canRedo.bindTo(contextKeyService);\n        this._register(this._editor.onDidChangeConfiguration(() => this._updateFromConfig()));\n        this._register(this._editor.onDidChangeCursorSelection(() => this._updateFromSelection()));\n        this._register(this._editor.onDidFocusEditorWidget(() => this._updateFromFocus()));\n        this._register(this._editor.onDidBlurEditorWidget(() => this._updateFromFocus()));\n        this._register(this._editor.onDidFocusEditorText(() => this._updateFromFocus()));\n        this._register(this._editor.onDidBlurEditorText(() => this._updateFromFocus()));\n        this._register(this._editor.onDidChangeModel(() => this._updateFromModel()));\n        this._register(this._editor.onDidChangeConfiguration(() => this._updateFromModel()));\n        this._register(TabFocus.onDidChangeTabFocus((tabFocusMode) => this._tabMovesFocus.set(tabFocusMode)));\n        this._updateFromConfig();\n        this._updateFromSelection();\n        this._updateFromFocus();\n        this._updateFromModel();\n        this._editorSimpleInput.set(this._editor.isSimpleWidget);\n    }\n    _updateFromConfig() {\n        const options = this._editor.getOptions();\n        this._tabMovesFocus.set(TabFocus.getTabFocusMode());\n        this._editorReadonly.set(options.get(92 /* EditorOption.readOnly */));\n        this._inDiffEditor.set(options.get(61 /* EditorOption.inDiffEditor */));\n        this._editorColumnSelection.set(options.get(22 /* EditorOption.columnSelection */));\n    }\n    _updateFromSelection() {\n        const selections = this._editor.getSelections();\n        if (!selections) {\n            this._hasMultipleSelections.reset();\n            this._hasNonEmptySelection.reset();\n        }\n        else {\n            this._hasMultipleSelections.set(selections.length > 1);\n            this._hasNonEmptySelection.set(selections.some(s => !s.isEmpty()));\n        }\n    }\n    _updateFromFocus() {\n        this._editorFocus.set(this._editor.hasWidgetFocus() && !this._editor.isSimpleWidget);\n        this._editorTextFocus.set(this._editor.hasTextFocus() && !this._editor.isSimpleWidget);\n        this._textInputFocus.set(this._editor.hasTextFocus());\n    }\n    _updateFromModel() {\n        const model = this._editor.getModel();\n        this._canUndo.set(Boolean(model && model.canUndo()));\n        this._canRedo.set(Boolean(model && model.canRedo()));\n    }\n}\nexport class EditorModeContext extends Disposable {\n    constructor(_editor, _contextKeyService, _languageFeaturesService) {\n        super();\n        this._editor = _editor;\n        this._contextKeyService = _contextKeyService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._langId = EditorContextKeys.languageId.bindTo(_contextKeyService);\n        this._hasCompletionItemProvider = EditorContextKeys.hasCompletionItemProvider.bindTo(_contextKeyService);\n        this._hasCodeActionsProvider = EditorContextKeys.hasCodeActionsProvider.bindTo(_contextKeyService);\n        this._hasCodeLensProvider = EditorContextKeys.hasCodeLensProvider.bindTo(_contextKeyService);\n        this._hasDefinitionProvider = EditorContextKeys.hasDefinitionProvider.bindTo(_contextKeyService);\n        this._hasDeclarationProvider = EditorContextKeys.hasDeclarationProvider.bindTo(_contextKeyService);\n        this._hasImplementationProvider = EditorContextKeys.hasImplementationProvider.bindTo(_contextKeyService);\n        this._hasTypeDefinitionProvider = EditorContextKeys.hasTypeDefinitionProvider.bindTo(_contextKeyService);\n        this._hasHoverProvider = EditorContextKeys.hasHoverProvider.bindTo(_contextKeyService);\n        this._hasDocumentHighlightProvider = EditorContextKeys.hasDocumentHighlightProvider.bindTo(_contextKeyService);\n        this._hasDocumentSymbolProvider = EditorContextKeys.hasDocumentSymbolProvider.bindTo(_contextKeyService);\n        this._hasReferenceProvider = EditorContextKeys.hasReferenceProvider.bindTo(_contextKeyService);\n        this._hasRenameProvider = EditorContextKeys.hasRenameProvider.bindTo(_contextKeyService);\n        this._hasSignatureHelpProvider = EditorContextKeys.hasSignatureHelpProvider.bindTo(_contextKeyService);\n        this._hasInlayHintsProvider = EditorContextKeys.hasInlayHintsProvider.bindTo(_contextKeyService);\n        this._hasDocumentFormattingProvider = EditorContextKeys.hasDocumentFormattingProvider.bindTo(_contextKeyService);\n        this._hasDocumentSelectionFormattingProvider = EditorContextKeys.hasDocumentSelectionFormattingProvider.bindTo(_contextKeyService);\n        this._hasMultipleDocumentFormattingProvider = EditorContextKeys.hasMultipleDocumentFormattingProvider.bindTo(_contextKeyService);\n        this._hasMultipleDocumentSelectionFormattingProvider = EditorContextKeys.hasMultipleDocumentSelectionFormattingProvider.bindTo(_contextKeyService);\n        this._isInEmbeddedEditor = EditorContextKeys.isInEmbeddedEditor.bindTo(_contextKeyService);\n        const update = () => this._update();\n        // update when model/mode changes\n        this._register(_editor.onDidChangeModel(update));\n        this._register(_editor.onDidChangeModelLanguage(update));\n        // update when registries change\n        this._register(_languageFeaturesService.completionProvider.onDidChange(update));\n        this._register(_languageFeaturesService.codeActionProvider.onDidChange(update));\n        this._register(_languageFeaturesService.codeLensProvider.onDidChange(update));\n        this._register(_languageFeaturesService.definitionProvider.onDidChange(update));\n        this._register(_languageFeaturesService.declarationProvider.onDidChange(update));\n        this._register(_languageFeaturesService.implementationProvider.onDidChange(update));\n        this._register(_languageFeaturesService.typeDefinitionProvider.onDidChange(update));\n        this._register(_languageFeaturesService.hoverProvider.onDidChange(update));\n        this._register(_languageFeaturesService.documentHighlightProvider.onDidChange(update));\n        this._register(_languageFeaturesService.documentSymbolProvider.onDidChange(update));\n        this._register(_languageFeaturesService.referenceProvider.onDidChange(update));\n        this._register(_languageFeaturesService.renameProvider.onDidChange(update));\n        this._register(_languageFeaturesService.documentFormattingEditProvider.onDidChange(update));\n        this._register(_languageFeaturesService.documentRangeFormattingEditProvider.onDidChange(update));\n        this._register(_languageFeaturesService.signatureHelpProvider.onDidChange(update));\n        this._register(_languageFeaturesService.inlayHintsProvider.onDidChange(update));\n        update();\n    }\n    dispose() {\n        super.dispose();\n    }\n    reset() {\n        this._contextKeyService.bufferChangeEvents(() => {\n            this._langId.reset();\n            this._hasCompletionItemProvider.reset();\n            this._hasCodeActionsProvider.reset();\n            this._hasCodeLensProvider.reset();\n            this._hasDefinitionProvider.reset();\n            this._hasDeclarationProvider.reset();\n            this._hasImplementationProvider.reset();\n            this._hasTypeDefinitionProvider.reset();\n            this._hasHoverProvider.reset();\n            this._hasDocumentHighlightProvider.reset();\n            this._hasDocumentSymbolProvider.reset();\n            this._hasReferenceProvider.reset();\n            this._hasRenameProvider.reset();\n            this._hasDocumentFormattingProvider.reset();\n            this._hasDocumentSelectionFormattingProvider.reset();\n            this._hasSignatureHelpProvider.reset();\n            this._isInEmbeddedEditor.reset();\n        });\n    }\n    _update() {\n        const model = this._editor.getModel();\n        if (!model) {\n            this.reset();\n            return;\n        }\n        this._contextKeyService.bufferChangeEvents(() => {\n            this._langId.set(model.getLanguageId());\n            this._hasCompletionItemProvider.set(this._languageFeaturesService.completionProvider.has(model));\n            this._hasCodeActionsProvider.set(this._languageFeaturesService.codeActionProvider.has(model));\n            this._hasCodeLensProvider.set(this._languageFeaturesService.codeLensProvider.has(model));\n            this._hasDefinitionProvider.set(this._languageFeaturesService.definitionProvider.has(model));\n            this._hasDeclarationProvider.set(this._languageFeaturesService.declarationProvider.has(model));\n            this._hasImplementationProvider.set(this._languageFeaturesService.implementationProvider.has(model));\n            this._hasTypeDefinitionProvider.set(this._languageFeaturesService.typeDefinitionProvider.has(model));\n            this._hasHoverProvider.set(this._languageFeaturesService.hoverProvider.has(model));\n            this._hasDocumentHighlightProvider.set(this._languageFeaturesService.documentHighlightProvider.has(model));\n            this._hasDocumentSymbolProvider.set(this._languageFeaturesService.documentSymbolProvider.has(model));\n            this._hasReferenceProvider.set(this._languageFeaturesService.referenceProvider.has(model));\n            this._hasRenameProvider.set(this._languageFeaturesService.renameProvider.has(model));\n            this._hasSignatureHelpProvider.set(this._languageFeaturesService.signatureHelpProvider.has(model));\n            this._hasInlayHintsProvider.set(this._languageFeaturesService.inlayHintsProvider.has(model));\n            this._hasDocumentFormattingProvider.set(this._languageFeaturesService.documentFormattingEditProvider.has(model) || this._languageFeaturesService.documentRangeFormattingEditProvider.has(model));\n            this._hasDocumentSelectionFormattingProvider.set(this._languageFeaturesService.documentRangeFormattingEditProvider.has(model));\n            this._hasMultipleDocumentFormattingProvider.set(this._languageFeaturesService.documentFormattingEditProvider.all(model).length + this._languageFeaturesService.documentRangeFormattingEditProvider.all(model).length > 1);\n            this._hasMultipleDocumentSelectionFormattingProvider.set(this._languageFeaturesService.documentRangeFormattingEditProvider.all(model).length > 1);\n            this._isInEmbeddedEditor.set(model.uri.scheme === Schemas.walkThroughSnippet || model.uri.scheme === Schemas.vscodeChatCodeBlock);\n        });\n    }\n}\nclass CodeEditorWidgetFocusTracker extends Disposable {\n    constructor(domElement, overflowWidgetsDomNode) {\n        super();\n        this._onChange = this._register(new Emitter());\n        this.onChange = this._onChange.event;\n        this._hadFocus = undefined;\n        this._hasDomElementFocus = false;\n        this._domFocusTracker = this._register(dom.trackFocus(domElement));\n        this._overflowWidgetsDomNodeHasFocus = false;\n        this._register(this._domFocusTracker.onDidFocus(() => {\n            this._hasDomElementFocus = true;\n            this._update();\n        }));\n        this._register(this._domFocusTracker.onDidBlur(() => {\n            this._hasDomElementFocus = false;\n            this._update();\n        }));\n        if (overflowWidgetsDomNode) {\n            this._overflowWidgetsDomNode = this._register(dom.trackFocus(overflowWidgetsDomNode));\n            this._register(this._overflowWidgetsDomNode.onDidFocus(() => {\n                this._overflowWidgetsDomNodeHasFocus = true;\n                this._update();\n            }));\n            this._register(this._overflowWidgetsDomNode.onDidBlur(() => {\n                this._overflowWidgetsDomNodeHasFocus = false;\n                this._update();\n            }));\n        }\n    }\n    _update() {\n        const focused = this._hasDomElementFocus || this._overflowWidgetsDomNodeHasFocus;\n        if (this._hadFocus !== focused) {\n            this._hadFocus = focused;\n            this._onChange.fire(undefined);\n        }\n    }\n    hasFocus() {\n        return this._hadFocus ?? false;\n    }\n}\nclass EditorDecorationsCollection {\n    get length() {\n        return this._decorationIds.length;\n    }\n    constructor(_editor, decorations) {\n        this._editor = _editor;\n        this._decorationIds = [];\n        this._isChangingDecorations = false;\n        if (Array.isArray(decorations) && decorations.length > 0) {\n            this.set(decorations);\n        }\n    }\n    onDidChange(listener, thisArgs, disposables) {\n        return this._editor.onDidChangeModelDecorations((e) => {\n            if (this._isChangingDecorations) {\n                return;\n            }\n            listener.call(thisArgs, e);\n        }, disposables);\n    }\n    getRange(index) {\n        if (!this._editor.hasModel()) {\n            return null;\n        }\n        if (index >= this._decorationIds.length) {\n            return null;\n        }\n        return this._editor.getModel().getDecorationRange(this._decorationIds[index]);\n    }\n    getRanges() {\n        if (!this._editor.hasModel()) {\n            return [];\n        }\n        const model = this._editor.getModel();\n        const result = [];\n        for (const decorationId of this._decorationIds) {\n            const range = model.getDecorationRange(decorationId);\n            if (range) {\n                result.push(range);\n            }\n        }\n        return result;\n    }\n    has(decoration) {\n        return this._decorationIds.includes(decoration.id);\n    }\n    clear() {\n        if (this._decorationIds.length === 0) {\n            // nothing to do\n            return;\n        }\n        this.set([]);\n    }\n    set(newDecorations) {\n        try {\n            this._isChangingDecorations = true;\n            this._editor.changeDecorations((accessor) => {\n                this._decorationIds = accessor.deltaDecorations(this._decorationIds, newDecorations);\n            });\n        }\n        finally {\n            this._isChangingDecorations = false;\n        }\n        return this._decorationIds;\n    }\n    append(newDecorations) {\n        let newDecorationIds = [];\n        try {\n            this._isChangingDecorations = true;\n            this._editor.changeDecorations((accessor) => {\n                newDecorationIds = accessor.deltaDecorations([], newDecorations);\n                this._decorationIds = this._decorationIds.concat(newDecorationIds);\n            });\n        }\n        finally {\n            this._isChangingDecorations = false;\n        }\n        return newDecorationIds;\n    }\n}\nconst squigglyStart = encodeURIComponent(`<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 6 3' enable-background='new 0 0 6 3' height='3' width='6'><g fill='`);\nconst squigglyEnd = encodeURIComponent(`'><polygon points='5.5,0 2.5,3 1.1,3 4.1,0'/><polygon points='4,0 6,2 6,0.6 5.4,0'/><polygon points='0,2 1,3 2.4,3 0,0.6'/></g></svg>`);\nfunction getSquigglySVGData(color) {\n    return squigglyStart + encodeURIComponent(color.toString()) + squigglyEnd;\n}\nconst dotdotdotStart = encodeURIComponent(`<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"3\" width=\"12\"><g fill=\"`);\nconst dotdotdotEnd = encodeURIComponent(`\"><circle cx=\"1\" cy=\"1\" r=\"1\"/><circle cx=\"5\" cy=\"1\" r=\"1\"/><circle cx=\"9\" cy=\"1\" r=\"1\"/></g></svg>`);\nfunction getDotDotDotSVGData(color) {\n    return dotdotdotStart + encodeURIComponent(color.toString()) + dotdotdotEnd;\n}\nregisterThemingParticipant((theme, collector) => {\n    const errorForeground = theme.getColor(editorErrorForeground);\n    if (errorForeground) {\n        collector.addRule(`.monaco-editor .${\"squiggly-error\" /* ClassName.EditorErrorDecoration */} { background: url(\"data:image/svg+xml,${getSquigglySVGData(errorForeground)}\") repeat-x bottom left; }`);\n    }\n    const warningForeground = theme.getColor(editorWarningForeground);\n    if (warningForeground) {\n        collector.addRule(`.monaco-editor .${\"squiggly-warning\" /* ClassName.EditorWarningDecoration */} { background: url(\"data:image/svg+xml,${getSquigglySVGData(warningForeground)}\") repeat-x bottom left; }`);\n    }\n    const infoForeground = theme.getColor(editorInfoForeground);\n    if (infoForeground) {\n        collector.addRule(`.monaco-editor .${\"squiggly-info\" /* ClassName.EditorInfoDecoration */} { background: url(\"data:image/svg+xml,${getSquigglySVGData(infoForeground)}\") repeat-x bottom left; }`);\n    }\n    const hintForeground = theme.getColor(editorHintForeground);\n    if (hintForeground) {\n        collector.addRule(`.monaco-editor .${\"squiggly-hint\" /* ClassName.EditorHintDecoration */} { background: url(\"data:image/svg+xml,${getDotDotDotSVGData(hintForeground)}\") no-repeat bottom left; }`);\n    }\n    const unnecessaryForeground = theme.getColor(editorUnnecessaryCodeOpacity);\n    if (unnecessaryForeground) {\n        collector.addRule(`.monaco-editor.showUnused .${\"squiggly-inline-unnecessary\" /* ClassName.EditorUnnecessaryInlineDecoration */} { opacity: ${unnecessaryForeground.rgba.a}; }`);\n    }\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}