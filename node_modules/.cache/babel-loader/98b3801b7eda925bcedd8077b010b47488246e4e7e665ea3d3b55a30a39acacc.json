{"ast":null,"code":"import { mapGetters } from 'vuex';\nexport default {\n  data() {\n    return {\n      showRefreshIndicator: false\n    };\n  },\n  created() {\n    const checkRoute = sessionStorage.getItem('current-route');\n    if (!checkRoute) {\n      sessionStorage.setItem('current-route', 'home');\n    }\n    const checkTheme = localStorage.getItem('theme');\n    if (!checkTheme) {\n      localStorage.setItem('theme', 'dark');\n    }\n    window.addEventListener('scroll', this.handleScroll);\n  },\n  beforeDestroy() {\n    window.removeEventListener('scroll', this.handleScroll);\n  },\n  computed: {\n    ...mapGetters(['currentTheme', 'networkStatus', 'netNotifCon', 'netNotifAn', 'gameOverlay']),\n    themeClass() {\n      return this.currentTheme === 'dark' ? 'dark-theme' : 'light-theme';\n    }\n    // netNotifContainer() {\n    //   return this.netNotifCon;\n    // },\n    // netNotifAnimation() {\n    //   return this.netNotifAn;\n    // }\n  },\n  methods: {\n    handleScroll() {\n      const scrollTop = window.scrollY || document.documentElement.scrollTop;\n\n      // Show the refresh indicator if scrolled to the top\n      if (scrollTop <= 5) {\n        // 5px buffer to trigger refresh slightly before reaching top\n        this.showRefreshIndicator = true;\n        this.refreshContent();\n      } else {\n        this.showRefreshIndicator = false;\n      }\n    },\n    refreshContent() {\n      // Your logic to refresh or load more content\n      console.log('User has scrolled to the top. Triggering refresh...');\n\n      // Simulate a refresh delay\n      setTimeout(() => {\n        this.showRefreshIndicator = false;\n      }, 2000); // Adjust time as needed\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","data","showRefreshIndicator","created","checkRoute","sessionStorage","getItem","setItem","checkTheme","localStorage","window","addEventListener","handleScroll","beforeDestroy","removeEventListener","computed","themeClass","currentTheme","methods","scrollTop","scrollY","document","documentElement","refreshContent","console","log","setTimeout"],"sources":["C:\\Users\\ruzhe\\CODEHUB-PH\\GAMES\\code-master\\src\\App.vue"],"sourcesContent":["<template>\n  <!-- <div class=\"network-status\" v-if=\"netNotifContainer\" :class=\"{ 'net-status-notif': netNotifAnimation }\">\n    <span style=\"color:rgb(41, 219, 13)\" v-if=\"networkStatus === true\">You are online</span>\n    <span style=\"color:rgb(255, 38, 0);\" v-if=\"networkStatus === false\">You are offline</span>\n  </div> -->\n  \n  <div class=\"refresh-indicator\" v-if=\"showRefreshIndicator\">\n    <div class=\"spinner\"></div>\n    <span>Refreshing...</span>\n  </div>\n\n  <div class=\"main-view\" :class=\"themeClass\">\n    <router-view />\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\n\nexport default {\n  data() {\n    return {\n      showRefreshIndicator: false,\n    };\n  },\n  created() {\n    const checkRoute = sessionStorage.getItem('current-route');\n    if (!checkRoute) {\n      sessionStorage.setItem('current-route', 'home');\n    }\n    const checkTheme = localStorage.getItem('theme');\n    if (!checkTheme) {\n      localStorage.setItem('theme', 'dark');\n    }\n    window.addEventListener('scroll', this.handleScroll);\n  },\n  beforeDestroy() {\n    window.removeEventListener('scroll', this.handleScroll);\n  },\n  computed: {\n    ...mapGetters(['currentTheme', 'networkStatus', 'netNotifCon', 'netNotifAn', 'gameOverlay']),\n    themeClass() {\n      return this.currentTheme === 'dark' ? 'dark-theme' : 'light-theme';\n    },\n    // netNotifContainer() {\n    //   return this.netNotifCon;\n    // },\n    // netNotifAnimation() {\n    //   return this.netNotifAn;\n    // }\n  },\n  methods: {\n    handleScroll() {\n      const scrollTop = window.scrollY || document.documentElement.scrollTop;\n\n      // Show the refresh indicator if scrolled to the top\n      if (scrollTop <= 5) { // 5px buffer to trigger refresh slightly before reaching top\n        this.showRefreshIndicator = true;\n        this.refreshContent();\n      } else {\n        this.showRefreshIndicator = false;\n      }\n    },\n    refreshContent() {\n      // Your logic to refresh or load more content\n      console.log('User has scrolled to the top. Triggering refresh...');\n\n      // Simulate a refresh delay\n      setTimeout(() => {\n        this.showRefreshIndicator = false;\n      }, 2000); // Adjust time as needed\n    },\n  },\n}\n</script>\n\n<style>\n@import \"./assets/style/GlobalStyle.css\";\n@import \"../node_modules/bootstrap-icons/font/bootstrap-icons.css\";\n\n.network-status {\n  position: absolute;\n  width: calc(100% - 10px);\n  background-color: rgb(250, 250, 250);\n  padding: 5px;\n  display: flex;\n  justify-content: center;\n  transform: translateY(-30px);\n  transition: transform 0.5s ease-in-out;\n}\n\n.network-status.net-status-notif {\n  transform: translateY(0);\n}\n\n.network-status span {\n  font-weight: bold;\n}\n\n.refresh-indicator {\n  position: fixed;\n  top: 0;\n  left: 50%;\n  transform: translateX(-50%);\n  background-color: rgba(255, 255, 255, 0.9);\n  border-bottom: 1px solid #ddd;\n  padding: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n  transition: opacity 0.3s ease-in-out;\n}\n\n.refresh-indicator .spinner {\n  border: 4px solid rgba(0, 0, 0, 0.1);\n  border-left-color: #3498db;\n  border-radius: 50%;\n  width: 20px;\n  height: 20px;\n  margin-right: 10px;\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n\n.main-view {\n  padding-top: 50px; /* Ensure content is not hidden behind the indicator */\n}\n</style>\n"],"mappings":"AAiBA,SAASA,UAAS,QAAS,MAAM;AAEjC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,oBAAoB,EAAE;IACxB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,MAAMC,UAAS,GAAIC,cAAc,CAACC,OAAO,CAAC,eAAe,CAAC;IAC1D,IAAI,CAACF,UAAU,EAAE;MACfC,cAAc,CAACE,OAAO,CAAC,eAAe,EAAE,MAAM,CAAC;IACjD;IACA,MAAMC,UAAS,GAAIC,YAAY,CAACH,OAAO,CAAC,OAAO,CAAC;IAChD,IAAI,CAACE,UAAU,EAAE;MACfC,YAAY,CAACF,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC;IACvC;IACAG,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACC,YAAY,CAAC;EACtD,CAAC;EACDC,aAAaA,CAAA,EAAG;IACdH,MAAM,CAACI,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAACF,YAAY,CAAC;EACzD,CAAC;EACDG,QAAQ,EAAE;IACR,GAAGf,UAAU,CAAC,CAAC,cAAc,EAAE,eAAe,EAAE,aAAa,EAAE,YAAY,EAAE,aAAa,CAAC,CAAC;IAC5FgB,UAAUA,CAAA,EAAG;MACX,OAAO,IAAI,CAACC,YAAW,KAAM,MAAK,GAAI,YAAW,GAAI,aAAa;IACpE;IACA;IACA;IACA;IACA;IACA;IACA;EACF,CAAC;EACDC,OAAO,EAAE;IACPN,YAAYA,CAAA,EAAG;MACb,MAAMO,SAAQ,GAAIT,MAAM,CAACU,OAAM,IAAKC,QAAQ,CAACC,eAAe,CAACH,SAAS;;MAEtE;MACA,IAAIA,SAAQ,IAAK,CAAC,EAAE;QAAE;QACpB,IAAI,CAACjB,oBAAmB,GAAI,IAAI;QAChC,IAAI,CAACqB,cAAc,CAAC,CAAC;MACvB,OAAO;QACL,IAAI,CAACrB,oBAAmB,GAAI,KAAK;MACnC;IACF,CAAC;IACDqB,cAAcA,CAAA,EAAG;MACf;MACAC,OAAO,CAACC,GAAG,CAAC,qDAAqD,CAAC;;MAElE;MACAC,UAAU,CAAC,MAAM;QACf,IAAI,CAACxB,oBAAmB,GAAI,KAAK;MACnC,CAAC,EAAE,IAAI,CAAC,EAAE;IACZ;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}