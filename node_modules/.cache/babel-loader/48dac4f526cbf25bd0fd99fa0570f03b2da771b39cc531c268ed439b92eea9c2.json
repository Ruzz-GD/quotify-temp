{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  style: {\n    \"color\": \"rgb(41, 219, 13)\"\n  }\n};\nconst _hoisted_2 = {\n  key: 1,\n  style: {\n    \"color\": \"rgb(255, 38, 0)\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(\"div\", null, [$options.netNotifContainer ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: _normalizeClass([\"network-status\", {\n      'net-status-notif': $options.netNotifAnimation\n    }])\n  }, [_ctx.networkStatus === true ? (_openBlock(), _createElementBlock(\"span\", _hoisted_1, \"You are online\")) : _createCommentVNode(\"\", true), _ctx.networkStatus === false ? (_openBlock(), _createElementBlock(\"span\", _hoisted_2, \"You are offline\")) : _createCommentVNode(\"\", true)], 2)) : _createCommentVNode(\"\", true), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"main-view\", $options.themeClass])\n  }, [_createVNode(_component_router_view)], 2)]);\n}","map":{"version":3,"names":["key","style","_createElementBlock","$options","netNotifContainer","class","_normalizeClass","netNotifAnimation","_ctx","networkStatus","_hoisted_1","_createCommentVNode","_hoisted_2","_createElementVNode","themeClass","_createVNode","_component_router_view"],"sources":["C:\\Users\\ruzhe\\CODEHUB-PH\\GAMES\\code-master\\src\\App.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- Existing template content -->\n    <div class=\"network-status\" v-if=\"netNotifContainer\" :class=\"{ 'net-status-notif': netNotifAnimation }\">\n      <span style=\"color:rgb(41, 219, 13)\" v-if=\"networkStatus === true\">You are online</span>\n      <span style=\"color:rgb(255, 38, 0);\" v-if=\"networkStatus === false\">You are offline</span>\n    </div>\n    <div class=\"main-view\" :class=\"themeClass\">\n      <router-view />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\nimport { NativeAudio } from '@capacitor-community/native-audio';\nimport { App } from '@capacitor/app';\n\nexport default {\n  created() {\n    const checkRoute = sessionStorage.getItem('current-route');\n    if (!checkRoute) {\n      sessionStorage.setItem('current-route', 'home');\n    }\n    const checkTheme = localStorage.getItem('theme');\n    if (!checkTheme) {\n      localStorage.setItem('theme', 'dark');\n    }\n  },\n  computed: {\n    ...mapGetters(['currentTheme', 'networkStatus', 'netNotifCon', 'netNotifAn']),\n    themeClass() {\n      return this.currentTheme === 'dark' ? 'dark-theme' : 'light-theme';\n    },\n    netNotifContainer() {\n      return this.netNotifCon;\n    },\n    netNotifAnimation() {\n      return this.netNotifAn;\n    }\n  },\n  methods: {\n    async preloadAudio() {\n      try {\n        await NativeAudio.preload({\n          assetId: 'backgroundMusic',\n          assetPath: 'audio/fatrat.mp3',\n          audioChannelNum: 1,\n          isUrl: false\n        });\n      } catch (error) {\n        console.error('Error preloading audio:', error);\n      }\n    },\n    async playAudio() {\n      try {\n        await this.preloadAudio(); \n        await NativeAudio.play({\n          assetId: 'backgroundMusic'\n        });\n        await NativeAudio.loop({\n          assetId: 'backgroundMusic'\n        });\n        localStorage.setItem('musicPlaying', 'true');\n      } catch (error) {\n        console.error('Error playing audio:', error);\n      }\n    },\n    async stopAudio() {\n      try {\n        await NativeAudio.stop({\n          assetId: 'backgroundMusic'\n        });\n        localStorage.setItem('musicPlaying', 'false');\n      } catch (error) {\n        console.error('Error stopping audio:', error);\n      }\n    }\n  },\n  mounted() {\n    if (localStorage.getItem('musicPlaying') === 'true') {\n      this.playAudio();\n    }\n\n    App.addListener('appStateChange', (state) => {\n      if (state.isActive) {\n        if (localStorage.getItem('musicPlaying') === 'true') {\n          this.playAudio(); \n        }\n      } else {\n        this.stopAudio(); \n      }\n    });\n  }\n}\n</script>\n\n<style>\n@import \"./assets/style/GlobalStyle.css\";\n@import \"../node_modules/bootstrap-icons/font/bootstrap-icons.css\";\n\n.network-status {\n  position: absolute;\n  width: calc(100% - 10px);\n  background-color: rgb(250, 250, 250);\n  padding: 5px;\n  display: flex;\n  justify-content: center;\n  transform: translateY(-30px);\n  transition: transform 0.5s ease-in-out;\n  z-index: 9999;\n}\n\n.network-status.net-status-notif {\n  transform: translateY(0);\n}\n\n.network-status span {\n  font-weight: bold;\n}\n</style>\n"],"mappings":";;EAAAA,GAAA;EAIYC,KAA8B,EAA9B;IAAA;EAAA;;;EAJZD,GAAA;EAKYC,KAA8B,EAA9B;IAAA;EAAA;;;;uBAJVC,mBAAA,CASM,cAP8BC,QAAA,CAAAC,iBAAiB,I,cAAnDF,mBAAA,CAGM;IANVF,GAAA;IAGSK,KAAK,EAHdC,eAAA,EAGe,gBAAgB;MAAA,oBAAwDH,QAAA,CAAAI;IAAiB;MACvDC,IAAA,CAAAC,aAAa,a,cAAxDP,mBAAA,CAAwF,QAAxFQ,UAAwF,EAArB,gBAAc,KAJvFC,mBAAA,YAKiDH,IAAA,CAAAC,aAAa,c,cAAxDP,mBAAA,CAA0F,QAA1FU,UAA0F,EAAtB,iBAAe,KALzFD,mBAAA,W,QAAAA,mBAAA,YAOIE,mBAAA,CAEM;IAFDR,KAAK,EAPdC,eAAA,EAOe,WAAW,EAASH,QAAA,CAAAW,UAAU;MACvCC,YAAA,CAAeC,sBAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}