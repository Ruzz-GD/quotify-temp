{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeClass as _normalizeClass, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"refresh-indicator\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" <div class=\\\"network-status\\\" v-if=\\\"netNotifContainer\\\" :class=\\\"{ 'net-status-notif': netNotifAnimation }\\\">\\n    <span style=\\\"color:rgb(41, 219, 13)\\\" v-if=\\\"networkStatus === true\\\">You are online</span>\\n    <span style=\\\"color:rgb(255, 38, 0);\\\" v-if=\\\"networkStatus === false\\\">You are offline</span>\\n  </div> \"), $data.showRefreshIndicator ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, _cache[0] || (_cache[0] = [_createElementVNode(\"div\", {\n    class: \"spinner\"\n  }, null, -1 /* HOISTED */), _createElementVNode(\"span\", null, \"Refreshing...\", -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"main-view\", $options.themeClass])\n  }, [_createVNode(_component_router_view)], 2 /* CLASS */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["key","class","_createElementBlock","_Fragment","_createCommentVNode","$data","showRefreshIndicator","_hoisted_1","_cache","_createElementVNode","_normalizeClass","$options","themeClass","_createVNode","_component_router_view"],"sources":["C:\\Users\\ruzhe\\CODEHUB-PH\\GAMES\\code-master\\src\\App.vue"],"sourcesContent":["<template>\n  <!-- <div class=\"network-status\" v-if=\"netNotifContainer\" :class=\"{ 'net-status-notif': netNotifAnimation }\">\n    <span style=\"color:rgb(41, 219, 13)\" v-if=\"networkStatus === true\">You are online</span>\n    <span style=\"color:rgb(255, 38, 0);\" v-if=\"networkStatus === false\">You are offline</span>\n  </div> -->\n  \n  <div class=\"refresh-indicator\" v-if=\"showRefreshIndicator\">\n    <div class=\"spinner\"></div>\n    <span>Refreshing...</span>\n  </div>\n\n  <div class=\"main-view\" :class=\"themeClass\">\n    <router-view />\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\n\nexport default {\n  data() {\n    return {\n      showRefreshIndicator: false,\n    };\n  },\n  created() {\n    const checkRoute = sessionStorage.getItem('current-route');\n    if (!checkRoute) {\n      sessionStorage.setItem('current-route', 'home');\n    }\n    const checkTheme = localStorage.getItem('theme');\n    if (!checkTheme) {\n      localStorage.setItem('theme', 'dark');\n    }\n    window.addEventListener('scroll', this.handleScroll);\n  },\n  beforeUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  },\n  computed: {\n    ...mapGetters(['currentTheme', 'networkStatus', 'netNotifCon', 'netNotifAn', 'gameOverlay']),\n    themeClass() {\n      return this.currentTheme === 'dark' ? 'dark-theme' : 'light-theme';\n    },\n    // netNotifContainer() {\n    //   return this.netNotifCon;\n    // },\n    // netNotifAnimation() {\n    //   return this.netNotifAn;\n    // }\n  },\n  methods: {\n    handleScroll() {\n      const scrollTop = window.scrollY || document.documentElement.scrollTop;\n\n      // Show the refresh indicator if scrolled to the top\n      if (scrollTop <= 5) { // 5px buffer to trigger refresh slightly before reaching top\n        this.showRefreshIndicator = true;\n        this.refreshContent();\n      } else {\n        this.showRefreshIndicator = false;\n      }\n    },\n    refreshContent() {\n      // Your logic to refresh or load more content\n      console.log('User has scrolled to the top. Triggering refresh...');\n\n      // Simulate a refresh delay\n      setTimeout(() => {\n        this.showRefreshIndicator = false;\n      }, 2000); // Adjust time as needed\n    },\n  },\n}\n</script>\n\n<style>\n@import \"./assets/style/GlobalStyle.css\";\n@import \"../node_modules/bootstrap-icons/font/bootstrap-icons.css\";\n\n.network-status {\n  position: absolute;\n  width: calc(100% - 10px);\n  background-color: rgb(250, 250, 250);\n  padding: 5px;\n  display: flex;\n  justify-content: center;\n  transform: translateY(-30px);\n  transition: transform 0.5s ease-in-out;\n}\n\n.network-status.net-status-notif {\n  transform: translateY(0);\n}\n\n.network-status span {\n  font-weight: bold;\n}\n\n.refresh-indicator {\n  position: fixed;\n  top: 0;\n  left: 50%;\n  transform: translateX(-50%);\n  background-color: rgba(255, 255, 255, 0.9);\n  border-bottom: 1px solid #ddd;\n  padding: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n  transition: opacity 0.3s ease-in-out;\n}\n\n.refresh-indicator .spinner {\n  border: 4px solid rgba(0, 0, 0, 0.1);\n  border-left-color: #3498db;\n  border-radius: 50%;\n  width: 20px;\n  height: 20px;\n  margin-right: 10px;\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n\n.main-view {\n  padding-top: 50px; /* Ensure content is not hidden behind the indicator */\n}\n</style>\n"],"mappings":";;EAAAA,GAAA;EAMOC,KAAK,EAAC;;;;uBANbC,mBAAA,CAAAC,SAAA,SACEC,mBAAA,oUAGU,EAE2BC,KAAA,CAAAC,oBAAoB,I,cAAzDJ,mBAAA,CAGM,OAHNK,UAGM,EAAAC,MAAA,QAAAA,MAAA,OAFJC,mBAAA,CAA2B;IAAtBR,KAAK,EAAC;EAAS,4BACpBQ,mBAAA,CAA0B,cAApB,eAAa,oB,MARvBL,mBAAA,gBAWEK,mBAAA,CAEM;IAFDR,KAAK,EAXZS,eAAA,EAWa,WAAW,EAASC,QAAA,CAAAC,UAAU;MACvCC,YAAA,CAAeC,sBAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}