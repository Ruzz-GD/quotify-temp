{"ast":null,"code":"var _QuickPickItemElementRenderer, _QuickPickSeparatorElementRenderer;\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar QuickPickItemElementRenderer_1;\nimport * as dom from '../../../base/browser/dom.js';\nimport { Emitter, Event, EventBufferer } from '../../../base/common/event.js';\nimport { localize } from '../../../nls.js';\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { WorkbenchObjectTree } from '../../list/browser/listService.js';\nimport { IThemeService } from '../../theme/common/themeService.js';\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent.js';\nimport { OS } from '../../../base/common/platform.js';\nimport { memoize } from '../../../base/common/decorators.js';\nimport { IconLabel } from '../../../base/browser/ui/iconLabel/iconLabel.js';\nimport { KeybindingLabel } from '../../../base/browser/ui/keybindingLabel/keybindingLabel.js';\nimport { ActionBar } from '../../../base/browser/ui/actionbar/actionbar.js';\nimport { isDark } from '../../theme/common/theme.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { quickInputButtonToAction } from './quickInputUtils.js';\nimport { Lazy } from '../../../base/common/lazy.js';\nimport { getCodiconAriaLabel, matchesFuzzyIconAware, parseLabelWithIcons } from '../../../base/common/iconLabels.js';\nimport { compareAnything } from '../../../base/common/comparers.js';\nimport { ltrim } from '../../../base/common/strings.js';\nimport { RenderIndentGuides } from '../../../base/browser/ui/tree/abstractTree.js';\nimport { ThrottledDelayer } from '../../../base/common/async.js';\nimport { isCancellationError } from '../../../base/common/errors.js';\nimport { QuickPickFocus } from '../common/quickInput.js';\nimport { IAccessibilityService } from '../../accessibility/common/accessibility.js';\nimport { observableValue, observableValueOpts } from '../../../base/common/observable.js';\nimport { equals } from '../../../base/common/arrays.js';\nconst $ = dom.$;\nclass BaseQuickPickItemElement {\n  constructor(index, hasCheckbox, mainItem) {\n    this.index = index;\n    this.hasCheckbox = hasCheckbox;\n    this._hidden = false;\n    this._init = new Lazy(() => {\n      const saneLabel = mainItem.label ?? '';\n      const saneSortLabel = parseLabelWithIcons(saneLabel).text.trim();\n      const saneAriaLabel = mainItem.ariaLabel || [saneLabel, this.saneDescription, this.saneDetail].map(s => getCodiconAriaLabel(s)).filter(s => !!s).join(', ');\n      return {\n        saneLabel,\n        saneSortLabel,\n        saneAriaLabel\n      };\n    });\n    this._saneDescription = mainItem.description;\n    this._saneTooltip = mainItem.tooltip;\n  }\n  // #region Lazy Getters\n  get saneLabel() {\n    return this._init.value.saneLabel;\n  }\n  get saneSortLabel() {\n    return this._init.value.saneSortLabel;\n  }\n  get saneAriaLabel() {\n    return this._init.value.saneAriaLabel;\n  }\n  get element() {\n    return this._element;\n  }\n  set element(value) {\n    this._element = value;\n  }\n  get hidden() {\n    return this._hidden;\n  }\n  set hidden(value) {\n    this._hidden = value;\n  }\n  get saneDescription() {\n    return this._saneDescription;\n  }\n  set saneDescription(value) {\n    this._saneDescription = value;\n  }\n  get saneDetail() {\n    return this._saneDetail;\n  }\n  set saneDetail(value) {\n    this._saneDetail = value;\n  }\n  get saneTooltip() {\n    return this._saneTooltip;\n  }\n  set saneTooltip(value) {\n    this._saneTooltip = value;\n  }\n  get labelHighlights() {\n    return this._labelHighlights;\n  }\n  set labelHighlights(value) {\n    this._labelHighlights = value;\n  }\n  get descriptionHighlights() {\n    return this._descriptionHighlights;\n  }\n  set descriptionHighlights(value) {\n    this._descriptionHighlights = value;\n  }\n  get detailHighlights() {\n    return this._detailHighlights;\n  }\n  set detailHighlights(value) {\n    this._detailHighlights = value;\n  }\n}\nclass QuickPickItemElement extends BaseQuickPickItemElement {\n  constructor(index, hasCheckbox, fireButtonTriggered, _onChecked, item, _separator) {\n    super(index, hasCheckbox, item);\n    this.fireButtonTriggered = fireButtonTriggered;\n    this._onChecked = _onChecked;\n    this.item = item;\n    this._separator = _separator;\n    this._checked = false;\n    this.onChecked = hasCheckbox ? Event.map(Event.filter(this._onChecked.event, e => e.element === this), e => e.checked) : Event.None;\n    this._saneDetail = item.detail;\n    this._labelHighlights = item.highlights?.label;\n    this._descriptionHighlights = item.highlights?.description;\n    this._detailHighlights = item.highlights?.detail;\n  }\n  get separator() {\n    return this._separator;\n  }\n  set separator(value) {\n    this._separator = value;\n  }\n  get checked() {\n    return this._checked;\n  }\n  set checked(value) {\n    if (value !== this._checked) {\n      this._checked = value;\n      this._onChecked.fire({\n        element: this,\n        checked: value\n      });\n    }\n  }\n  get checkboxDisabled() {\n    return !!this.item.disabled;\n  }\n}\nvar QuickPickSeparatorFocusReason;\n(function (QuickPickSeparatorFocusReason) {\n  /**\n   * No item is hovered or active\n   */\n  QuickPickSeparatorFocusReason[QuickPickSeparatorFocusReason[\"NONE\"] = 0] = \"NONE\";\n  /**\n   * Some item within this section is hovered\n   */\n  QuickPickSeparatorFocusReason[QuickPickSeparatorFocusReason[\"MOUSE_HOVER\"] = 1] = \"MOUSE_HOVER\";\n  /**\n   * Some item within this section is active\n   */\n  QuickPickSeparatorFocusReason[QuickPickSeparatorFocusReason[\"ACTIVE_ITEM\"] = 2] = \"ACTIVE_ITEM\";\n})(QuickPickSeparatorFocusReason || (QuickPickSeparatorFocusReason = {}));\nclass QuickPickSeparatorElement extends BaseQuickPickItemElement {\n  constructor(index, fireSeparatorButtonTriggered, separator) {\n    super(index, false, separator);\n    this.fireSeparatorButtonTriggered = fireSeparatorButtonTriggered;\n    this.separator = separator;\n    this.children = new Array();\n    /**\n     * If this item is >0, it means that there is some item in the list that is either:\n     * * hovered over\n     * * active\n     */\n    this.focusInsideSeparator = QuickPickSeparatorFocusReason.NONE;\n  }\n}\nclass QuickInputItemDelegate {\n  getHeight(element) {\n    if (element instanceof QuickPickSeparatorElement) {\n      return 30;\n    }\n    return element.saneDetail ? 44 : 22;\n  }\n  getTemplateId(element) {\n    if (element instanceof QuickPickItemElement) {\n      return QuickPickItemElementRenderer.ID;\n    } else {\n      return QuickPickSeparatorElementRenderer.ID;\n    }\n  }\n}\nclass QuickInputAccessibilityProvider {\n  getWidgetAriaLabel() {\n    return localize('quickInput', \"Quick Input\");\n  }\n  getAriaLabel(element) {\n    return element.separator?.label ? `${element.saneAriaLabel}, ${element.separator.label}` : element.saneAriaLabel;\n  }\n  getWidgetRole() {\n    return 'listbox';\n  }\n  getRole(element) {\n    return element.hasCheckbox ? 'checkbox' : 'option';\n  }\n  isChecked(element) {\n    if (!element.hasCheckbox || !(element instanceof QuickPickItemElement)) {\n      return undefined;\n    }\n    return {\n      get value() {\n        return element.checked;\n      },\n      onDidChange: e => element.onChecked(() => e())\n    };\n  }\n}\nclass BaseQuickInputListRenderer {\n  constructor(hoverDelegate) {\n    this.hoverDelegate = hoverDelegate;\n  }\n  // TODO: only do the common stuff here and have a subclass handle their specific stuff\n  renderTemplate(container) {\n    const data = Object.create(null);\n    data.toDisposeElement = new DisposableStore();\n    data.toDisposeTemplate = new DisposableStore();\n    data.entry = dom.append(container, $('.quick-input-list-entry'));\n    // Checkbox\n    const label = dom.append(data.entry, $('label.quick-input-list-label'));\n    data.toDisposeTemplate.add(dom.addStandardDisposableListener(label, dom.EventType.CLICK, e => {\n      if (!data.checkbox.offsetParent) {\n        // If checkbox not visible:\n        e.preventDefault(); // Prevent toggle of checkbox when it is immediately shown afterwards. #91740\n      }\n    }));\n    data.checkbox = dom.append(label, $('input.quick-input-list-checkbox'));\n    data.checkbox.type = 'checkbox';\n    // Rows\n    const rows = dom.append(label, $('.quick-input-list-rows'));\n    const row1 = dom.append(rows, $('.quick-input-list-row'));\n    const row2 = dom.append(rows, $('.quick-input-list-row'));\n    // Label\n    data.label = new IconLabel(row1, {\n      supportHighlights: true,\n      supportDescriptionHighlights: true,\n      supportIcons: true,\n      hoverDelegate: this.hoverDelegate\n    });\n    data.toDisposeTemplate.add(data.label);\n    data.icon = dom.prepend(data.label.element, $('.quick-input-list-icon'));\n    // Keybinding\n    const keybindingContainer = dom.append(row1, $('.quick-input-list-entry-keybinding'));\n    data.keybinding = new KeybindingLabel(keybindingContainer, OS);\n    data.toDisposeTemplate.add(data.keybinding);\n    // Detail\n    const detailContainer = dom.append(row2, $('.quick-input-list-label-meta'));\n    data.detail = new IconLabel(detailContainer, {\n      supportHighlights: true,\n      supportIcons: true,\n      hoverDelegate: this.hoverDelegate\n    });\n    data.toDisposeTemplate.add(data.detail);\n    // Separator\n    data.separator = dom.append(data.entry, $('.quick-input-list-separator'));\n    // Actions\n    data.actionBar = new ActionBar(data.entry, this.hoverDelegate ? {\n      hoverDelegate: this.hoverDelegate\n    } : undefined);\n    data.actionBar.domNode.classList.add('quick-input-list-entry-action-bar');\n    data.toDisposeTemplate.add(data.actionBar);\n    return data;\n  }\n  disposeTemplate(data) {\n    data.toDisposeElement.dispose();\n    data.toDisposeTemplate.dispose();\n  }\n  disposeElement(_element, _index, data) {\n    data.toDisposeElement.clear();\n    data.actionBar.clear();\n  }\n}\nlet QuickPickItemElementRenderer = (_QuickPickItemElementRenderer = class QuickPickItemElementRenderer extends BaseQuickInputListRenderer {\n  constructor(hoverDelegate, themeService) {\n    super(hoverDelegate);\n    this.themeService = themeService;\n    // Follow what we do in the separator renderer\n    this._itemsWithSeparatorsFrequency = new Map();\n  }\n  get templateId() {\n    return QuickPickItemElementRenderer_1.ID;\n  }\n  renderTemplate(container) {\n    const data = super.renderTemplate(container);\n    data.toDisposeTemplate.add(dom.addStandardDisposableListener(data.checkbox, dom.EventType.CHANGE, e => {\n      data.element.checked = data.checkbox.checked;\n    }));\n    return data;\n  }\n  renderElement(node, index, data) {\n    const element = node.element;\n    data.element = element;\n    element.element = data.entry ?? undefined;\n    const mainItem = element.item;\n    data.checkbox.checked = element.checked;\n    data.toDisposeElement.add(element.onChecked(checked => data.checkbox.checked = checked));\n    data.checkbox.disabled = element.checkboxDisabled;\n    const {\n      labelHighlights,\n      descriptionHighlights,\n      detailHighlights\n    } = element;\n    // Icon\n    if (mainItem.iconPath) {\n      const icon = isDark(this.themeService.getColorTheme().type) ? mainItem.iconPath.dark : mainItem.iconPath.light ?? mainItem.iconPath.dark;\n      const iconUrl = URI.revive(icon);\n      data.icon.className = 'quick-input-list-icon';\n      data.icon.style.backgroundImage = dom.asCSSUrl(iconUrl);\n    } else {\n      data.icon.style.backgroundImage = '';\n      data.icon.className = mainItem.iconClass ? `quick-input-list-icon ${mainItem.iconClass}` : '';\n    }\n    // Label\n    let descriptionTitle;\n    // if we have a tooltip, that will be the hover,\n    // with the saneDescription as fallback if it\n    // is defined\n    if (!element.saneTooltip && element.saneDescription) {\n      descriptionTitle = {\n        markdown: {\n          value: element.saneDescription,\n          supportThemeIcons: true\n        },\n        markdownNotSupportedFallback: element.saneDescription\n      };\n    }\n    const options = {\n      matches: labelHighlights || [],\n      // If we have a tooltip, we want that to be shown and not any other hover\n      descriptionTitle,\n      descriptionMatches: descriptionHighlights || [],\n      labelEscapeNewLines: true\n    };\n    options.extraClasses = mainItem.iconClasses;\n    options.italic = mainItem.italic;\n    options.strikethrough = mainItem.strikethrough;\n    data.entry.classList.remove('quick-input-list-separator-as-item');\n    data.label.setLabel(element.saneLabel, element.saneDescription, options);\n    // Keybinding\n    data.keybinding.set(mainItem.keybinding);\n    // Detail\n    if (element.saneDetail) {\n      let title;\n      // If we have a tooltip, we want that to be shown and not any other hover\n      if (!element.saneTooltip) {\n        title = {\n          markdown: {\n            value: element.saneDetail,\n            supportThemeIcons: true\n          },\n          markdownNotSupportedFallback: element.saneDetail\n        };\n      }\n      data.detail.element.style.display = '';\n      data.detail.setLabel(element.saneDetail, undefined, {\n        matches: detailHighlights,\n        title,\n        labelEscapeNewLines: true\n      });\n    } else {\n      data.detail.element.style.display = 'none';\n    }\n    // Separator\n    if (element.separator?.label) {\n      data.separator.textContent = element.separator.label;\n      data.separator.style.display = '';\n      this.addItemWithSeparator(element);\n    } else {\n      data.separator.style.display = 'none';\n    }\n    data.entry.classList.toggle('quick-input-list-separator-border', !!element.separator);\n    // Actions\n    const buttons = mainItem.buttons;\n    if (buttons && buttons.length) {\n      data.actionBar.push(buttons.map((button, index) => quickInputButtonToAction(button, `id-${index}`, () => element.fireButtonTriggered({\n        button,\n        item: element.item\n      }))), {\n        icon: true,\n        label: false\n      });\n      data.entry.classList.add('has-actions');\n    } else {\n      data.entry.classList.remove('has-actions');\n    }\n  }\n  disposeElement(element, _index, data) {\n    this.removeItemWithSeparator(element.element);\n    super.disposeElement(element, _index, data);\n  }\n  isItemWithSeparatorVisible(item) {\n    return this._itemsWithSeparatorsFrequency.has(item);\n  }\n  addItemWithSeparator(item) {\n    this._itemsWithSeparatorsFrequency.set(item, (this._itemsWithSeparatorsFrequency.get(item) || 0) + 1);\n  }\n  removeItemWithSeparator(item) {\n    const frequency = this._itemsWithSeparatorsFrequency.get(item) || 0;\n    if (frequency > 1) {\n      this._itemsWithSeparatorsFrequency.set(item, frequency - 1);\n    } else {\n      this._itemsWithSeparatorsFrequency.delete(item);\n    }\n  }\n}, QuickPickItemElementRenderer_1 = _QuickPickItemElementRenderer, _QuickPickItemElementRenderer.ID = 'quickpickitem', _QuickPickItemElementRenderer);\nQuickPickItemElementRenderer = QuickPickItemElementRenderer_1 = __decorate([__param(1, IThemeService)], QuickPickItemElementRenderer);\nclass QuickPickSeparatorElementRenderer extends BaseQuickInputListRenderer {\n  constructor() {\n    super(...arguments);\n    // This is a frequency map because sticky scroll re-uses the same renderer to render a second\n    // instance of the same separator.\n    this._visibleSeparatorsFrequency = new Map();\n  }\n  get templateId() {\n    return QuickPickSeparatorElementRenderer.ID;\n  }\n  get visibleSeparators() {\n    return [...this._visibleSeparatorsFrequency.keys()];\n  }\n  isSeparatorVisible(separator) {\n    return this._visibleSeparatorsFrequency.has(separator);\n  }\n  renderElement(node, index, data) {\n    const element = node.element;\n    data.element = element;\n    element.element = data.entry ?? undefined;\n    element.element.classList.toggle('focus-inside', !!element.focusInsideSeparator);\n    const mainItem = element.separator;\n    const {\n      labelHighlights,\n      descriptionHighlights,\n      detailHighlights\n    } = element;\n    // Icon\n    data.icon.style.backgroundImage = '';\n    data.icon.className = '';\n    // Label\n    let descriptionTitle;\n    // if we have a tooltip, that will be the hover,\n    // with the saneDescription as fallback if it\n    // is defined\n    if (!element.saneTooltip && element.saneDescription) {\n      descriptionTitle = {\n        markdown: {\n          value: element.saneDescription,\n          supportThemeIcons: true\n        },\n        markdownNotSupportedFallback: element.saneDescription\n      };\n    }\n    const options = {\n      matches: labelHighlights || [],\n      // If we have a tooltip, we want that to be shown and not any other hover\n      descriptionTitle,\n      descriptionMatches: descriptionHighlights || [],\n      labelEscapeNewLines: true\n    };\n    data.entry.classList.add('quick-input-list-separator-as-item');\n    data.label.setLabel(element.saneLabel, element.saneDescription, options);\n    // Detail\n    if (element.saneDetail) {\n      let title;\n      // If we have a tooltip, we want that to be shown and not any other hover\n      if (!element.saneTooltip) {\n        title = {\n          markdown: {\n            value: element.saneDetail,\n            supportThemeIcons: true\n          },\n          markdownNotSupportedFallback: element.saneDetail\n        };\n      }\n      data.detail.element.style.display = '';\n      data.detail.setLabel(element.saneDetail, undefined, {\n        matches: detailHighlights,\n        title,\n        labelEscapeNewLines: true\n      });\n    } else {\n      data.detail.element.style.display = 'none';\n    }\n    // Separator\n    data.separator.style.display = 'none';\n    data.entry.classList.add('quick-input-list-separator-border');\n    // Actions\n    const buttons = mainItem.buttons;\n    if (buttons && buttons.length) {\n      data.actionBar.push(buttons.map((button, index) => quickInputButtonToAction(button, `id-${index}`, () => element.fireSeparatorButtonTriggered({\n        button,\n        separator: element.separator\n      }))), {\n        icon: true,\n        label: false\n      });\n      data.entry.classList.add('has-actions');\n    } else {\n      data.entry.classList.remove('has-actions');\n    }\n    this.addSeparator(element);\n  }\n  disposeElement(element, _index, data) {\n    this.removeSeparator(element.element);\n    if (!this.isSeparatorVisible(element.element)) {\n      element.element.element?.classList.remove('focus-inside');\n    }\n    super.disposeElement(element, _index, data);\n  }\n  addSeparator(separator) {\n    this._visibleSeparatorsFrequency.set(separator, (this._visibleSeparatorsFrequency.get(separator) || 0) + 1);\n  }\n  removeSeparator(separator) {\n    const frequency = this._visibleSeparatorsFrequency.get(separator) || 0;\n    if (frequency > 1) {\n      this._visibleSeparatorsFrequency.set(separator, frequency - 1);\n    } else {\n      this._visibleSeparatorsFrequency.delete(separator);\n    }\n  }\n}\n_QuickPickSeparatorElementRenderer = QuickPickSeparatorElementRenderer;\n_QuickPickSeparatorElementRenderer.ID = 'quickpickseparator';\nlet QuickInputTree = class QuickInputTree extends Disposable {\n  constructor(parent, hoverDelegate, linkOpenerDelegate, id, instantiationService, accessibilityService) {\n    super();\n    this.parent = parent;\n    this.hoverDelegate = hoverDelegate;\n    this.linkOpenerDelegate = linkOpenerDelegate;\n    this.accessibilityService = accessibilityService;\n    //#region QuickInputTree Events\n    this._onKeyDown = new Emitter();\n    this._onLeave = new Emitter();\n    /**\n     * Event that is fired when the tree would no longer have focus.\n    */\n    this.onLeave = this._onLeave.event;\n    this._visibleCountObservable = observableValue('VisibleCount', 0);\n    this.onChangedVisibleCount = Event.fromObservable(this._visibleCountObservable, this._store);\n    this._allVisibleCheckedObservable = observableValue('AllVisibleChecked', false);\n    this.onChangedAllVisibleChecked = Event.fromObservable(this._allVisibleCheckedObservable, this._store);\n    this._checkedCountObservable = observableValue('CheckedCount', 0);\n    this.onChangedCheckedCount = Event.fromObservable(this._checkedCountObservable, this._store);\n    this._checkedElementsObservable = observableValueOpts({\n      equalsFn: equals\n    }, new Array());\n    this.onChangedCheckedElements = Event.fromObservable(this._checkedElementsObservable, this._store);\n    this._onButtonTriggered = new Emitter();\n    this.onButtonTriggered = this._onButtonTriggered.event;\n    this._onSeparatorButtonTriggered = new Emitter();\n    this.onSeparatorButtonTriggered = this._onSeparatorButtonTriggered.event;\n    this._elementChecked = new Emitter();\n    this._elementCheckedEventBufferer = new EventBufferer();\n    //#endregion\n    this._hasCheckboxes = false;\n    this._inputElements = new Array();\n    this._elementTree = new Array();\n    this._itemElements = new Array();\n    // Elements that apply to the current set of elements\n    this._elementDisposable = this._register(new DisposableStore());\n    this._matchOnDescription = false;\n    this._matchOnDetail = false;\n    this._matchOnLabel = true;\n    this._matchOnLabelMode = 'fuzzy';\n    this._sortByLabel = true;\n    this._shouldLoop = true;\n    this._container = dom.append(this.parent, $('.quick-input-list'));\n    this._separatorRenderer = new QuickPickSeparatorElementRenderer(hoverDelegate);\n    this._itemRenderer = instantiationService.createInstance(QuickPickItemElementRenderer, hoverDelegate);\n    this._tree = this._register(instantiationService.createInstance(WorkbenchObjectTree, 'QuickInput', this._container, new QuickInputItemDelegate(), [this._itemRenderer, this._separatorRenderer], {\n      accessibilityProvider: new QuickInputAccessibilityProvider(),\n      setRowLineHeight: false,\n      multipleSelectionSupport: false,\n      hideTwistiesOfChildlessElements: true,\n      renderIndentGuides: RenderIndentGuides.None,\n      findWidgetEnabled: false,\n      indent: 0,\n      horizontalScrolling: false,\n      allowNonCollapsibleParents: true,\n      alwaysConsumeMouseWheel: true\n    }));\n    this._tree.getHTMLElement().id = id;\n    this._registerListeners();\n  }\n  //#region public getters/setters\n  get onDidChangeFocus() {\n    return Event.map(this._tree.onDidChangeFocus, e => e.elements.filter(e => e instanceof QuickPickItemElement).map(e => e.item), this._store);\n  }\n  get onDidChangeSelection() {\n    return Event.map(this._tree.onDidChangeSelection, e => ({\n      items: e.elements.filter(e => e instanceof QuickPickItemElement).map(e => e.item),\n      event: e.browserEvent\n    }), this._store);\n  }\n  get displayed() {\n    return this._container.style.display !== 'none';\n  }\n  set displayed(value) {\n    this._container.style.display = value ? '' : 'none';\n  }\n  get scrollTop() {\n    return this._tree.scrollTop;\n  }\n  set scrollTop(scrollTop) {\n    this._tree.scrollTop = scrollTop;\n  }\n  get ariaLabel() {\n    return this._tree.ariaLabel;\n  }\n  set ariaLabel(label) {\n    this._tree.ariaLabel = label ?? '';\n  }\n  set enabled(value) {\n    this._tree.getHTMLElement().style.pointerEvents = value ? '' : 'none';\n  }\n  get matchOnDescription() {\n    return this._matchOnDescription;\n  }\n  set matchOnDescription(value) {\n    this._matchOnDescription = value;\n  }\n  get matchOnDetail() {\n    return this._matchOnDetail;\n  }\n  set matchOnDetail(value) {\n    this._matchOnDetail = value;\n  }\n  get matchOnLabel() {\n    return this._matchOnLabel;\n  }\n  set matchOnLabel(value) {\n    this._matchOnLabel = value;\n  }\n  get matchOnLabelMode() {\n    return this._matchOnLabelMode;\n  }\n  set matchOnLabelMode(value) {\n    this._matchOnLabelMode = value;\n  }\n  get sortByLabel() {\n    return this._sortByLabel;\n  }\n  set sortByLabel(value) {\n    this._sortByLabel = value;\n  }\n  get shouldLoop() {\n    return this._shouldLoop;\n  }\n  set shouldLoop(value) {\n    this._shouldLoop = value;\n  }\n  //#endregion\n  //#region register listeners\n  _registerListeners() {\n    this._registerOnKeyDown();\n    this._registerOnContainerClick();\n    this._registerOnMouseMiddleClick();\n    this._registerOnTreeModelChanged();\n    this._registerOnElementChecked();\n    this._registerOnContextMenu();\n    this._registerHoverListeners();\n    this._registerSelectionChangeListener();\n    this._registerSeparatorActionShowingListeners();\n  }\n  _registerOnKeyDown() {\n    // TODO: Should this be added at a higher level?\n    this._register(this._tree.onKeyDown(e => {\n      const event = new StandardKeyboardEvent(e);\n      switch (event.keyCode) {\n        case 10 /* KeyCode.Space */:\n          this.toggleCheckbox();\n          break;\n      }\n      this._onKeyDown.fire(event);\n    }));\n  }\n  _registerOnContainerClick() {\n    this._register(dom.addDisposableListener(this._container, dom.EventType.CLICK, e => {\n      if (e.x || e.y) {\n        // Avoid 'click' triggered by 'space' on checkbox.\n        this._onLeave.fire();\n      }\n    }));\n  }\n  _registerOnMouseMiddleClick() {\n    this._register(dom.addDisposableListener(this._container, dom.EventType.AUXCLICK, e => {\n      if (e.button === 1) {\n        this._onLeave.fire();\n      }\n    }));\n  }\n  _registerOnTreeModelChanged() {\n    this._register(this._tree.onDidChangeModel(() => {\n      const visibleCount = this._itemElements.filter(e => !e.hidden).length;\n      this._visibleCountObservable.set(visibleCount, undefined);\n      if (this._hasCheckboxes) {\n        this._updateCheckedObservables();\n      }\n    }));\n  }\n  _registerOnElementChecked() {\n    // Only fire the last event when buffered\n    this._register(this._elementCheckedEventBufferer.wrapEvent(this._elementChecked.event, (_, e) => e)(_ => this._updateCheckedObservables()));\n  }\n  _registerOnContextMenu() {\n    this._register(this._tree.onContextMenu(e => {\n      if (e.element) {\n        e.browserEvent.preventDefault();\n        // we want to treat a context menu event as\n        // a gesture to open the item at the index\n        // since we do not have any context menu\n        // this enables for example macOS to Ctrl-\n        // click on an item to open it.\n        this._tree.setSelection([e.element]);\n      }\n    }));\n  }\n  _registerHoverListeners() {\n    const delayer = this._register(new ThrottledDelayer(this.hoverDelegate.delay));\n    this._register(this._tree.onMouseOver(async e => {\n      // If we hover over an anchor element, we don't want to show the hover because\n      // the anchor may have a tooltip that we want to show instead.\n      if (dom.isHTMLAnchorElement(e.browserEvent.target)) {\n        delayer.cancel();\n        return;\n      }\n      if (\n      // anchors are an exception as called out above so we skip them here\n      !dom.isHTMLAnchorElement(e.browserEvent.relatedTarget) &&\n      // check if the mouse is still over the same element\n      dom.isAncestor(e.browserEvent.relatedTarget, e.element?.element)) {\n        return;\n      }\n      try {\n        await delayer.trigger(async () => {\n          if (e.element instanceof QuickPickItemElement) {\n            this.showHover(e.element);\n          }\n        });\n      } catch (e) {\n        // Ignore cancellation errors due to mouse out\n        if (!isCancellationError(e)) {\n          throw e;\n        }\n      }\n    }));\n    this._register(this._tree.onMouseOut(e => {\n      // onMouseOut triggers every time a new element has been moused over\n      // even if it's on the same list item. We only want one event, so we\n      // check if the mouse is still over the same element.\n      if (dom.isAncestor(e.browserEvent.relatedTarget, e.element?.element)) {\n        return;\n      }\n      delayer.cancel();\n    }));\n  }\n  /**\n   * Register's focus change and mouse events so that we can track when items inside of a\n   * separator's section are focused or hovered so that we can display the separator's actions\n   */\n  _registerSeparatorActionShowingListeners() {\n    this._register(this._tree.onDidChangeFocus(e => {\n      const parent = e.elements[0] ? this._tree.getParentElement(e.elements[0])\n      // treat null as focus lost and when we have no separators\n      : null;\n      for (const separator of this._separatorRenderer.visibleSeparators) {\n        const value = separator === parent;\n        // get bitness of ACTIVE_ITEM and check if it changed\n        const currentActive = !!(separator.focusInsideSeparator & QuickPickSeparatorFocusReason.ACTIVE_ITEM);\n        if (currentActive !== value) {\n          if (value) {\n            separator.focusInsideSeparator |= QuickPickSeparatorFocusReason.ACTIVE_ITEM;\n          } else {\n            separator.focusInsideSeparator &= ~QuickPickSeparatorFocusReason.ACTIVE_ITEM;\n          }\n          this._tree.rerender(separator);\n        }\n      }\n    }));\n    this._register(this._tree.onMouseOver(e => {\n      const parent = e.element ? this._tree.getParentElement(e.element) : null;\n      for (const separator of this._separatorRenderer.visibleSeparators) {\n        if (separator !== parent) {\n          continue;\n        }\n        const currentMouse = !!(separator.focusInsideSeparator & QuickPickSeparatorFocusReason.MOUSE_HOVER);\n        if (!currentMouse) {\n          separator.focusInsideSeparator |= QuickPickSeparatorFocusReason.MOUSE_HOVER;\n          this._tree.rerender(separator);\n        }\n      }\n    }));\n    this._register(this._tree.onMouseOut(e => {\n      const parent = e.element ? this._tree.getParentElement(e.element) : null;\n      for (const separator of this._separatorRenderer.visibleSeparators) {\n        if (separator !== parent) {\n          continue;\n        }\n        const currentMouse = !!(separator.focusInsideSeparator & QuickPickSeparatorFocusReason.MOUSE_HOVER);\n        if (currentMouse) {\n          separator.focusInsideSeparator &= ~QuickPickSeparatorFocusReason.MOUSE_HOVER;\n          this._tree.rerender(separator);\n        }\n      }\n    }));\n  }\n  _registerSelectionChangeListener() {\n    // When the user selects a separator, the separator will move to the top and focus will be\n    // set to the first element after the separator.\n    this._register(this._tree.onDidChangeSelection(e => {\n      const elementsWithoutSeparators = e.elements.filter(e => e instanceof QuickPickItemElement);\n      if (elementsWithoutSeparators.length !== e.elements.length) {\n        if (e.elements.length === 1 && e.elements[0] instanceof QuickPickSeparatorElement) {\n          this._tree.setFocus([e.elements[0].children[0]]);\n          this._tree.reveal(e.elements[0], 0);\n        }\n        this._tree.setSelection(elementsWithoutSeparators);\n      }\n    }));\n  }\n  //#endregion\n  //#region public methods\n  setAllVisibleChecked(checked) {\n    this._elementCheckedEventBufferer.bufferEvents(() => {\n      this._itemElements.forEach(element => {\n        if (!element.hidden && !element.checkboxDisabled) {\n          // Would fire an event if we didn't beffer the events\n          element.checked = checked;\n        }\n      });\n    });\n  }\n  setElements(inputElements) {\n    this._elementDisposable.clear();\n    this._inputElements = inputElements;\n    this._hasCheckboxes = this.parent.classList.contains('show-checkboxes');\n    let currentSeparatorElement;\n    this._itemElements = new Array();\n    this._elementTree = inputElements.reduce((result, item, index) => {\n      let element;\n      if (item.type === 'separator') {\n        if (!item.buttons) {\n          // This separator will be rendered as a part of the list item\n          return result;\n        }\n        currentSeparatorElement = new QuickPickSeparatorElement(index, e => this._onSeparatorButtonTriggered.fire(e), item);\n        element = currentSeparatorElement;\n      } else {\n        const previous = index > 0 ? inputElements[index - 1] : undefined;\n        let separator;\n        if (previous && previous.type === 'separator' && !previous.buttons) {\n          // Found an inline separator so we clear out the current separator element\n          currentSeparatorElement = undefined;\n          separator = previous;\n        }\n        const qpi = new QuickPickItemElement(index, this._hasCheckboxes, e => this._onButtonTriggered.fire(e), this._elementChecked, item, separator);\n        this._itemElements.push(qpi);\n        if (currentSeparatorElement) {\n          currentSeparatorElement.children.push(qpi);\n          return result;\n        }\n        element = qpi;\n      }\n      result.push(element);\n      return result;\n    }, new Array());\n    this._setElementsToTree(this._elementTree);\n    // Accessibility hack, unfortunately on next tick\n    // https://github.com/microsoft/vscode/issues/211976\n    if (this.accessibilityService.isScreenReaderOptimized()) {\n      setTimeout(() => {\n        const focusedElement = this._tree.getHTMLElement().querySelector(`.monaco-list-row.focused`);\n        const parent = focusedElement?.parentNode;\n        if (focusedElement && parent) {\n          const nextSibling = focusedElement.nextSibling;\n          focusedElement.remove();\n          parent.insertBefore(focusedElement, nextSibling);\n        }\n      }, 0);\n    }\n  }\n  setFocusedElements(items) {\n    const elements = items.map(item => this._itemElements.find(e => e.item === item)).filter(e => !!e).filter(e => !e.hidden);\n    this._tree.setFocus(elements);\n    if (items.length > 0) {\n      const focused = this._tree.getFocus()[0];\n      if (focused) {\n        this._tree.reveal(focused);\n      }\n    }\n  }\n  getActiveDescendant() {\n    return this._tree.getHTMLElement().getAttribute('aria-activedescendant');\n  }\n  setSelectedElements(items) {\n    const elements = items.map(item => this._itemElements.find(e => e.item === item)).filter(e => !!e);\n    this._tree.setSelection(elements);\n  }\n  getCheckedElements() {\n    return this._itemElements.filter(e => e.checked).map(e => e.item);\n  }\n  setCheckedElements(items) {\n    this._elementCheckedEventBufferer.bufferEvents(() => {\n      const checked = new Set();\n      for (const item of items) {\n        checked.add(item);\n      }\n      for (const element of this._itemElements) {\n        // Would fire an event if we didn't beffer the events\n        element.checked = checked.has(element.item);\n      }\n    });\n  }\n  focus(what) {\n    if (!this._itemElements.length) {\n      return;\n    }\n    if (what === QuickPickFocus.Second && this._itemElements.length < 2) {\n      what = QuickPickFocus.First;\n    }\n    switch (what) {\n      case QuickPickFocus.First:\n        this._tree.scrollTop = 0;\n        this._tree.focusFirst(undefined, e => e.element instanceof QuickPickItemElement);\n        break;\n      case QuickPickFocus.Second:\n        {\n          this._tree.scrollTop = 0;\n          let isSecondItem = false;\n          this._tree.focusFirst(undefined, e => {\n            if (!(e.element instanceof QuickPickItemElement)) {\n              return false;\n            }\n            if (isSecondItem) {\n              return true;\n            }\n            isSecondItem = !isSecondItem;\n            return false;\n          });\n          break;\n        }\n      case QuickPickFocus.Last:\n        this._tree.scrollTop = this._tree.scrollHeight;\n        this._tree.focusLast(undefined, e => e.element instanceof QuickPickItemElement);\n        break;\n      case QuickPickFocus.Next:\n        {\n          const prevFocus = this._tree.getFocus();\n          this._tree.focusNext(undefined, this._shouldLoop, undefined, e => {\n            if (!(e.element instanceof QuickPickItemElement)) {\n              return false;\n            }\n            this._tree.reveal(e.element);\n            return true;\n          });\n          const currentFocus = this._tree.getFocus();\n          if (prevFocus.length && prevFocus[0] === currentFocus[0] && prevFocus[0] === this._itemElements[this._itemElements.length - 1]) {\n            this._onLeave.fire();\n          }\n          break;\n        }\n      case QuickPickFocus.Previous:\n        {\n          const prevFocus = this._tree.getFocus();\n          this._tree.focusPrevious(undefined, this._shouldLoop, undefined, e => {\n            if (!(e.element instanceof QuickPickItemElement)) {\n              return false;\n            }\n            const parent = this._tree.getParentElement(e.element);\n            if (parent === null || parent.children[0] !== e.element) {\n              this._tree.reveal(e.element);\n            } else {\n              // Only if we are the first child of a separator do we reveal the separator\n              this._tree.reveal(parent);\n            }\n            return true;\n          });\n          const currentFocus = this._tree.getFocus();\n          if (prevFocus.length && prevFocus[0] === currentFocus[0] && prevFocus[0] === this._itemElements[0]) {\n            this._onLeave.fire();\n          }\n          break;\n        }\n      case QuickPickFocus.NextPage:\n        this._tree.focusNextPage(undefined, e => {\n          if (!(e.element instanceof QuickPickItemElement)) {\n            return false;\n          }\n          this._tree.reveal(e.element);\n          return true;\n        });\n        break;\n      case QuickPickFocus.PreviousPage:\n        this._tree.focusPreviousPage(undefined, e => {\n          if (!(e.element instanceof QuickPickItemElement)) {\n            return false;\n          }\n          const parent = this._tree.getParentElement(e.element);\n          if (parent === null || parent.children[0] !== e.element) {\n            this._tree.reveal(e.element);\n          } else {\n            this._tree.reveal(parent);\n          }\n          return true;\n        });\n        break;\n      case QuickPickFocus.NextSeparator:\n        {\n          let foundSeparatorAsItem = false;\n          const before = this._tree.getFocus()[0];\n          this._tree.focusNext(undefined, true, undefined, e => {\n            if (foundSeparatorAsItem) {\n              // This should be the index right after the separator so it\n              // is the item we want to focus.\n              return true;\n            }\n            if (e.element instanceof QuickPickSeparatorElement) {\n              foundSeparatorAsItem = true;\n              // If the separator is visible, then we should just reveal its first child so it's not as jarring.\n              if (this._separatorRenderer.isSeparatorVisible(e.element)) {\n                this._tree.reveal(e.element.children[0]);\n              } else {\n                // If the separator is not visible, then we should\n                // push it up to the top of the list.\n                this._tree.reveal(e.element, 0);\n              }\n            } else if (e.element instanceof QuickPickItemElement) {\n              if (e.element.separator) {\n                if (this._itemRenderer.isItemWithSeparatorVisible(e.element)) {\n                  this._tree.reveal(e.element);\n                } else {\n                  this._tree.reveal(e.element, 0);\n                }\n                return true;\n              } else if (e.element === this._elementTree[0]) {\n                // We should stop at the first item in the list if it's a regular item.\n                this._tree.reveal(e.element, 0);\n                return true;\n              }\n            }\n            return false;\n          });\n          const after = this._tree.getFocus()[0];\n          if (before === after) {\n            // If we didn't move, then we should just move to the end\n            // of the list.\n            this._tree.scrollTop = this._tree.scrollHeight;\n            this._tree.focusLast(undefined, e => e.element instanceof QuickPickItemElement);\n          }\n          break;\n        }\n      case QuickPickFocus.PreviousSeparator:\n        {\n          let focusElement;\n          // If we are already sitting on an inline separator, then we\n          // have already found the _current_ separator and need to\n          // move to the previous one.\n          let foundSeparator = !!this._tree.getFocus()[0]?.separator;\n          this._tree.focusPrevious(undefined, true, undefined, e => {\n            if (e.element instanceof QuickPickSeparatorElement) {\n              if (foundSeparator) {\n                if (!focusElement) {\n                  if (this._separatorRenderer.isSeparatorVisible(e.element)) {\n                    this._tree.reveal(e.element);\n                  } else {\n                    this._tree.reveal(e.element, 0);\n                  }\n                  focusElement = e.element.children[0];\n                }\n              } else {\n                foundSeparator = true;\n              }\n            } else if (e.element instanceof QuickPickItemElement) {\n              if (!focusElement) {\n                if (e.element.separator) {\n                  if (this._itemRenderer.isItemWithSeparatorVisible(e.element)) {\n                    this._tree.reveal(e.element);\n                  } else {\n                    this._tree.reveal(e.element, 0);\n                  }\n                  focusElement = e.element;\n                } else if (e.element === this._elementTree[0]) {\n                  // We should stop at the first item in the list if it's a regular item.\n                  this._tree.reveal(e.element, 0);\n                  return true;\n                }\n              }\n            }\n            return false;\n          });\n          if (focusElement) {\n            this._tree.setFocus([focusElement]);\n          }\n          break;\n        }\n    }\n  }\n  clearFocus() {\n    this._tree.setFocus([]);\n  }\n  domFocus() {\n    this._tree.domFocus();\n  }\n  layout(maxHeight) {\n    this._tree.getHTMLElement().style.maxHeight = maxHeight ? `${\n    // Make sure height aligns with list item heights\n    Math.floor(maxHeight / 44) * 44\n    // Add some extra height so that it's clear there's more to scroll\n    + 6}px` : '';\n    this._tree.layout();\n  }\n  filter(query) {\n    if (!(this._sortByLabel || this._matchOnLabel || this._matchOnDescription || this._matchOnDetail)) {\n      this._tree.layout();\n      return false;\n    }\n    const queryWithWhitespace = query;\n    query = query.trim();\n    // Reset filtering\n    if (!query || !(this.matchOnLabel || this.matchOnDescription || this.matchOnDetail)) {\n      this._itemElements.forEach(element => {\n        element.labelHighlights = undefined;\n        element.descriptionHighlights = undefined;\n        element.detailHighlights = undefined;\n        element.hidden = false;\n        const previous = element.index && this._inputElements[element.index - 1];\n        if (element.item) {\n          element.separator = previous && previous.type === 'separator' && !previous.buttons ? previous : undefined;\n        }\n      });\n    }\n    // Filter by value (since we support icons in labels, use $(..) aware fuzzy matching)\n    else {\n      let currentSeparator;\n      this._elementTree.forEach(element => {\n        let labelHighlights;\n        if (this.matchOnLabelMode === 'fuzzy') {\n          labelHighlights = this.matchOnLabel ? matchesFuzzyIconAware(query, parseLabelWithIcons(element.saneLabel)) ?? undefined : undefined;\n        } else {\n          labelHighlights = this.matchOnLabel ? matchesContiguousIconAware(queryWithWhitespace, parseLabelWithIcons(element.saneLabel)) ?? undefined : undefined;\n        }\n        const descriptionHighlights = this.matchOnDescription ? matchesFuzzyIconAware(query, parseLabelWithIcons(element.saneDescription || '')) ?? undefined : undefined;\n        const detailHighlights = this.matchOnDetail ? matchesFuzzyIconAware(query, parseLabelWithIcons(element.saneDetail || '')) ?? undefined : undefined;\n        if (labelHighlights || descriptionHighlights || detailHighlights) {\n          element.labelHighlights = labelHighlights;\n          element.descriptionHighlights = descriptionHighlights;\n          element.detailHighlights = detailHighlights;\n          element.hidden = false;\n        } else {\n          element.labelHighlights = undefined;\n          element.descriptionHighlights = undefined;\n          element.detailHighlights = undefined;\n          element.hidden = element.item ? !element.item.alwaysShow : true;\n        }\n        // Ensure separators are filtered out first before deciding if we need to bring them back\n        if (element.item) {\n          element.separator = undefined;\n        } else if (element.separator) {\n          element.hidden = true;\n        }\n        // we can show the separator unless the list gets sorted by match\n        if (!this.sortByLabel) {\n          const previous = element.index && this._inputElements[element.index - 1];\n          currentSeparator = previous && previous.type === 'separator' ? previous : currentSeparator;\n          if (currentSeparator && !element.hidden) {\n            element.separator = currentSeparator;\n            currentSeparator = undefined;\n          }\n        }\n      });\n    }\n    const shownElements = this._elementTree.filter(element => !element.hidden);\n    // Sort by value\n    if (this.sortByLabel && query) {\n      const normalizedSearchValue = query.toLowerCase();\n      shownElements.sort((a, b) => {\n        return compareEntries(a, b, normalizedSearchValue);\n      });\n    }\n    let currentSeparator;\n    const finalElements = shownElements.reduce((result, element, index) => {\n      if (element instanceof QuickPickItemElement) {\n        if (currentSeparator) {\n          currentSeparator.children.push(element);\n        } else {\n          result.push(element);\n        }\n      } else if (element instanceof QuickPickSeparatorElement) {\n        element.children = [];\n        currentSeparator = element;\n        result.push(element);\n      }\n      return result;\n    }, new Array());\n    this._setElementsToTree(finalElements);\n    this._tree.layout();\n    return true;\n  }\n  toggleCheckbox() {\n    this._elementCheckedEventBufferer.bufferEvents(() => {\n      const elements = this._tree.getFocus().filter(e => e instanceof QuickPickItemElement);\n      const allChecked = this._allVisibleChecked(elements);\n      for (const element of elements) {\n        if (!element.checkboxDisabled) {\n          // Would fire an event if we didn't have the flag set\n          element.checked = !allChecked;\n        }\n      }\n    });\n  }\n  style(styles) {\n    this._tree.style(styles);\n  }\n  toggleHover() {\n    const focused = this._tree.getFocus()[0];\n    if (!focused?.saneTooltip || !(focused instanceof QuickPickItemElement)) {\n      return;\n    }\n    // if there's a hover already, hide it (toggle off)\n    if (this._lastHover && !this._lastHover.isDisposed) {\n      this._lastHover.dispose();\n      return;\n    }\n    // If there is no hover, show it (toggle on)\n    this.showHover(focused);\n    const store = new DisposableStore();\n    store.add(this._tree.onDidChangeFocus(e => {\n      if (e.elements[0] instanceof QuickPickItemElement) {\n        this.showHover(e.elements[0]);\n      }\n    }));\n    if (this._lastHover) {\n      store.add(this._lastHover);\n    }\n    this._elementDisposable.add(store);\n  }\n  //#endregion\n  //#region private methods\n  _setElementsToTree(elements) {\n    const treeElements = new Array();\n    for (const element of elements) {\n      if (element instanceof QuickPickSeparatorElement) {\n        treeElements.push({\n          element,\n          collapsible: false,\n          collapsed: false,\n          children: element.children.map(e => ({\n            element: e,\n            collapsible: false,\n            collapsed: false\n          }))\n        });\n      } else {\n        treeElements.push({\n          element,\n          collapsible: false,\n          collapsed: false\n        });\n      }\n    }\n    this._tree.setChildren(null, treeElements);\n  }\n  _allVisibleChecked(elements, whenNoneVisible = true) {\n    for (let i = 0, n = elements.length; i < n; i++) {\n      const element = elements[i];\n      if (!element.hidden) {\n        if (!element.checked) {\n          return false;\n        } else {\n          whenNoneVisible = true;\n        }\n      }\n    }\n    return whenNoneVisible;\n  }\n  _updateCheckedObservables() {\n    this._allVisibleCheckedObservable.set(this._allVisibleChecked(this._itemElements, false), undefined);\n    const checkedCount = this._itemElements.filter(element => element.checked).length;\n    this._checkedCountObservable.set(checkedCount, undefined);\n    this._checkedElementsObservable.set(this.getCheckedElements(), undefined);\n  }\n  /**\n   * Disposes of the hover and shows a new one for the given index if it has a tooltip.\n   * @param element The element to show the hover for\n   */\n  showHover(element) {\n    if (this._lastHover && !this._lastHover.isDisposed) {\n      this.hoverDelegate.onDidHideHover?.();\n      this._lastHover?.dispose();\n    }\n    if (!element.element || !element.saneTooltip) {\n      return;\n    }\n    this._lastHover = this.hoverDelegate.showHover({\n      content: element.saneTooltip,\n      target: element.element,\n      linkHandler: url => {\n        this.linkOpenerDelegate(url);\n      },\n      appearance: {\n        showPointer: true\n      },\n      container: this._container,\n      position: {\n        hoverPosition: 1 /* HoverPosition.RIGHT */\n      }\n    }, false);\n  }\n};\n__decorate([memoize], QuickInputTree.prototype, \"onDidChangeFocus\", null);\n__decorate([memoize], QuickInputTree.prototype, \"onDidChangeSelection\", null);\nQuickInputTree = __decorate([__param(4, IInstantiationService), __param(5, IAccessibilityService)], QuickInputTree);\nexport { QuickInputTree };\nfunction matchesContiguousIconAware(query, target) {\n  const {\n    text,\n    iconOffsets\n  } = target;\n  // Return early if there are no icon markers in the word to match against\n  if (!iconOffsets || iconOffsets.length === 0) {\n    return matchesContiguous(query, text);\n  }\n  // Trim the word to match against because it could have leading\n  // whitespace now if the word started with an icon\n  const wordToMatchAgainstWithoutIconsTrimmed = ltrim(text, ' ');\n  const leadingWhitespaceOffset = text.length - wordToMatchAgainstWithoutIconsTrimmed.length;\n  // match on value without icon\n  const matches = matchesContiguous(query, wordToMatchAgainstWithoutIconsTrimmed);\n  // Map matches back to offsets with icon and trimming\n  if (matches) {\n    for (const match of matches) {\n      const iconOffset = iconOffsets[match.start + leadingWhitespaceOffset] /* icon offsets at index */ + leadingWhitespaceOffset /* overall leading whitespace offset */;\n      match.start += iconOffset;\n      match.end += iconOffset;\n    }\n  }\n  return matches;\n}\nfunction matchesContiguous(word, wordToMatchAgainst) {\n  const matchIndex = wordToMatchAgainst.toLowerCase().indexOf(word.toLowerCase());\n  if (matchIndex !== -1) {\n    return [{\n      start: matchIndex,\n      end: matchIndex + word.length\n    }];\n  }\n  return null;\n}\nfunction compareEntries(elementA, elementB, lookFor) {\n  const labelHighlightsA = elementA.labelHighlights || [];\n  const labelHighlightsB = elementB.labelHighlights || [];\n  if (labelHighlightsA.length && !labelHighlightsB.length) {\n    return -1;\n  }\n  if (!labelHighlightsA.length && labelHighlightsB.length) {\n    return 1;\n  }\n  if (labelHighlightsA.length === 0 && labelHighlightsB.length === 0) {\n    return 0;\n  }\n  return compareAnything(elementA.saneSortLabel, elementB.saneSortLabel, lookFor);\n}","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","QuickPickItemElementRenderer_1","dom","Emitter","Event","EventBufferer","localize","IInstantiationService","WorkbenchObjectTree","IThemeService","Disposable","DisposableStore","StandardKeyboardEvent","OS","memoize","IconLabel","KeybindingLabel","ActionBar","isDark","URI","quickInputButtonToAction","Lazy","getCodiconAriaLabel","matchesFuzzyIconAware","parseLabelWithIcons","compareAnything","ltrim","RenderIndentGuides","ThrottledDelayer","isCancellationError","QuickPickFocus","IAccessibilityService","observableValue","observableValueOpts","equals","$","BaseQuickPickItemElement","constructor","index","hasCheckbox","mainItem","_hidden","_init","saneLabel","label","saneSortLabel","text","trim","saneAriaLabel","ariaLabel","saneDescription","saneDetail","map","s","filter","join","_saneDescription","description","_saneTooltip","tooltip","value","element","_element","hidden","_saneDetail","saneTooltip","labelHighlights","_labelHighlights","descriptionHighlights","_descriptionHighlights","detailHighlights","_detailHighlights","QuickPickItemElement","fireButtonTriggered","_onChecked","item","_separator","_checked","onChecked","event","e","checked","None","detail","highlights","separator","fire","checkboxDisabled","disabled","QuickPickSeparatorFocusReason","QuickPickSeparatorElement","fireSeparatorButtonTriggered","children","Array","focusInsideSeparator","NONE","QuickInputItemDelegate","getHeight","getTemplateId","QuickPickItemElementRenderer","ID","QuickPickSeparatorElementRenderer","QuickInputAccessibilityProvider","getWidgetAriaLabel","getAriaLabel","getWidgetRole","getRole","isChecked","undefined","onDidChange","BaseQuickInputListRenderer","hoverDelegate","renderTemplate","container","data","create","toDisposeElement","toDisposeTemplate","entry","append","add","addStandardDisposableListener","EventType","CLICK","checkbox","offsetParent","preventDefault","type","rows","row1","row2","supportHighlights","supportDescriptionHighlights","supportIcons","icon","prepend","keybindingContainer","keybinding","detailContainer","actionBar","domNode","classList","disposeTemplate","dispose","disposeElement","_index","clear","_QuickPickItemElementRenderer","themeService","_itemsWithSeparatorsFrequency","Map","templateId","CHANGE","renderElement","node","iconPath","getColorTheme","dark","light","iconUrl","revive","className","style","backgroundImage","asCSSUrl","iconClass","descriptionTitle","markdown","supportThemeIcons","markdownNotSupportedFallback","options","matches","descriptionMatches","labelEscapeNewLines","extraClasses","iconClasses","italic","strikethrough","remove","setLabel","set","title","display","textContent","addItemWithSeparator","toggle","buttons","push","button","removeItemWithSeparator","isItemWithSeparatorVisible","has","get","frequency","delete","_visibleSeparatorsFrequency","visibleSeparators","keys","isSeparatorVisible","addSeparator","removeSeparator","_QuickPickSeparatorElementRenderer","QuickInputTree","parent","linkOpenerDelegate","id","instantiationService","accessibilityService","_onKeyDown","_onLeave","onLeave","_visibleCountObservable","onChangedVisibleCount","fromObservable","_store","_allVisibleCheckedObservable","onChangedAllVisibleChecked","_checkedCountObservable","onChangedCheckedCount","_checkedElementsObservable","equalsFn","onChangedCheckedElements","_onButtonTriggered","onButtonTriggered","_onSeparatorButtonTriggered","onSeparatorButtonTriggered","_elementChecked","_elementCheckedEventBufferer","_hasCheckboxes","_inputElements","_elementTree","_itemElements","_elementDisposable","_register","_matchOnDescription","_matchOnDetail","_matchOnLabel","_matchOnLabelMode","_sortByLabel","_shouldLoop","_container","_separatorRenderer","_itemRenderer","createInstance","_tree","accessibilityProvider","setRowLineHeight","multipleSelectionSupport","hideTwistiesOfChildlessElements","renderIndentGuides","findWidgetEnabled","indent","horizontalScrolling","allowNonCollapsibleParents","alwaysConsumeMouseWheel","getHTMLElement","_registerListeners","onDidChangeFocus","elements","onDidChangeSelection","items","browserEvent","displayed","scrollTop","enabled","pointerEvents","matchOnDescription","matchOnDetail","matchOnLabel","matchOnLabelMode","sortByLabel","shouldLoop","_registerOnKeyDown","_registerOnContainerClick","_registerOnMouseMiddleClick","_registerOnTreeModelChanged","_registerOnElementChecked","_registerOnContextMenu","_registerHoverListeners","_registerSelectionChangeListener","_registerSeparatorActionShowingListeners","onKeyDown","keyCode","toggleCheckbox","addDisposableListener","x","y","AUXCLICK","onDidChangeModel","visibleCount","_updateCheckedObservables","wrapEvent","_","onContextMenu","setSelection","delayer","delay","onMouseOver","isHTMLAnchorElement","cancel","relatedTarget","isAncestor","trigger","showHover","onMouseOut","getParentElement","currentActive","ACTIVE_ITEM","rerender","currentMouse","MOUSE_HOVER","elementsWithoutSeparators","setFocus","reveal","setAllVisibleChecked","bufferEvents","forEach","setElements","inputElements","contains","currentSeparatorElement","reduce","result","previous","qpi","_setElementsToTree","isScreenReaderOptimized","setTimeout","focusedElement","querySelector","parentNode","nextSibling","insertBefore","setFocusedElements","find","focused","getFocus","getActiveDescendant","getAttribute","setSelectedElements","getCheckedElements","setCheckedElements","Set","focus","what","Second","First","focusFirst","isSecondItem","Last","scrollHeight","focusLast","Next","prevFocus","focusNext","currentFocus","Previous","focusPrevious","NextPage","focusNextPage","PreviousPage","focusPreviousPage","NextSeparator","foundSeparatorAsItem","before","after","PreviousSeparator","focusElement","foundSeparator","clearFocus","domFocus","layout","maxHeight","Math","floor","query","queryWithWhitespace","currentSeparator","matchesContiguousIconAware","alwaysShow","shownElements","normalizedSearchValue","toLowerCase","sort","a","b","compareEntries","finalElements","allChecked","_allVisibleChecked","styles","toggleHover","_lastHover","isDisposed","store","treeElements","collapsible","collapsed","setChildren","whenNoneVisible","n","checkedCount","onDidHideHover","content","linkHandler","url","appearance","showPointer","position","hoverPosition","prototype","iconOffsets","matchesContiguous","wordToMatchAgainstWithoutIconsTrimmed","leadingWhitespaceOffset","match","iconOffset","start","end","word","wordToMatchAgainst","matchIndex","indexOf","elementA","elementB","lookFor","labelHighlightsA","labelHighlightsB"],"sources":["C:/Users/ruzhe/CODEHUB-PH/GAMES/code-master/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/quickInputTree.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar QuickPickItemElementRenderer_1;\nimport * as dom from '../../../base/browser/dom.js';\nimport { Emitter, Event, EventBufferer } from '../../../base/common/event.js';\nimport { localize } from '../../../nls.js';\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { WorkbenchObjectTree } from '../../list/browser/listService.js';\nimport { IThemeService } from '../../theme/common/themeService.js';\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent.js';\nimport { OS } from '../../../base/common/platform.js';\nimport { memoize } from '../../../base/common/decorators.js';\nimport { IconLabel } from '../../../base/browser/ui/iconLabel/iconLabel.js';\nimport { KeybindingLabel } from '../../../base/browser/ui/keybindingLabel/keybindingLabel.js';\nimport { ActionBar } from '../../../base/browser/ui/actionbar/actionbar.js';\nimport { isDark } from '../../theme/common/theme.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { quickInputButtonToAction } from './quickInputUtils.js';\nimport { Lazy } from '../../../base/common/lazy.js';\nimport { getCodiconAriaLabel, matchesFuzzyIconAware, parseLabelWithIcons } from '../../../base/common/iconLabels.js';\nimport { compareAnything } from '../../../base/common/comparers.js';\nimport { ltrim } from '../../../base/common/strings.js';\nimport { RenderIndentGuides } from '../../../base/browser/ui/tree/abstractTree.js';\nimport { ThrottledDelayer } from '../../../base/common/async.js';\nimport { isCancellationError } from '../../../base/common/errors.js';\nimport { QuickPickFocus } from '../common/quickInput.js';\nimport { IAccessibilityService } from '../../accessibility/common/accessibility.js';\nimport { observableValue, observableValueOpts } from '../../../base/common/observable.js';\nimport { equals } from '../../../base/common/arrays.js';\nconst $ = dom.$;\nclass BaseQuickPickItemElement {\n    constructor(index, hasCheckbox, mainItem) {\n        this.index = index;\n        this.hasCheckbox = hasCheckbox;\n        this._hidden = false;\n        this._init = new Lazy(() => {\n            const saneLabel = mainItem.label ?? '';\n            const saneSortLabel = parseLabelWithIcons(saneLabel).text.trim();\n            const saneAriaLabel = mainItem.ariaLabel || [saneLabel, this.saneDescription, this.saneDetail]\n                .map(s => getCodiconAriaLabel(s))\n                .filter(s => !!s)\n                .join(', ');\n            return {\n                saneLabel,\n                saneSortLabel,\n                saneAriaLabel\n            };\n        });\n        this._saneDescription = mainItem.description;\n        this._saneTooltip = mainItem.tooltip;\n    }\n    // #region Lazy Getters\n    get saneLabel() {\n        return this._init.value.saneLabel;\n    }\n    get saneSortLabel() {\n        return this._init.value.saneSortLabel;\n    }\n    get saneAriaLabel() {\n        return this._init.value.saneAriaLabel;\n    }\n    get element() {\n        return this._element;\n    }\n    set element(value) {\n        this._element = value;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n    }\n    get saneDescription() {\n        return this._saneDescription;\n    }\n    set saneDescription(value) {\n        this._saneDescription = value;\n    }\n    get saneDetail() {\n        return this._saneDetail;\n    }\n    set saneDetail(value) {\n        this._saneDetail = value;\n    }\n    get saneTooltip() {\n        return this._saneTooltip;\n    }\n    set saneTooltip(value) {\n        this._saneTooltip = value;\n    }\n    get labelHighlights() {\n        return this._labelHighlights;\n    }\n    set labelHighlights(value) {\n        this._labelHighlights = value;\n    }\n    get descriptionHighlights() {\n        return this._descriptionHighlights;\n    }\n    set descriptionHighlights(value) {\n        this._descriptionHighlights = value;\n    }\n    get detailHighlights() {\n        return this._detailHighlights;\n    }\n    set detailHighlights(value) {\n        this._detailHighlights = value;\n    }\n}\nclass QuickPickItemElement extends BaseQuickPickItemElement {\n    constructor(index, hasCheckbox, fireButtonTriggered, _onChecked, item, _separator) {\n        super(index, hasCheckbox, item);\n        this.fireButtonTriggered = fireButtonTriggered;\n        this._onChecked = _onChecked;\n        this.item = item;\n        this._separator = _separator;\n        this._checked = false;\n        this.onChecked = hasCheckbox\n            ? Event.map(Event.filter(this._onChecked.event, e => e.element === this), e => e.checked)\n            : Event.None;\n        this._saneDetail = item.detail;\n        this._labelHighlights = item.highlights?.label;\n        this._descriptionHighlights = item.highlights?.description;\n        this._detailHighlights = item.highlights?.detail;\n    }\n    get separator() {\n        return this._separator;\n    }\n    set separator(value) {\n        this._separator = value;\n    }\n    get checked() {\n        return this._checked;\n    }\n    set checked(value) {\n        if (value !== this._checked) {\n            this._checked = value;\n            this._onChecked.fire({ element: this, checked: value });\n        }\n    }\n    get checkboxDisabled() {\n        return !!this.item.disabled;\n    }\n}\nvar QuickPickSeparatorFocusReason;\n(function (QuickPickSeparatorFocusReason) {\n    /**\n     * No item is hovered or active\n     */\n    QuickPickSeparatorFocusReason[QuickPickSeparatorFocusReason[\"NONE\"] = 0] = \"NONE\";\n    /**\n     * Some item within this section is hovered\n     */\n    QuickPickSeparatorFocusReason[QuickPickSeparatorFocusReason[\"MOUSE_HOVER\"] = 1] = \"MOUSE_HOVER\";\n    /**\n     * Some item within this section is active\n     */\n    QuickPickSeparatorFocusReason[QuickPickSeparatorFocusReason[\"ACTIVE_ITEM\"] = 2] = \"ACTIVE_ITEM\";\n})(QuickPickSeparatorFocusReason || (QuickPickSeparatorFocusReason = {}));\nclass QuickPickSeparatorElement extends BaseQuickPickItemElement {\n    constructor(index, fireSeparatorButtonTriggered, separator) {\n        super(index, false, separator);\n        this.fireSeparatorButtonTriggered = fireSeparatorButtonTriggered;\n        this.separator = separator;\n        this.children = new Array();\n        /**\n         * If this item is >0, it means that there is some item in the list that is either:\n         * * hovered over\n         * * active\n         */\n        this.focusInsideSeparator = QuickPickSeparatorFocusReason.NONE;\n    }\n}\nclass QuickInputItemDelegate {\n    getHeight(element) {\n        if (element instanceof QuickPickSeparatorElement) {\n            return 30;\n        }\n        return element.saneDetail ? 44 : 22;\n    }\n    getTemplateId(element) {\n        if (element instanceof QuickPickItemElement) {\n            return QuickPickItemElementRenderer.ID;\n        }\n        else {\n            return QuickPickSeparatorElementRenderer.ID;\n        }\n    }\n}\nclass QuickInputAccessibilityProvider {\n    getWidgetAriaLabel() {\n        return localize('quickInput', \"Quick Input\");\n    }\n    getAriaLabel(element) {\n        return element.separator?.label\n            ? `${element.saneAriaLabel}, ${element.separator.label}`\n            : element.saneAriaLabel;\n    }\n    getWidgetRole() {\n        return 'listbox';\n    }\n    getRole(element) {\n        return element.hasCheckbox ? 'checkbox' : 'option';\n    }\n    isChecked(element) {\n        if (!element.hasCheckbox || !(element instanceof QuickPickItemElement)) {\n            return undefined;\n        }\n        return {\n            get value() { return element.checked; },\n            onDidChange: e => element.onChecked(() => e()),\n        };\n    }\n}\nclass BaseQuickInputListRenderer {\n    constructor(hoverDelegate) {\n        this.hoverDelegate = hoverDelegate;\n    }\n    // TODO: only do the common stuff here and have a subclass handle their specific stuff\n    renderTemplate(container) {\n        const data = Object.create(null);\n        data.toDisposeElement = new DisposableStore();\n        data.toDisposeTemplate = new DisposableStore();\n        data.entry = dom.append(container, $('.quick-input-list-entry'));\n        // Checkbox\n        const label = dom.append(data.entry, $('label.quick-input-list-label'));\n        data.toDisposeTemplate.add(dom.addStandardDisposableListener(label, dom.EventType.CLICK, e => {\n            if (!data.checkbox.offsetParent) { // If checkbox not visible:\n                e.preventDefault(); // Prevent toggle of checkbox when it is immediately shown afterwards. #91740\n            }\n        }));\n        data.checkbox = dom.append(label, $('input.quick-input-list-checkbox'));\n        data.checkbox.type = 'checkbox';\n        // Rows\n        const rows = dom.append(label, $('.quick-input-list-rows'));\n        const row1 = dom.append(rows, $('.quick-input-list-row'));\n        const row2 = dom.append(rows, $('.quick-input-list-row'));\n        // Label\n        data.label = new IconLabel(row1, { supportHighlights: true, supportDescriptionHighlights: true, supportIcons: true, hoverDelegate: this.hoverDelegate });\n        data.toDisposeTemplate.add(data.label);\n        data.icon = dom.prepend(data.label.element, $('.quick-input-list-icon'));\n        // Keybinding\n        const keybindingContainer = dom.append(row1, $('.quick-input-list-entry-keybinding'));\n        data.keybinding = new KeybindingLabel(keybindingContainer, OS);\n        data.toDisposeTemplate.add(data.keybinding);\n        // Detail\n        const detailContainer = dom.append(row2, $('.quick-input-list-label-meta'));\n        data.detail = new IconLabel(detailContainer, { supportHighlights: true, supportIcons: true, hoverDelegate: this.hoverDelegate });\n        data.toDisposeTemplate.add(data.detail);\n        // Separator\n        data.separator = dom.append(data.entry, $('.quick-input-list-separator'));\n        // Actions\n        data.actionBar = new ActionBar(data.entry, this.hoverDelegate ? { hoverDelegate: this.hoverDelegate } : undefined);\n        data.actionBar.domNode.classList.add('quick-input-list-entry-action-bar');\n        data.toDisposeTemplate.add(data.actionBar);\n        return data;\n    }\n    disposeTemplate(data) {\n        data.toDisposeElement.dispose();\n        data.toDisposeTemplate.dispose();\n    }\n    disposeElement(_element, _index, data) {\n        data.toDisposeElement.clear();\n        data.actionBar.clear();\n    }\n}\nlet QuickPickItemElementRenderer = class QuickPickItemElementRenderer extends BaseQuickInputListRenderer {\n    static { QuickPickItemElementRenderer_1 = this; }\n    static { this.ID = 'quickpickitem'; }\n    constructor(hoverDelegate, themeService) {\n        super(hoverDelegate);\n        this.themeService = themeService;\n        // Follow what we do in the separator renderer\n        this._itemsWithSeparatorsFrequency = new Map();\n    }\n    get templateId() {\n        return QuickPickItemElementRenderer_1.ID;\n    }\n    renderTemplate(container) {\n        const data = super.renderTemplate(container);\n        data.toDisposeTemplate.add(dom.addStandardDisposableListener(data.checkbox, dom.EventType.CHANGE, e => {\n            data.element.checked = data.checkbox.checked;\n        }));\n        return data;\n    }\n    renderElement(node, index, data) {\n        const element = node.element;\n        data.element = element;\n        element.element = data.entry ?? undefined;\n        const mainItem = element.item;\n        data.checkbox.checked = element.checked;\n        data.toDisposeElement.add(element.onChecked(checked => data.checkbox.checked = checked));\n        data.checkbox.disabled = element.checkboxDisabled;\n        const { labelHighlights, descriptionHighlights, detailHighlights } = element;\n        // Icon\n        if (mainItem.iconPath) {\n            const icon = isDark(this.themeService.getColorTheme().type) ? mainItem.iconPath.dark : (mainItem.iconPath.light ?? mainItem.iconPath.dark);\n            const iconUrl = URI.revive(icon);\n            data.icon.className = 'quick-input-list-icon';\n            data.icon.style.backgroundImage = dom.asCSSUrl(iconUrl);\n        }\n        else {\n            data.icon.style.backgroundImage = '';\n            data.icon.className = mainItem.iconClass ? `quick-input-list-icon ${mainItem.iconClass}` : '';\n        }\n        // Label\n        let descriptionTitle;\n        // if we have a tooltip, that will be the hover,\n        // with the saneDescription as fallback if it\n        // is defined\n        if (!element.saneTooltip && element.saneDescription) {\n            descriptionTitle = {\n                markdown: {\n                    value: element.saneDescription,\n                    supportThemeIcons: true\n                },\n                markdownNotSupportedFallback: element.saneDescription\n            };\n        }\n        const options = {\n            matches: labelHighlights || [],\n            // If we have a tooltip, we want that to be shown and not any other hover\n            descriptionTitle,\n            descriptionMatches: descriptionHighlights || [],\n            labelEscapeNewLines: true\n        };\n        options.extraClasses = mainItem.iconClasses;\n        options.italic = mainItem.italic;\n        options.strikethrough = mainItem.strikethrough;\n        data.entry.classList.remove('quick-input-list-separator-as-item');\n        data.label.setLabel(element.saneLabel, element.saneDescription, options);\n        // Keybinding\n        data.keybinding.set(mainItem.keybinding);\n        // Detail\n        if (element.saneDetail) {\n            let title;\n            // If we have a tooltip, we want that to be shown and not any other hover\n            if (!element.saneTooltip) {\n                title = {\n                    markdown: {\n                        value: element.saneDetail,\n                        supportThemeIcons: true\n                    },\n                    markdownNotSupportedFallback: element.saneDetail\n                };\n            }\n            data.detail.element.style.display = '';\n            data.detail.setLabel(element.saneDetail, undefined, {\n                matches: detailHighlights,\n                title,\n                labelEscapeNewLines: true\n            });\n        }\n        else {\n            data.detail.element.style.display = 'none';\n        }\n        // Separator\n        if (element.separator?.label) {\n            data.separator.textContent = element.separator.label;\n            data.separator.style.display = '';\n            this.addItemWithSeparator(element);\n        }\n        else {\n            data.separator.style.display = 'none';\n        }\n        data.entry.classList.toggle('quick-input-list-separator-border', !!element.separator);\n        // Actions\n        const buttons = mainItem.buttons;\n        if (buttons && buttons.length) {\n            data.actionBar.push(buttons.map((button, index) => quickInputButtonToAction(button, `id-${index}`, () => element.fireButtonTriggered({ button, item: element.item }))), { icon: true, label: false });\n            data.entry.classList.add('has-actions');\n        }\n        else {\n            data.entry.classList.remove('has-actions');\n        }\n    }\n    disposeElement(element, _index, data) {\n        this.removeItemWithSeparator(element.element);\n        super.disposeElement(element, _index, data);\n    }\n    isItemWithSeparatorVisible(item) {\n        return this._itemsWithSeparatorsFrequency.has(item);\n    }\n    addItemWithSeparator(item) {\n        this._itemsWithSeparatorsFrequency.set(item, (this._itemsWithSeparatorsFrequency.get(item) || 0) + 1);\n    }\n    removeItemWithSeparator(item) {\n        const frequency = this._itemsWithSeparatorsFrequency.get(item) || 0;\n        if (frequency > 1) {\n            this._itemsWithSeparatorsFrequency.set(item, frequency - 1);\n        }\n        else {\n            this._itemsWithSeparatorsFrequency.delete(item);\n        }\n    }\n};\nQuickPickItemElementRenderer = QuickPickItemElementRenderer_1 = __decorate([\n    __param(1, IThemeService)\n], QuickPickItemElementRenderer);\nclass QuickPickSeparatorElementRenderer extends BaseQuickInputListRenderer {\n    constructor() {\n        super(...arguments);\n        // This is a frequency map because sticky scroll re-uses the same renderer to render a second\n        // instance of the same separator.\n        this._visibleSeparatorsFrequency = new Map();\n    }\n    static { this.ID = 'quickpickseparator'; }\n    get templateId() {\n        return QuickPickSeparatorElementRenderer.ID;\n    }\n    get visibleSeparators() {\n        return [...this._visibleSeparatorsFrequency.keys()];\n    }\n    isSeparatorVisible(separator) {\n        return this._visibleSeparatorsFrequency.has(separator);\n    }\n    renderElement(node, index, data) {\n        const element = node.element;\n        data.element = element;\n        element.element = data.entry ?? undefined;\n        element.element.classList.toggle('focus-inside', !!element.focusInsideSeparator);\n        const mainItem = element.separator;\n        const { labelHighlights, descriptionHighlights, detailHighlights } = element;\n        // Icon\n        data.icon.style.backgroundImage = '';\n        data.icon.className = '';\n        // Label\n        let descriptionTitle;\n        // if we have a tooltip, that will be the hover,\n        // with the saneDescription as fallback if it\n        // is defined\n        if (!element.saneTooltip && element.saneDescription) {\n            descriptionTitle = {\n                markdown: {\n                    value: element.saneDescription,\n                    supportThemeIcons: true\n                },\n                markdownNotSupportedFallback: element.saneDescription\n            };\n        }\n        const options = {\n            matches: labelHighlights || [],\n            // If we have a tooltip, we want that to be shown and not any other hover\n            descriptionTitle,\n            descriptionMatches: descriptionHighlights || [],\n            labelEscapeNewLines: true\n        };\n        data.entry.classList.add('quick-input-list-separator-as-item');\n        data.label.setLabel(element.saneLabel, element.saneDescription, options);\n        // Detail\n        if (element.saneDetail) {\n            let title;\n            // If we have a tooltip, we want that to be shown and not any other hover\n            if (!element.saneTooltip) {\n                title = {\n                    markdown: {\n                        value: element.saneDetail,\n                        supportThemeIcons: true\n                    },\n                    markdownNotSupportedFallback: element.saneDetail\n                };\n            }\n            data.detail.element.style.display = '';\n            data.detail.setLabel(element.saneDetail, undefined, {\n                matches: detailHighlights,\n                title,\n                labelEscapeNewLines: true\n            });\n        }\n        else {\n            data.detail.element.style.display = 'none';\n        }\n        // Separator\n        data.separator.style.display = 'none';\n        data.entry.classList.add('quick-input-list-separator-border');\n        // Actions\n        const buttons = mainItem.buttons;\n        if (buttons && buttons.length) {\n            data.actionBar.push(buttons.map((button, index) => quickInputButtonToAction(button, `id-${index}`, () => element.fireSeparatorButtonTriggered({ button, separator: element.separator }))), { icon: true, label: false });\n            data.entry.classList.add('has-actions');\n        }\n        else {\n            data.entry.classList.remove('has-actions');\n        }\n        this.addSeparator(element);\n    }\n    disposeElement(element, _index, data) {\n        this.removeSeparator(element.element);\n        if (!this.isSeparatorVisible(element.element)) {\n            element.element.element?.classList.remove('focus-inside');\n        }\n        super.disposeElement(element, _index, data);\n    }\n    addSeparator(separator) {\n        this._visibleSeparatorsFrequency.set(separator, (this._visibleSeparatorsFrequency.get(separator) || 0) + 1);\n    }\n    removeSeparator(separator) {\n        const frequency = this._visibleSeparatorsFrequency.get(separator) || 0;\n        if (frequency > 1) {\n            this._visibleSeparatorsFrequency.set(separator, frequency - 1);\n        }\n        else {\n            this._visibleSeparatorsFrequency.delete(separator);\n        }\n    }\n}\nlet QuickInputTree = class QuickInputTree extends Disposable {\n    constructor(parent, hoverDelegate, linkOpenerDelegate, id, instantiationService, accessibilityService) {\n        super();\n        this.parent = parent;\n        this.hoverDelegate = hoverDelegate;\n        this.linkOpenerDelegate = linkOpenerDelegate;\n        this.accessibilityService = accessibilityService;\n        //#region QuickInputTree Events\n        this._onKeyDown = new Emitter();\n        this._onLeave = new Emitter();\n        /**\n         * Event that is fired when the tree would no longer have focus.\n        */\n        this.onLeave = this._onLeave.event;\n        this._visibleCountObservable = observableValue('VisibleCount', 0);\n        this.onChangedVisibleCount = Event.fromObservable(this._visibleCountObservable, this._store);\n        this._allVisibleCheckedObservable = observableValue('AllVisibleChecked', false);\n        this.onChangedAllVisibleChecked = Event.fromObservable(this._allVisibleCheckedObservable, this._store);\n        this._checkedCountObservable = observableValue('CheckedCount', 0);\n        this.onChangedCheckedCount = Event.fromObservable(this._checkedCountObservable, this._store);\n        this._checkedElementsObservable = observableValueOpts({ equalsFn: equals }, new Array());\n        this.onChangedCheckedElements = Event.fromObservable(this._checkedElementsObservable, this._store);\n        this._onButtonTriggered = new Emitter();\n        this.onButtonTriggered = this._onButtonTriggered.event;\n        this._onSeparatorButtonTriggered = new Emitter();\n        this.onSeparatorButtonTriggered = this._onSeparatorButtonTriggered.event;\n        this._elementChecked = new Emitter();\n        this._elementCheckedEventBufferer = new EventBufferer();\n        //#endregion\n        this._hasCheckboxes = false;\n        this._inputElements = new Array();\n        this._elementTree = new Array();\n        this._itemElements = new Array();\n        // Elements that apply to the current set of elements\n        this._elementDisposable = this._register(new DisposableStore());\n        this._matchOnDescription = false;\n        this._matchOnDetail = false;\n        this._matchOnLabel = true;\n        this._matchOnLabelMode = 'fuzzy';\n        this._sortByLabel = true;\n        this._shouldLoop = true;\n        this._container = dom.append(this.parent, $('.quick-input-list'));\n        this._separatorRenderer = new QuickPickSeparatorElementRenderer(hoverDelegate);\n        this._itemRenderer = instantiationService.createInstance(QuickPickItemElementRenderer, hoverDelegate);\n        this._tree = this._register(instantiationService.createInstance((WorkbenchObjectTree), 'QuickInput', this._container, new QuickInputItemDelegate(), [this._itemRenderer, this._separatorRenderer], {\n            accessibilityProvider: new QuickInputAccessibilityProvider(),\n            setRowLineHeight: false,\n            multipleSelectionSupport: false,\n            hideTwistiesOfChildlessElements: true,\n            renderIndentGuides: RenderIndentGuides.None,\n            findWidgetEnabled: false,\n            indent: 0,\n            horizontalScrolling: false,\n            allowNonCollapsibleParents: true,\n            alwaysConsumeMouseWheel: true\n        }));\n        this._tree.getHTMLElement().id = id;\n        this._registerListeners();\n    }\n    //#region public getters/setters\n    get onDidChangeFocus() {\n        return Event.map(this._tree.onDidChangeFocus, e => e.elements.filter((e) => e instanceof QuickPickItemElement).map(e => e.item), this._store);\n    }\n    get onDidChangeSelection() {\n        return Event.map(this._tree.onDidChangeSelection, e => ({\n            items: e.elements.filter((e) => e instanceof QuickPickItemElement).map(e => e.item),\n            event: e.browserEvent\n        }), this._store);\n    }\n    get displayed() {\n        return this._container.style.display !== 'none';\n    }\n    set displayed(value) {\n        this._container.style.display = value ? '' : 'none';\n    }\n    get scrollTop() {\n        return this._tree.scrollTop;\n    }\n    set scrollTop(scrollTop) {\n        this._tree.scrollTop = scrollTop;\n    }\n    get ariaLabel() {\n        return this._tree.ariaLabel;\n    }\n    set ariaLabel(label) {\n        this._tree.ariaLabel = label ?? '';\n    }\n    set enabled(value) {\n        this._tree.getHTMLElement().style.pointerEvents = value ? '' : 'none';\n    }\n    get matchOnDescription() {\n        return this._matchOnDescription;\n    }\n    set matchOnDescription(value) {\n        this._matchOnDescription = value;\n    }\n    get matchOnDetail() {\n        return this._matchOnDetail;\n    }\n    set matchOnDetail(value) {\n        this._matchOnDetail = value;\n    }\n    get matchOnLabel() {\n        return this._matchOnLabel;\n    }\n    set matchOnLabel(value) {\n        this._matchOnLabel = value;\n    }\n    get matchOnLabelMode() {\n        return this._matchOnLabelMode;\n    }\n    set matchOnLabelMode(value) {\n        this._matchOnLabelMode = value;\n    }\n    get sortByLabel() {\n        return this._sortByLabel;\n    }\n    set sortByLabel(value) {\n        this._sortByLabel = value;\n    }\n    get shouldLoop() {\n        return this._shouldLoop;\n    }\n    set shouldLoop(value) {\n        this._shouldLoop = value;\n    }\n    //#endregion\n    //#region register listeners\n    _registerListeners() {\n        this._registerOnKeyDown();\n        this._registerOnContainerClick();\n        this._registerOnMouseMiddleClick();\n        this._registerOnTreeModelChanged();\n        this._registerOnElementChecked();\n        this._registerOnContextMenu();\n        this._registerHoverListeners();\n        this._registerSelectionChangeListener();\n        this._registerSeparatorActionShowingListeners();\n    }\n    _registerOnKeyDown() {\n        // TODO: Should this be added at a higher level?\n        this._register(this._tree.onKeyDown(e => {\n            const event = new StandardKeyboardEvent(e);\n            switch (event.keyCode) {\n                case 10 /* KeyCode.Space */:\n                    this.toggleCheckbox();\n                    break;\n            }\n            this._onKeyDown.fire(event);\n        }));\n    }\n    _registerOnContainerClick() {\n        this._register(dom.addDisposableListener(this._container, dom.EventType.CLICK, e => {\n            if (e.x || e.y) { // Avoid 'click' triggered by 'space' on checkbox.\n                this._onLeave.fire();\n            }\n        }));\n    }\n    _registerOnMouseMiddleClick() {\n        this._register(dom.addDisposableListener(this._container, dom.EventType.AUXCLICK, e => {\n            if (e.button === 1) {\n                this._onLeave.fire();\n            }\n        }));\n    }\n    _registerOnTreeModelChanged() {\n        this._register(this._tree.onDidChangeModel(() => {\n            const visibleCount = this._itemElements.filter(e => !e.hidden).length;\n            this._visibleCountObservable.set(visibleCount, undefined);\n            if (this._hasCheckboxes) {\n                this._updateCheckedObservables();\n            }\n        }));\n    }\n    _registerOnElementChecked() {\n        // Only fire the last event when buffered\n        this._register(this._elementCheckedEventBufferer.wrapEvent(this._elementChecked.event, (_, e) => e)(_ => this._updateCheckedObservables()));\n    }\n    _registerOnContextMenu() {\n        this._register(this._tree.onContextMenu(e => {\n            if (e.element) {\n                e.browserEvent.preventDefault();\n                // we want to treat a context menu event as\n                // a gesture to open the item at the index\n                // since we do not have any context menu\n                // this enables for example macOS to Ctrl-\n                // click on an item to open it.\n                this._tree.setSelection([e.element]);\n            }\n        }));\n    }\n    _registerHoverListeners() {\n        const delayer = this._register(new ThrottledDelayer(this.hoverDelegate.delay));\n        this._register(this._tree.onMouseOver(async (e) => {\n            // If we hover over an anchor element, we don't want to show the hover because\n            // the anchor may have a tooltip that we want to show instead.\n            if (dom.isHTMLAnchorElement(e.browserEvent.target)) {\n                delayer.cancel();\n                return;\n            }\n            if (\n            // anchors are an exception as called out above so we skip them here\n            !(dom.isHTMLAnchorElement(e.browserEvent.relatedTarget)) &&\n                // check if the mouse is still over the same element\n                dom.isAncestor(e.browserEvent.relatedTarget, e.element?.element)) {\n                return;\n            }\n            try {\n                await delayer.trigger(async () => {\n                    if (e.element instanceof QuickPickItemElement) {\n                        this.showHover(e.element);\n                    }\n                });\n            }\n            catch (e) {\n                // Ignore cancellation errors due to mouse out\n                if (!isCancellationError(e)) {\n                    throw e;\n                }\n            }\n        }));\n        this._register(this._tree.onMouseOut(e => {\n            // onMouseOut triggers every time a new element has been moused over\n            // even if it's on the same list item. We only want one event, so we\n            // check if the mouse is still over the same element.\n            if (dom.isAncestor(e.browserEvent.relatedTarget, e.element?.element)) {\n                return;\n            }\n            delayer.cancel();\n        }));\n    }\n    /**\n     * Register's focus change and mouse events so that we can track when items inside of a\n     * separator's section are focused or hovered so that we can display the separator's actions\n     */\n    _registerSeparatorActionShowingListeners() {\n        this._register(this._tree.onDidChangeFocus(e => {\n            const parent = e.elements[0]\n                ? this._tree.getParentElement(e.elements[0])\n                // treat null as focus lost and when we have no separators\n                : null;\n            for (const separator of this._separatorRenderer.visibleSeparators) {\n                const value = separator === parent;\n                // get bitness of ACTIVE_ITEM and check if it changed\n                const currentActive = !!(separator.focusInsideSeparator & QuickPickSeparatorFocusReason.ACTIVE_ITEM);\n                if (currentActive !== value) {\n                    if (value) {\n                        separator.focusInsideSeparator |= QuickPickSeparatorFocusReason.ACTIVE_ITEM;\n                    }\n                    else {\n                        separator.focusInsideSeparator &= ~QuickPickSeparatorFocusReason.ACTIVE_ITEM;\n                    }\n                    this._tree.rerender(separator);\n                }\n            }\n        }));\n        this._register(this._tree.onMouseOver(e => {\n            const parent = e.element\n                ? this._tree.getParentElement(e.element)\n                : null;\n            for (const separator of this._separatorRenderer.visibleSeparators) {\n                if (separator !== parent) {\n                    continue;\n                }\n                const currentMouse = !!(separator.focusInsideSeparator & QuickPickSeparatorFocusReason.MOUSE_HOVER);\n                if (!currentMouse) {\n                    separator.focusInsideSeparator |= QuickPickSeparatorFocusReason.MOUSE_HOVER;\n                    this._tree.rerender(separator);\n                }\n            }\n        }));\n        this._register(this._tree.onMouseOut(e => {\n            const parent = e.element\n                ? this._tree.getParentElement(e.element)\n                : null;\n            for (const separator of this._separatorRenderer.visibleSeparators) {\n                if (separator !== parent) {\n                    continue;\n                }\n                const currentMouse = !!(separator.focusInsideSeparator & QuickPickSeparatorFocusReason.MOUSE_HOVER);\n                if (currentMouse) {\n                    separator.focusInsideSeparator &= ~QuickPickSeparatorFocusReason.MOUSE_HOVER;\n                    this._tree.rerender(separator);\n                }\n            }\n        }));\n    }\n    _registerSelectionChangeListener() {\n        // When the user selects a separator, the separator will move to the top and focus will be\n        // set to the first element after the separator.\n        this._register(this._tree.onDidChangeSelection(e => {\n            const elementsWithoutSeparators = e.elements.filter((e) => e instanceof QuickPickItemElement);\n            if (elementsWithoutSeparators.length !== e.elements.length) {\n                if (e.elements.length === 1 && e.elements[0] instanceof QuickPickSeparatorElement) {\n                    this._tree.setFocus([e.elements[0].children[0]]);\n                    this._tree.reveal(e.elements[0], 0);\n                }\n                this._tree.setSelection(elementsWithoutSeparators);\n            }\n        }));\n    }\n    //#endregion\n    //#region public methods\n    setAllVisibleChecked(checked) {\n        this._elementCheckedEventBufferer.bufferEvents(() => {\n            this._itemElements.forEach(element => {\n                if (!element.hidden && !element.checkboxDisabled) {\n                    // Would fire an event if we didn't beffer the events\n                    element.checked = checked;\n                }\n            });\n        });\n    }\n    setElements(inputElements) {\n        this._elementDisposable.clear();\n        this._inputElements = inputElements;\n        this._hasCheckboxes = this.parent.classList.contains('show-checkboxes');\n        let currentSeparatorElement;\n        this._itemElements = new Array();\n        this._elementTree = inputElements.reduce((result, item, index) => {\n            let element;\n            if (item.type === 'separator') {\n                if (!item.buttons) {\n                    // This separator will be rendered as a part of the list item\n                    return result;\n                }\n                currentSeparatorElement = new QuickPickSeparatorElement(index, e => this._onSeparatorButtonTriggered.fire(e), item);\n                element = currentSeparatorElement;\n            }\n            else {\n                const previous = index > 0 ? inputElements[index - 1] : undefined;\n                let separator;\n                if (previous && previous.type === 'separator' && !previous.buttons) {\n                    // Found an inline separator so we clear out the current separator element\n                    currentSeparatorElement = undefined;\n                    separator = previous;\n                }\n                const qpi = new QuickPickItemElement(index, this._hasCheckboxes, e => this._onButtonTriggered.fire(e), this._elementChecked, item, separator);\n                this._itemElements.push(qpi);\n                if (currentSeparatorElement) {\n                    currentSeparatorElement.children.push(qpi);\n                    return result;\n                }\n                element = qpi;\n            }\n            result.push(element);\n            return result;\n        }, new Array());\n        this._setElementsToTree(this._elementTree);\n        // Accessibility hack, unfortunately on next tick\n        // https://github.com/microsoft/vscode/issues/211976\n        if (this.accessibilityService.isScreenReaderOptimized()) {\n            setTimeout(() => {\n                const focusedElement = this._tree.getHTMLElement().querySelector(`.monaco-list-row.focused`);\n                const parent = focusedElement?.parentNode;\n                if (focusedElement && parent) {\n                    const nextSibling = focusedElement.nextSibling;\n                    focusedElement.remove();\n                    parent.insertBefore(focusedElement, nextSibling);\n                }\n            }, 0);\n        }\n    }\n    setFocusedElements(items) {\n        const elements = items.map(item => this._itemElements.find(e => e.item === item))\n            .filter((e) => !!e)\n            .filter(e => !e.hidden);\n        this._tree.setFocus(elements);\n        if (items.length > 0) {\n            const focused = this._tree.getFocus()[0];\n            if (focused) {\n                this._tree.reveal(focused);\n            }\n        }\n    }\n    getActiveDescendant() {\n        return this._tree.getHTMLElement().getAttribute('aria-activedescendant');\n    }\n    setSelectedElements(items) {\n        const elements = items.map(item => this._itemElements.find(e => e.item === item))\n            .filter((e) => !!e);\n        this._tree.setSelection(elements);\n    }\n    getCheckedElements() {\n        return this._itemElements.filter(e => e.checked)\n            .map(e => e.item);\n    }\n    setCheckedElements(items) {\n        this._elementCheckedEventBufferer.bufferEvents(() => {\n            const checked = new Set();\n            for (const item of items) {\n                checked.add(item);\n            }\n            for (const element of this._itemElements) {\n                // Would fire an event if we didn't beffer the events\n                element.checked = checked.has(element.item);\n            }\n        });\n    }\n    focus(what) {\n        if (!this._itemElements.length) {\n            return;\n        }\n        if (what === QuickPickFocus.Second && this._itemElements.length < 2) {\n            what = QuickPickFocus.First;\n        }\n        switch (what) {\n            case QuickPickFocus.First:\n                this._tree.scrollTop = 0;\n                this._tree.focusFirst(undefined, (e) => e.element instanceof QuickPickItemElement);\n                break;\n            case QuickPickFocus.Second: {\n                this._tree.scrollTop = 0;\n                let isSecondItem = false;\n                this._tree.focusFirst(undefined, (e) => {\n                    if (!(e.element instanceof QuickPickItemElement)) {\n                        return false;\n                    }\n                    if (isSecondItem) {\n                        return true;\n                    }\n                    isSecondItem = !isSecondItem;\n                    return false;\n                });\n                break;\n            }\n            case QuickPickFocus.Last:\n                this._tree.scrollTop = this._tree.scrollHeight;\n                this._tree.focusLast(undefined, (e) => e.element instanceof QuickPickItemElement);\n                break;\n            case QuickPickFocus.Next: {\n                const prevFocus = this._tree.getFocus();\n                this._tree.focusNext(undefined, this._shouldLoop, undefined, (e) => {\n                    if (!(e.element instanceof QuickPickItemElement)) {\n                        return false;\n                    }\n                    this._tree.reveal(e.element);\n                    return true;\n                });\n                const currentFocus = this._tree.getFocus();\n                if (prevFocus.length && prevFocus[0] === currentFocus[0] && prevFocus[0] === this._itemElements[this._itemElements.length - 1]) {\n                    this._onLeave.fire();\n                }\n                break;\n            }\n            case QuickPickFocus.Previous: {\n                const prevFocus = this._tree.getFocus();\n                this._tree.focusPrevious(undefined, this._shouldLoop, undefined, (e) => {\n                    if (!(e.element instanceof QuickPickItemElement)) {\n                        return false;\n                    }\n                    const parent = this._tree.getParentElement(e.element);\n                    if (parent === null || parent.children[0] !== e.element) {\n                        this._tree.reveal(e.element);\n                    }\n                    else {\n                        // Only if we are the first child of a separator do we reveal the separator\n                        this._tree.reveal(parent);\n                    }\n                    return true;\n                });\n                const currentFocus = this._tree.getFocus();\n                if (prevFocus.length && prevFocus[0] === currentFocus[0] && prevFocus[0] === this._itemElements[0]) {\n                    this._onLeave.fire();\n                }\n                break;\n            }\n            case QuickPickFocus.NextPage:\n                this._tree.focusNextPage(undefined, (e) => {\n                    if (!(e.element instanceof QuickPickItemElement)) {\n                        return false;\n                    }\n                    this._tree.reveal(e.element);\n                    return true;\n                });\n                break;\n            case QuickPickFocus.PreviousPage:\n                this._tree.focusPreviousPage(undefined, (e) => {\n                    if (!(e.element instanceof QuickPickItemElement)) {\n                        return false;\n                    }\n                    const parent = this._tree.getParentElement(e.element);\n                    if (parent === null || parent.children[0] !== e.element) {\n                        this._tree.reveal(e.element);\n                    }\n                    else {\n                        this._tree.reveal(parent);\n                    }\n                    return true;\n                });\n                break;\n            case QuickPickFocus.NextSeparator: {\n                let foundSeparatorAsItem = false;\n                const before = this._tree.getFocus()[0];\n                this._tree.focusNext(undefined, true, undefined, (e) => {\n                    if (foundSeparatorAsItem) {\n                        // This should be the index right after the separator so it\n                        // is the item we want to focus.\n                        return true;\n                    }\n                    if (e.element instanceof QuickPickSeparatorElement) {\n                        foundSeparatorAsItem = true;\n                        // If the separator is visible, then we should just reveal its first child so it's not as jarring.\n                        if (this._separatorRenderer.isSeparatorVisible(e.element)) {\n                            this._tree.reveal(e.element.children[0]);\n                        }\n                        else {\n                            // If the separator is not visible, then we should\n                            // push it up to the top of the list.\n                            this._tree.reveal(e.element, 0);\n                        }\n                    }\n                    else if (e.element instanceof QuickPickItemElement) {\n                        if (e.element.separator) {\n                            if (this._itemRenderer.isItemWithSeparatorVisible(e.element)) {\n                                this._tree.reveal(e.element);\n                            }\n                            else {\n                                this._tree.reveal(e.element, 0);\n                            }\n                            return true;\n                        }\n                        else if (e.element === this._elementTree[0]) {\n                            // We should stop at the first item in the list if it's a regular item.\n                            this._tree.reveal(e.element, 0);\n                            return true;\n                        }\n                    }\n                    return false;\n                });\n                const after = this._tree.getFocus()[0];\n                if (before === after) {\n                    // If we didn't move, then we should just move to the end\n                    // of the list.\n                    this._tree.scrollTop = this._tree.scrollHeight;\n                    this._tree.focusLast(undefined, (e) => e.element instanceof QuickPickItemElement);\n                }\n                break;\n            }\n            case QuickPickFocus.PreviousSeparator: {\n                let focusElement;\n                // If we are already sitting on an inline separator, then we\n                // have already found the _current_ separator and need to\n                // move to the previous one.\n                let foundSeparator = !!this._tree.getFocus()[0]?.separator;\n                this._tree.focusPrevious(undefined, true, undefined, (e) => {\n                    if (e.element instanceof QuickPickSeparatorElement) {\n                        if (foundSeparator) {\n                            if (!focusElement) {\n                                if (this._separatorRenderer.isSeparatorVisible(e.element)) {\n                                    this._tree.reveal(e.element);\n                                }\n                                else {\n                                    this._tree.reveal(e.element, 0);\n                                }\n                                focusElement = e.element.children[0];\n                            }\n                        }\n                        else {\n                            foundSeparator = true;\n                        }\n                    }\n                    else if (e.element instanceof QuickPickItemElement) {\n                        if (!focusElement) {\n                            if (e.element.separator) {\n                                if (this._itemRenderer.isItemWithSeparatorVisible(e.element)) {\n                                    this._tree.reveal(e.element);\n                                }\n                                else {\n                                    this._tree.reveal(e.element, 0);\n                                }\n                                focusElement = e.element;\n                            }\n                            else if (e.element === this._elementTree[0]) {\n                                // We should stop at the first item in the list if it's a regular item.\n                                this._tree.reveal(e.element, 0);\n                                return true;\n                            }\n                        }\n                    }\n                    return false;\n                });\n                if (focusElement) {\n                    this._tree.setFocus([focusElement]);\n                }\n                break;\n            }\n        }\n    }\n    clearFocus() {\n        this._tree.setFocus([]);\n    }\n    domFocus() {\n        this._tree.domFocus();\n    }\n    layout(maxHeight) {\n        this._tree.getHTMLElement().style.maxHeight = maxHeight ? `${\n        // Make sure height aligns with list item heights\n        Math.floor(maxHeight / 44) * 44\n            // Add some extra height so that it's clear there's more to scroll\n            + 6}px` : '';\n        this._tree.layout();\n    }\n    filter(query) {\n        if (!(this._sortByLabel || this._matchOnLabel || this._matchOnDescription || this._matchOnDetail)) {\n            this._tree.layout();\n            return false;\n        }\n        const queryWithWhitespace = query;\n        query = query.trim();\n        // Reset filtering\n        if (!query || !(this.matchOnLabel || this.matchOnDescription || this.matchOnDetail)) {\n            this._itemElements.forEach(element => {\n                element.labelHighlights = undefined;\n                element.descriptionHighlights = undefined;\n                element.detailHighlights = undefined;\n                element.hidden = false;\n                const previous = element.index && this._inputElements[element.index - 1];\n                if (element.item) {\n                    element.separator = previous && previous.type === 'separator' && !previous.buttons ? previous : undefined;\n                }\n            });\n        }\n        // Filter by value (since we support icons in labels, use $(..) aware fuzzy matching)\n        else {\n            let currentSeparator;\n            this._elementTree.forEach(element => {\n                let labelHighlights;\n                if (this.matchOnLabelMode === 'fuzzy') {\n                    labelHighlights = this.matchOnLabel ? matchesFuzzyIconAware(query, parseLabelWithIcons(element.saneLabel)) ?? undefined : undefined;\n                }\n                else {\n                    labelHighlights = this.matchOnLabel ? matchesContiguousIconAware(queryWithWhitespace, parseLabelWithIcons(element.saneLabel)) ?? undefined : undefined;\n                }\n                const descriptionHighlights = this.matchOnDescription ? matchesFuzzyIconAware(query, parseLabelWithIcons(element.saneDescription || '')) ?? undefined : undefined;\n                const detailHighlights = this.matchOnDetail ? matchesFuzzyIconAware(query, parseLabelWithIcons(element.saneDetail || '')) ?? undefined : undefined;\n                if (labelHighlights || descriptionHighlights || detailHighlights) {\n                    element.labelHighlights = labelHighlights;\n                    element.descriptionHighlights = descriptionHighlights;\n                    element.detailHighlights = detailHighlights;\n                    element.hidden = false;\n                }\n                else {\n                    element.labelHighlights = undefined;\n                    element.descriptionHighlights = undefined;\n                    element.detailHighlights = undefined;\n                    element.hidden = element.item ? !element.item.alwaysShow : true;\n                }\n                // Ensure separators are filtered out first before deciding if we need to bring them back\n                if (element.item) {\n                    element.separator = undefined;\n                }\n                else if (element.separator) {\n                    element.hidden = true;\n                }\n                // we can show the separator unless the list gets sorted by match\n                if (!this.sortByLabel) {\n                    const previous = element.index && this._inputElements[element.index - 1];\n                    currentSeparator = previous && previous.type === 'separator' ? previous : currentSeparator;\n                    if (currentSeparator && !element.hidden) {\n                        element.separator = currentSeparator;\n                        currentSeparator = undefined;\n                    }\n                }\n            });\n        }\n        const shownElements = this._elementTree.filter(element => !element.hidden);\n        // Sort by value\n        if (this.sortByLabel && query) {\n            const normalizedSearchValue = query.toLowerCase();\n            shownElements.sort((a, b) => {\n                return compareEntries(a, b, normalizedSearchValue);\n            });\n        }\n        let currentSeparator;\n        const finalElements = shownElements.reduce((result, element, index) => {\n            if (element instanceof QuickPickItemElement) {\n                if (currentSeparator) {\n                    currentSeparator.children.push(element);\n                }\n                else {\n                    result.push(element);\n                }\n            }\n            else if (element instanceof QuickPickSeparatorElement) {\n                element.children = [];\n                currentSeparator = element;\n                result.push(element);\n            }\n            return result;\n        }, new Array());\n        this._setElementsToTree(finalElements);\n        this._tree.layout();\n        return true;\n    }\n    toggleCheckbox() {\n        this._elementCheckedEventBufferer.bufferEvents(() => {\n            const elements = this._tree.getFocus().filter((e) => e instanceof QuickPickItemElement);\n            const allChecked = this._allVisibleChecked(elements);\n            for (const element of elements) {\n                if (!element.checkboxDisabled) {\n                    // Would fire an event if we didn't have the flag set\n                    element.checked = !allChecked;\n                }\n            }\n        });\n    }\n    style(styles) {\n        this._tree.style(styles);\n    }\n    toggleHover() {\n        const focused = this._tree.getFocus()[0];\n        if (!focused?.saneTooltip || !(focused instanceof QuickPickItemElement)) {\n            return;\n        }\n        // if there's a hover already, hide it (toggle off)\n        if (this._lastHover && !this._lastHover.isDisposed) {\n            this._lastHover.dispose();\n            return;\n        }\n        // If there is no hover, show it (toggle on)\n        this.showHover(focused);\n        const store = new DisposableStore();\n        store.add(this._tree.onDidChangeFocus(e => {\n            if (e.elements[0] instanceof QuickPickItemElement) {\n                this.showHover(e.elements[0]);\n            }\n        }));\n        if (this._lastHover) {\n            store.add(this._lastHover);\n        }\n        this._elementDisposable.add(store);\n    }\n    //#endregion\n    //#region private methods\n    _setElementsToTree(elements) {\n        const treeElements = new Array();\n        for (const element of elements) {\n            if (element instanceof QuickPickSeparatorElement) {\n                treeElements.push({\n                    element,\n                    collapsible: false,\n                    collapsed: false,\n                    children: element.children.map(e => ({\n                        element: e,\n                        collapsible: false,\n                        collapsed: false,\n                    })),\n                });\n            }\n            else {\n                treeElements.push({\n                    element,\n                    collapsible: false,\n                    collapsed: false,\n                });\n            }\n        }\n        this._tree.setChildren(null, treeElements);\n    }\n    _allVisibleChecked(elements, whenNoneVisible = true) {\n        for (let i = 0, n = elements.length; i < n; i++) {\n            const element = elements[i];\n            if (!element.hidden) {\n                if (!element.checked) {\n                    return false;\n                }\n                else {\n                    whenNoneVisible = true;\n                }\n            }\n        }\n        return whenNoneVisible;\n    }\n    _updateCheckedObservables() {\n        this._allVisibleCheckedObservable.set(this._allVisibleChecked(this._itemElements, false), undefined);\n        const checkedCount = this._itemElements.filter(element => element.checked).length;\n        this._checkedCountObservable.set(checkedCount, undefined);\n        this._checkedElementsObservable.set(this.getCheckedElements(), undefined);\n    }\n    /**\n     * Disposes of the hover and shows a new one for the given index if it has a tooltip.\n     * @param element The element to show the hover for\n     */\n    showHover(element) {\n        if (this._lastHover && !this._lastHover.isDisposed) {\n            this.hoverDelegate.onDidHideHover?.();\n            this._lastHover?.dispose();\n        }\n        if (!element.element || !element.saneTooltip) {\n            return;\n        }\n        this._lastHover = this.hoverDelegate.showHover({\n            content: element.saneTooltip,\n            target: element.element,\n            linkHandler: (url) => {\n                this.linkOpenerDelegate(url);\n            },\n            appearance: {\n                showPointer: true,\n            },\n            container: this._container,\n            position: {\n                hoverPosition: 1 /* HoverPosition.RIGHT */\n            }\n        }, false);\n    }\n};\n__decorate([\n    memoize\n], QuickInputTree.prototype, \"onDidChangeFocus\", null);\n__decorate([\n    memoize\n], QuickInputTree.prototype, \"onDidChangeSelection\", null);\nQuickInputTree = __decorate([\n    __param(4, IInstantiationService),\n    __param(5, IAccessibilityService)\n], QuickInputTree);\nexport { QuickInputTree };\nfunction matchesContiguousIconAware(query, target) {\n    const { text, iconOffsets } = target;\n    // Return early if there are no icon markers in the word to match against\n    if (!iconOffsets || iconOffsets.length === 0) {\n        return matchesContiguous(query, text);\n    }\n    // Trim the word to match against because it could have leading\n    // whitespace now if the word started with an icon\n    const wordToMatchAgainstWithoutIconsTrimmed = ltrim(text, ' ');\n    const leadingWhitespaceOffset = text.length - wordToMatchAgainstWithoutIconsTrimmed.length;\n    // match on value without icon\n    const matches = matchesContiguous(query, wordToMatchAgainstWithoutIconsTrimmed);\n    // Map matches back to offsets with icon and trimming\n    if (matches) {\n        for (const match of matches) {\n            const iconOffset = iconOffsets[match.start + leadingWhitespaceOffset] /* icon offsets at index */ + leadingWhitespaceOffset /* overall leading whitespace offset */;\n            match.start += iconOffset;\n            match.end += iconOffset;\n        }\n    }\n    return matches;\n}\nfunction matchesContiguous(word, wordToMatchAgainst) {\n    const matchIndex = wordToMatchAgainst.toLowerCase().indexOf(word.toLowerCase());\n    if (matchIndex !== -1) {\n        return [{ start: matchIndex, end: matchIndex + word.length }];\n    }\n    return null;\n}\nfunction compareEntries(elementA, elementB, lookFor) {\n    const labelHighlightsA = elementA.labelHighlights || [];\n    const labelHighlightsB = elementB.labelHighlights || [];\n    if (labelHighlightsA.length && !labelHighlightsB.length) {\n        return -1;\n    }\n    if (!labelHighlightsA.length && labelHighlightsB.length) {\n        return 1;\n    }\n    if (labelHighlightsA.length === 0 && labelHighlightsB.length === 0) {\n        return 0;\n    }\n    return compareAnything(elementA.saneSortLabel, elementB.saneSortLabel, lookFor);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}