{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, normalizeStyle as _normalizeStyle } from \"vue\";\nconst _hoisted_1 = {\n  class: \"quiz-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"start-overlay\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"end-overlay\"\n};\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = {\n  class: \"question\"\n};\nconst _hoisted_6 = {\n  class: \"options\"\n};\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = {\n  class: \"timer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Start Overlay \"), $data.showStartOverlay ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_cache[4] || (_cache[4] = _createElementVNode(\"h2\", null, \"Welcome to the Quiz Challenge\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.startQuiz && $options.startQuiz(...args))\n  }, \"Start Quiz\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.exitQuiz && $options.exitQuiz(...args))\n  }, \"Exit\")])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" End Overlay \"), $data.showEndOverlay ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_cache[5] || (_cache[5] = _createElementVNode(\"h2\", null, \"Congratulations! You've completed all challenges.\", -1 /* HOISTED */)), _createElementVNode(\"p\", null, \"Your score: \" + _toDisplayString($data.score) + \" / \" + _toDisplayString($data.questions.length), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Time taken: \" + _toDisplayString($options.format_time($data.elapsedTime)), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.save_game_data && $options.save_game_data(...args))\n  }, \"End & Save\"), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.endQuiz && $options.endQuiz(...args))\n  }, \"End\")])) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 2\n  }, [_createCommentVNode(\" Quiz Content \"), _createElementVNode(\"div\", null, [$data.currentQuestionIndex < $data.questions.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"h2\", null, \" Quiz Challenge \" + _toDisplayString($data.currentQuestionIndex + 1) + \"/\" + _toDisplayString($data.questions.length), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_5, _toDisplayString($options.currentQuestion.question), 1 /* TEXT */), _createElementVNode(\"ul\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.currentQuestion.options, (option, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, [_createElementVNode(\"button\", {\n      onClick: $event => $options.checkAnswer(option),\n      style: _normalizeStyle({\n        color: $data.optionFontcolor\n      })\n    }, _toDisplayString(option), 13 /* TEXT, STYLE, PROPS */, _hoisted_7)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_8, \"Time: \" + _toDisplayString($options.format_time($data.elapsedTime)), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createCommentVNode","$data","showStartOverlay","_hoisted_2","_createElementVNode","onClick","_cache","args","$options","startQuiz","exitQuiz","showEndOverlay","_hoisted_3","_toDisplayString","score","questions","length","format_time","elapsedTime","save_game_data","endQuiz","_Fragment","currentQuestionIndex","_hoisted_4","_hoisted_5","currentQuestion","question","_hoisted_6","_renderList","options","option","index","$event","checkAnswer","style","_normalizeStyle","color","optionFontcolor","_hoisted_7","_hoisted_8"],"sources":["C:\\Users\\ruzhe\\CODEHUB-PH\\GAMES\\code-master\\src\\components\\Dashboard\\GameComponents\\HtmlMission\\HtmlLvl1.vue"],"sourcesContent":["<template>\r\n    <div class=\"quiz-container\">\r\n        <!-- Start Overlay -->\r\n        <div v-if=\"showStartOverlay\" class=\"start-overlay\">\r\n            <h2>Welcome to the Quiz Challenge</h2>\r\n            <button @click=\"startQuiz\">Start Quiz</button>\r\n            <button @click=\"exitQuiz\">Exit</button>\r\n        </div>\r\n\r\n        <!-- End Overlay -->\r\n        <div v-if=\"showEndOverlay\" class=\"end-overlay\">\r\n            <h2>Congratulations! You've completed all challenges.</h2>\r\n            <p>Your score: {{ score }} / {{ questions.length }}</p>\r\n            <p>Time taken: {{ format_time(elapsedTime) }}</p>\r\n            <button @click=\"save_game_data\">End & Save</button>\r\n            <button @click=\"endQuiz\">End</button>\r\n        </div>\r\n\r\n        <!-- Quiz Content -->\r\n        <div v-else>\r\n            <div v-if=\"currentQuestionIndex < questions.length\">\r\n                <h2>\r\n                    Quiz Challenge {{ currentQuestionIndex + 1 }}/{{ questions.length }}\r\n                </h2>\r\n                <div class=\"question\">{{ currentQuestion.question }}</div>\r\n                <ul class=\"options\">\r\n                    <li v-for=\"(option, index) in currentQuestion.options\" :key=\"index\">\r\n                        <button @click=\"checkAnswer(option)\" :style=\"{ color: optionFontcolor }\">\r\n                            {{ option }}\r\n                        </button>\r\n                    </li>\r\n                </ul>\r\n                <div class=\"timer\">Time: {{ format_time(elapsedTime) }}</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from \"vuex\";\r\nimport { shuffleArray, formatTime } from \"../../../../utils/GameUtils\";\r\nimport GameData from \"../GameData.json\";\r\nimport { savePreference,recordAttempt } from \"@/utils/PreferencesService\";\r\nexport default {\r\n    data() {\r\n        return {\r\n            questions: [],\r\n            currentQuestionIndex: 0,\r\n            score: 0,\r\n            timer: null,\r\n            elapsedTime: 0,\r\n            showStartOverlay: true,\r\n            showEndOverlay: false,\r\n            optionFontcolor: \"\",\r\n            challenge: 'HTML-QUIZ-LVL-1',\r\n            attemptFileName: 'HTML-QUIZ-LVL-1-ATTEMPT',\r\n        };\r\n    },\r\n    computed: {\r\n        ...mapGetters([\"currentTheme\"]),\r\n        currentQuestion() {\r\n            return this.questions[this.currentQuestionIndex];\r\n        },\r\n    },\r\n    methods: {\r\n        async save_game_data() {\r\n            const keys = this.challenge;\r\n            const payload = {\r\n                challenge:this.challenge,\r\n                score:this.score,\r\n                timeFinish:this.elapsedTime\r\n            }\r\n            await savePreference(keys,payload)\r\n            this.$router.go(-1);\r\n        },\r\n        current_theme() {\r\n            this.optionFontcolor = this.currentTheme === \"dark\" ? \"white\" : \"black\";\r\n        },\r\n        checkAnswer(selectedOption) {\r\n            if (selectedOption === this.currentQuestion.answer) {\r\n                this.score++;\r\n            }\r\n            this.currentQuestionIndex++;\r\n            if (this.currentQuestionIndex >= this.questions.length) {\r\n                clearInterval(this.timer);\r\n                this.showEndOverlay = true;\r\n            }\r\n        },\r\n        async startQuiz() {\r\n            this.showStartOverlay = false;\r\n            this.startTimer();\r\n            await recordAttempt(this.attemptFileName);\r\n        },\r\n        startTimer() {\r\n            this.timer = setInterval(() => {\r\n                this.elapsedTime++;\r\n            }, 1000);\r\n        },\r\n        format_time(seconds) {\r\n            return formatTime(seconds);\r\n        },\r\n        endQuiz() {\r\n            clearInterval(this.timer);\r\n            this.showEndOverlay = false;\r\n            this.showStartOverlay = true;\r\n            this.$router.go(-1)\r\n        },\r\n        exitQuiz() {\r\n            clearInterval(this.timer);\r\n            this.$router.go(-1);\r\n        },\r\n    },\r\n    mounted() {\r\n        this.current_theme();\r\n    },\r\n    created() {\r\n        const id = \"html-game-lvl1\";\r\n\r\n        const filterData = (id) => {\r\n            return GameData.DataForLvl1.filter((data) => data.id === id);\r\n        };\r\n        this.questions = shuffleArray(filterData(id));\r\n    },\r\n    beforeUnmount() {\r\n        if (this.timer) clearInterval(this.timer);\r\n    },\r\n};\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}